From waskd6 at missouri.edu  Sat Aug  2 15:38:17 2025
From: waskd6 at missouri.edu (Starms, William)
Date: Sat, 2 Aug 2025 22:38:17 +0000
Subject: [gdal-dev] Masked histogram calculation
Message-ID: <CO1PR01MB7243EABB8747CF081C5A3324F921A@CO1PR01MB7243.prod.exchangelabs.com>

Hi everyone, I?ve been using GetHistogram but I need to support rasters with alpha channels and those run through nearblack. I don?t see masked histogramming mentioned in the docs. I do see the masked read functions, but it looks like numpy?s masked array histogram function is one of many ma functions that don't work correctly(?) (https://github.com/numpy/numpy/issues/10019)

Does anyone have any creative ideas to share?

For masked data, the simplest seems to be iteratively histogramming manually masked blocks.

It looks like nearblack can handle >4 bands, but I need multibyte dtypes. I was thinking of rasterizing a VRT that uses the new equations system to compute  A | (A >> 8) or maybe a two step equivalent of bool(A) -> sum(A) and running that through nearblack to make an alpha channel for the above method.


Appreciate everyone?s thoughts.

Will
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20250802/c841c8fb/attachment.htm>

From jctoney at gmail.com  Sun Aug  3 18:46:04 2025
From: jctoney at gmail.com (Chris Toney)
Date: Sun, 3 Aug 2025 19:46:04 -0600
Subject: [gdal-dev] argument default value in the C API to GDALAlgorithmArg
Message-ID: <CALRbqORzdGH0-_RDX9ehRZz9NV0nStZ10Bkz+dZmuYGM7ZH5-A@mail.gmail.com>

Hi,
In the C API there is GDALAlgorithmArgHasDefaultValue(), but no
interface to the GetDefault() class method to access the value itself
when there is one (nor in the Python bindings, AFAICS).

I don't believe there is a fromHandle() method on GDALAlgorithmArg to
get to the C++ object.

Is there possibly a workaround for that when working through the C API?

Chris

From even.rouault at spatialys.com  Mon Aug  4 01:42:41 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 4 Aug 2025 10:42:41 +0200
Subject: [gdal-dev] argument default value in the C API to
 GDALAlgorithmArg
In-Reply-To: <CALRbqORzdGH0-_RDX9ehRZz9NV0nStZ10Bkz+dZmuYGM7ZH5-A@mail.gmail.com>
References: <CALRbqORzdGH0-_RDX9ehRZz9NV0nStZ10Bkz+dZmuYGM7ZH5-A@mail.gmail.com>
Message-ID: <f0384ff4-3c76-474b-a1b7-253ea58725f7@spatialys.com>

Hi Chris,

This was indeed missing in the C API. Queued for 3.12 in 
https://github.com/OSGeo/gdal/pull/12853

If you need this in 3.11, you can define the following implementation 
detail in your code

struct GDALAlgorithmArgHS
{
 ??? GDALAlgorithmArg *ptr = nullptr;

 ??? explicit GDALAlgorithmArgHS(GDALAlgorithmArg *arg) : ptr(arg)
 ??? {
 ??? }
};

but better conditionalize it to 3.11 only, so that to avoid issues in 
later version if we would change the definition of struct GDALAlgorithmArgHS

and then do things like

GDALAlgorithmArgH hArg;

hArg->ptr->GetDefault<std::string>();

Even


Le 04/08/2025 ? 03:46, Chris Toney via gdal-dev a ?crit?:
> Hi,
> In the C API there is GDALAlgorithmArgHasDefaultValue(), but no
> interface to the GetDefault() class method to access the value itself
> when there is one (nor in the Python bindings, AFAICS).
>
> I don't believe there is a fromHandle() method on GDALAlgorithmArg to
> get to the C++ object.
>
> Is there possibly a workaround for that when working through the C API?
>
> Chris
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From robin at rtwilson.com  Mon Aug  4 04:19:12 2025
From: robin at rtwilson.com (Robin Wilson)
Date: Mon, 4 Aug 2025 12:19:12 +0100
Subject: [gdal-dev] gdal vector concat fails with `Too many open files` but
 ogrmerge works fine
Message-ID: <etPan.68909730.264f62fe.23f5@rtwilson.com>

Hi,

I?ve just started experimenting with the new gdal command line tools.

I?ve tried the following command to merge a few thousand GeoJSON files into one GeoPackage:

gdal vector concat --mode=single gb-postcodes-v5/units/*.geojson all_unit_postcodes.gpkg

I get thousands of errors like:

ERROR 4: gb-postcodes-v5/units/KY4.geojson: Too many open files

Switching back to ogrmerge, I find that this command works fine:

ogrmerge -single -progress -o all_unit_postcodes_v2.gpkg gb-postcodes-v5/units/*.geojson

Has there been a change which means that gdal vector concat tries to open all the files in parallel, and then runs out of spare file handles? Is there any way around this for the new gdal vector concat command?

Best regards,

Robin

Dr Robin Wilson
www.rtwilson.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20250804/68917f07/attachment.htm>

From even.rouault at spatialys.com  Mon Aug  4 06:06:02 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 4 Aug 2025 15:06:02 +0200
Subject: [gdal-dev] gdal vector concat fails with `Too many open files`
 but ogrmerge works fine
In-Reply-To: <etPan.68909730.264f62fe.23f5@rtwilson.com>
References: <etPan.68909730.264f62fe.23f5@rtwilson.com>
Message-ID: <08b3066c-28d2-4638-bc53-126800304901@spatialys.com>

Robin,

this was an oversight of the implementation of gdal vector concat. Fixed 
per https://github.com/OSGeo/gdal/pull/12856

Apart from using ogrmerge, a workaround is to increate the limit of open 
files with "ulimit -n some_number"

Even

Le 04/08/2025 ? 13:19, Robin Wilson via gdal-dev a ?crit?:
> Hi,
>
> I?ve just started experimenting with the new gdal command line tools.
>
> I?ve tried the following command to merge a few thousand GeoJSON files 
> into one GeoPackage:
>
> gdal vector concat --mode=single gb-postcodes-v5/units/*.geojson 
> all_unit_postcodes.gpkg
>
> I get thousands of errors like:
>
> ERROR 4: gb-postcodes-v5/units/KY4.geojson: Too many open files
>
> Switching back to ogrmerge, I find that this command works fine:
>
> ogrmerge -single -progress -o all_unit_postcodes_v2.gpkg 
> gb-postcodes-v5/units/*.geojson
>
> Has there been a change which means that gdal vector concat tries to 
> open all the files in parallel, and then runs out of spare file 
> handles? Is there any way around this for the new gdal vector concat 
> command?
>
> Best regards,
>
> Robin
>
> Dr Robin Wilson
> www.rtwilson.com
>
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20250804/3565c982/attachment.htm>

From jctoney at gmail.com  Mon Aug  4 14:43:31 2025
From: jctoney at gmail.com (Chris Toney)
Date: Mon, 4 Aug 2025 15:43:31 -0600
Subject: [gdal-dev] argument default value in the C API to
 GDALAlgorithmArg
In-Reply-To: <f0384ff4-3c76-474b-a1b7-253ea58725f7@spatialys.com>
References: <CALRbqORzdGH0-_RDX9ehRZz9NV0nStZ10Bkz+dZmuYGM7ZH5-A@mail.gmail.com>
 <f0384ff4-3c76-474b-a1b7-253ea58725f7@spatialys.com>
Message-ID: <CALRbqOS8B0fmD6DyxpVZ0Qs-RnpAATm=Jvo93OA4YdDMSfVw-A@mail.gmail.com>

Hi Even,
Much appreciated! That workaround solved for 3.11.

Chris


On Mon, Aug 4, 2025, 2:42 AM Even Rouault <even.rouault at spatialys.com>
wrote:

> Hi Chris,
>
> This was indeed missing in the C API. Queued for 3.12 in
> https://github.com/OSGeo/gdal/pull/12853
>
> If you need this in 3.11, you can define the following implementation
> detail in your code
>
> struct GDALAlgorithmArgHS
> {
>      GDALAlgorithmArg *ptr = nullptr;
>
>      explicit GDALAlgorithmArgHS(GDALAlgorithmArg *arg) : ptr(arg)
>      {
>      }
> };
>
> but better conditionalize it to 3.11 only, so that to avoid issues in
> later version if we would change the definition of struct
> GDALAlgorithmArgHS
>
> and then do things like
>
> GDALAlgorithmArgH hArg;
>
> hArg->ptr->GetDefault<std::string>();
>
> Even
>
>
> Le 04/08/2025 ? 03:46, Chris Toney via gdal-dev a ?crit :
> > Hi,
> > In the C API there is GDALAlgorithmArgHasDefaultValue(), but no
> > interface to the GetDefault() class method to access the value itself
> > when there is one (nor in the Python bindings, AFAICS).
> >
> > I don't believe there is a fromHandle() method on GDALAlgorithmArg to
> > get to the C++ object.
> >
> > Is there possibly a workaround for that when working through the C API?
> >
> > Chris
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20250804/074b7d76/attachment.htm>

From jctoney at gmail.com  Wed Aug  6 21:44:16 2025
From: jctoney at gmail.com (Chris Toney)
Date: Wed, 6 Aug 2025 22:44:16 -0600
Subject: [gdal-dev] argument default value in the C API to
 GDALAlgorithmArg
In-Reply-To: <f0384ff4-3c76-474b-a1b7-253ea58725f7@spatialys.com>
References: <CALRbqORzdGH0-_RDX9ehRZz9NV0nStZ10Bkz+dZmuYGM7ZH5-A@mail.gmail.com>
 <f0384ff4-3c76-474b-a1b7-253ea58725f7@spatialys.com>
Message-ID: <CALRbqOQopaT0Hz0nw2pRNHhjT1yT1CiYvF1FvoAe4VEu-ggsog@mail.gmail.com>

Hi Even,
> If you need this in 3.11, you can define the following implementation
> detail in your code
>
> struct GDALAlgorithmArgHS

Could GDALAlgorithmArgHS be defined in gdalalgorithm.h (as struct
GDALAlgorithmHS is)?

Chris


On Mon, Aug 4, 2025 at 2:42?AM Even Rouault <even.rouault at spatialys.com> wrote:
>
> Hi Chris,
>
> This was indeed missing in the C API. Queued for 3.12 in
> https://github.com/OSGeo/gdal/pull/12853
>
> If you need this in 3.11, you can define the following implementation
> detail in your code
>
> struct GDALAlgorithmArgHS
> {
>      GDALAlgorithmArg *ptr = nullptr;
>
>      explicit GDALAlgorithmArgHS(GDALAlgorithmArg *arg) : ptr(arg)
>      {
>      }
> };
>
> but better conditionalize it to 3.11 only, so that to avoid issues in
> later version if we would change the definition of struct GDALAlgorithmArgHS
>
> and then do things like
>
> GDALAlgorithmArgH hArg;
>
> hArg->ptr->GetDefault<std::string>();
>
> Even
>
>
> Le 04/08/2025 ? 03:46, Chris Toney via gdal-dev a ?crit :
> > Hi,
> > In the C API there is GDALAlgorithmArgHasDefaultValue(), but no
> > interface to the GetDefault() class method to access the value itself
> > when there is one (nor in the Python bindings, AFAICS).
> >
> > I don't believe there is a fromHandle() method on GDALAlgorithmArg to
> > get to the C++ object.
> >
> > Is there possibly a workaround for that when working through the C API?
> >
> > Chris
> > _______________________________________________
> > gdal-dev mailing list
> > gdal-dev at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/gdal-dev
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>

From even.rouault at spatialys.com  Thu Aug  7 01:56:26 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 7 Aug 2025 10:56:26 +0200
Subject: [gdal-dev] argument default value in the C API to
 GDALAlgorithmArg
In-Reply-To: <CALRbqOQopaT0Hz0nw2pRNHhjT1yT1CiYvF1FvoAe4VEu-ggsog@mail.gmail.com>
References: <CALRbqORzdGH0-_RDX9ehRZz9NV0nStZ10Bkz+dZmuYGM7ZH5-A@mail.gmail.com>
 <f0384ff4-3c76-474b-a1b7-253ea58725f7@spatialys.com>
 <CALRbqOQopaT0Hz0nw2pRNHhjT1yT1CiYvF1FvoAe4VEu-ggsog@mail.gmail.com>
Message-ID: <cb7736cf-d0be-415b-a08e-4035eab5d422@spatialys.com>

Chris,

why would you need it to be exposed ? If it is to workaround missing C 
API entry points, we should add them

Regarding struct GDALAlgorithmHS being exposed in gdalalgorithm.h, this 
is because another GDAL .cpp file needed it, but I think I should create 
instead a gdalalgorithm_priv.h header to move those struct definitions. 
Please don't rely on the internals of struct GDALAlgorithmHS

Even

Le 07/08/2025 ? 06:44, Chris Toney a ?crit?:
> Hi Even,
>> If you need this in 3.11, you can define the following implementation
>> detail in your code
>>
>> struct GDALAlgorithmArgHS
> Could GDALAlgorithmArgHS be defined in gdalalgorithm.h (as struct
> GDALAlgorithmHS is)?
>
> Chris
>
>
> On Mon, Aug 4, 2025 at 2:42?AM Even Rouault <even.rouault at spatialys.com> wrote:
>> Hi Chris,
>>
>> This was indeed missing in the C API. Queued for 3.12 in
>> https://github.com/OSGeo/gdal/pull/12853
>>
>> If you need this in 3.11, you can define the following implementation
>> detail in your code
>>
>> struct GDALAlgorithmArgHS
>> {
>>       GDALAlgorithmArg *ptr = nullptr;
>>
>>       explicit GDALAlgorithmArgHS(GDALAlgorithmArg *arg) : ptr(arg)
>>       {
>>       }
>> };
>>
>> but better conditionalize it to 3.11 only, so that to avoid issues in
>> later version if we would change the definition of struct GDALAlgorithmArgHS
>>
>> and then do things like
>>
>> GDALAlgorithmArgH hArg;
>>
>> hArg->ptr->GetDefault<std::string>();
>>
>> Even
>>
>>
>> Le 04/08/2025 ? 03:46, Chris Toney via gdal-dev a ?crit :
>>> Hi,
>>> In the C API there is GDALAlgorithmArgHasDefaultValue(), but no
>>> interface to the GetDefault() class method to access the value itself
>>> when there is one (nor in the Python bindings, AFAICS).
>>>
>>> I don't believe there is a fromHandle() method on GDALAlgorithmArg to
>>> get to the C++ object.
>>>
>>> Is there possibly a workaround for that when working through the C API?
>>>
>>> Chris
>>> _______________________________________________
>>> gdal-dev mailing list
>>> gdal-dev at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>> --
>> http://www.spatialys.com
>> My software is free, but my time generally not.
>>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From jctoney at gmail.com  Thu Aug  7 07:22:44 2025
From: jctoney at gmail.com (Chris Toney)
Date: Thu, 7 Aug 2025 08:22:44 -0600
Subject: [gdal-dev] argument default value in the C API to
 GDALAlgorithmArg
In-Reply-To: <cb7736cf-d0be-415b-a08e-4035eab5d422@spatialys.com>
References: <CALRbqORzdGH0-_RDX9ehRZz9NV0nStZ10Bkz+dZmuYGM7ZH5-A@mail.gmail.com>
 <f0384ff4-3c76-474b-a1b7-253ea58725f7@spatialys.com>
 <CALRbqOQopaT0Hz0nw2pRNHhjT1yT1CiYvF1FvoAe4VEu-ggsog@mail.gmail.com>
 <cb7736cf-d0be-415b-a08e-4035eab5d422@spatialys.com>
Message-ID: <CALRbqORZE9iSsBTAd1EYwJi4QSfutCq8xTw1vc_A+=NhOkTi1w@mail.gmail.com>

Even,
Got it, thanks.

I'm thinking of the case analogous to GDALDataset, OGRGeometry and
others that have a fromHandle() method. That is occasionally helpful,
when we use primarily the C APIs but there is some public C++ method
not exposed in C that we want to use (i.e., "public" via gdal_priv.h
in the case of dataset). But yeah a workaround there too, not needed
often.

WIth GDALAlgorithmArg there is a "hidden" flag that can be accessed
with GDALAlgorithmArg::IsHidden(). It seems to to mean the arg is
hidden in both CLI and non-CLI "application" contexts, i.e., should
not be given as a user option in either context? In the C API there is
GDALAlgorithmArgIsHiddenForCLI() and GDALAlgorithmArgIsOnlyForCLI(),
but with those I can't tell for sure if the arg should be hidden
either way (e.g., "help-doc" but potentially others it looks like).

Chris

On Thu, Aug 7, 2025 at 2:56?AM Even Rouault <even.rouault at spatialys.com> wrote:
>
> Chris,
>
> why would you need it to be exposed ? If it is to workaround missing C
> API entry points, we should add them
>
> Regarding struct GDALAlgorithmHS being exposed in gdalalgorithm.h, this
> is because another GDAL .cpp file needed it, but I think I should create
> instead a gdalalgorithm_priv.h header to move those struct definitions.
> Please don't rely on the internals of struct GDALAlgorithmHS
>
> Even
>
> Le 07/08/2025 ? 06:44, Chris Toney a ?crit :
> > Hi Even,
> >> If you need this in 3.11, you can define the following implementation
> >> detail in your code
> >>
> >> struct GDALAlgorithmArgHS
> > Could GDALAlgorithmArgHS be defined in gdalalgorithm.h (as struct
> > GDALAlgorithmHS is)?
> >
> > Chris
> >
> >
> > On Mon, Aug 4, 2025 at 2:42?AM Even Rouault <even.rouault at spatialys.com> wrote:
> >> Hi Chris,
> >>
> >> This was indeed missing in the C API. Queued for 3.12 in
> >> https://github.com/OSGeo/gdal/pull/12853
> >>
> >> If you need this in 3.11, you can define the following implementation
> >> detail in your code
> >>
> >> struct GDALAlgorithmArgHS
> >> {
> >>       GDALAlgorithmArg *ptr = nullptr;
> >>
> >>       explicit GDALAlgorithmArgHS(GDALAlgorithmArg *arg) : ptr(arg)
> >>       {
> >>       }
> >> };
> >>
> >> but better conditionalize it to 3.11 only, so that to avoid issues in
> >> later version if we would change the definition of struct GDALAlgorithmArgHS
> >>
> >> and then do things like
> >>
> >> GDALAlgorithmArgH hArg;
> >>
> >> hArg->ptr->GetDefault<std::string>();
> >>
> >> Even
> >>
> >>
> >> Le 04/08/2025 ? 03:46, Chris Toney via gdal-dev a ?crit :
> >>> Hi,
> >>> In the C API there is GDALAlgorithmArgHasDefaultValue(), but no
> >>> interface to the GetDefault() class method to access the value itself
> >>> when there is one (nor in the Python bindings, AFAICS).
> >>>
> >>> I don't believe there is a fromHandle() method on GDALAlgorithmArg to
> >>> get to the C++ object.
> >>>
> >>> Is there possibly a workaround for that when working through the C API?
> >>>
> >>> Chris
> >>> _______________________________________________
> >>> gdal-dev mailing list
> >>> gdal-dev at lists.osgeo.org
> >>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
> >> --
> >> http://www.spatialys.com
> >> My software is free, but my time generally not.
> >>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>

From even.rouault at spatialys.com  Thu Aug  7 07:53:17 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 7 Aug 2025 16:53:17 +0200
Subject: [gdal-dev] argument default value in the C API to
 GDALAlgorithmArg
In-Reply-To: <CALRbqORZE9iSsBTAd1EYwJi4QSfutCq8xTw1vc_A+=NhOkTi1w@mail.gmail.com>
References: <CALRbqORzdGH0-_RDX9ehRZz9NV0nStZ10Bkz+dZmuYGM7ZH5-A@mail.gmail.com>
 <f0384ff4-3c76-474b-a1b7-253ea58725f7@spatialys.com>
 <CALRbqOQopaT0Hz0nw2pRNHhjT1yT1CiYvF1FvoAe4VEu-ggsog@mail.gmail.com>
 <cb7736cf-d0be-415b-a08e-4035eab5d422@spatialys.com>
 <CALRbqORZE9iSsBTAd1EYwJi4QSfutCq8xTw1vc_A+=NhOkTi1w@mail.gmail.com>
Message-ID: <154895a2-95dc-4bff-982a-ee24f76f5ce5@spatialys.com>

Chris,

in the 3.11 branch "help-doc" is the only argument that calls 
SetHidden(), so you could hard code that for now, or use the workaround 
of defining the struct GDALAlgorithmArgHS

For 3.12, I've exposed GDALAlgorithmArgIsHidden() in 
https://github.com/OSGeo/gdal/pull/12890, and rationalized the naming in 
renaming IsOnlyForCLI() as IsHiddenForAPI(), so that IsHidden() == 
IsHiddenForCLI() && IsHiddenForAPI()

Even

Le 07/08/2025 ? 16:22, Chris Toney a ?crit?:
> Even,
> Got it, thanks.
>
> I'm thinking of the case analogous to GDALDataset, OGRGeometry and
> others that have a fromHandle() method. That is occasionally helpful,
> when we use primarily the C APIs but there is some public C++ method
> not exposed in C that we want to use (i.e., "public" via gdal_priv.h
> in the case of dataset). But yeah a workaround there too, not needed
> often.
>
> WIth GDALAlgorithmArg there is a "hidden" flag that can be accessed
> with GDALAlgorithmArg::IsHidden(). It seems to to mean the arg is
> hidden in both CLI and non-CLI "application" contexts, i.e., should
> not be given as a user option in either context? In the C API there is
> GDALAlgorithmArgIsHiddenForCLI() and GDALAlgorithmArgIsOnlyForCLI(),
> but with those I can't tell for sure if the arg should be hidden
> either way (e.g., "help-doc" but potentially others it looks like).
>
> Chris
>
> On Thu, Aug 7, 2025 at 2:56?AM Even Rouault <even.rouault at spatialys.com> wrote:
>> Chris,
>>
>> why would you need it to be exposed ? If it is to workaround missing C
>> API entry points, we should add them
>>
>> Regarding struct GDALAlgorithmHS being exposed in gdalalgorithm.h, this
>> is because another GDAL .cpp file needed it, but I think I should create
>> instead a gdalalgorithm_priv.h header to move those struct definitions.
>> Please don't rely on the internals of struct GDALAlgorithmHS
>>
>> Even
>>
>> Le 07/08/2025 ? 06:44, Chris Toney a ?crit :
>>> Hi Even,
>>>> If you need this in 3.11, you can define the following implementation
>>>> detail in your code
>>>>
>>>> struct GDALAlgorithmArgHS
>>> Could GDALAlgorithmArgHS be defined in gdalalgorithm.h (as struct
>>> GDALAlgorithmHS is)?
>>>
>>> Chris
>>>
>>>
>>> On Mon, Aug 4, 2025 at 2:42?AM Even Rouault <even.rouault at spatialys.com> wrote:
>>>> Hi Chris,
>>>>
>>>> This was indeed missing in the C API. Queued for 3.12 in
>>>> https://github.com/OSGeo/gdal/pull/12853
>>>>
>>>> If you need this in 3.11, you can define the following implementation
>>>> detail in your code
>>>>
>>>> struct GDALAlgorithmArgHS
>>>> {
>>>>        GDALAlgorithmArg *ptr = nullptr;
>>>>
>>>>        explicit GDALAlgorithmArgHS(GDALAlgorithmArg *arg) : ptr(arg)
>>>>        {
>>>>        }
>>>> };
>>>>
>>>> but better conditionalize it to 3.11 only, so that to avoid issues in
>>>> later version if we would change the definition of struct GDALAlgorithmArgHS
>>>>
>>>> and then do things like
>>>>
>>>> GDALAlgorithmArgH hArg;
>>>>
>>>> hArg->ptr->GetDefault<std::string>();
>>>>
>>>> Even
>>>>
>>>>
>>>> Le 04/08/2025 ? 03:46, Chris Toney via gdal-dev a ?crit :
>>>>> Hi,
>>>>> In the C API there is GDALAlgorithmArgHasDefaultValue(), but no
>>>>> interface to the GetDefault() class method to access the value itself
>>>>> when there is one (nor in the Python bindings, AFAICS).
>>>>>
>>>>> I don't believe there is a fromHandle() method on GDALAlgorithmArg to
>>>>> get to the C++ object.
>>>>>
>>>>> Is there possibly a workaround for that when working through the C API?
>>>>>
>>>>> Chris
>>>>> _______________________________________________
>>>>> gdal-dev mailing list
>>>>> gdal-dev at lists.osgeo.org
>>>>> https://lists.osgeo.org/mailman/listinfo/gdal-dev
>>>> --
>>>> http://www.spatialys.com
>>>> My software is free, but my time generally not.
>>>>
>> --
>> http://www.spatialys.com
>> My software is free, but my time generally not.
>>
-- 
http://www.spatialys.com
My software is free, but my time generally not.


From j1 at jimenezshaw.com  Thu Aug  7 11:53:23 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Thu, 7 Aug 2025 20:53:23 +0200
Subject: [gdal-dev] GetMetadataItem adds empty string to MetadataDomainList
Message-ID: <CADRrdKtJXbmMvhjVRxpFPPKpx6=OtaD3JFzQ6k2vbyZ4HxL3EA@mail.gmail.com>

Hi

I am working in a branch to read the raw thermal data from DJI jpg images.
It is similar to FLIR, ... but different.
The branch is for now in an early stage of development. My problem is that
an existing tests are failing.

In this function I am checking the image is tagged as DJI in the EXIF:
https://github.com/jjimenezshaw/gdal/blob/dji-thermal/frmts/jpeg/jpgdataset.cpp#L405
    auto make = GetMetadataItem("EXIF_Make");
    bool bMakerDJI = make && STRCASECMP(make, "DJI") == 0;
    if (!bMakerDJI)
        return;

The problem is that the "GetMetadataItem" call is somehow writing another
entry in the GetMetadataDomainList, an empty string.

An then this test is failing:

https://github.com/jjimenezshaw/gdal/actions/runs/16811268016/job/47616930397#step:6:4277

47: E [
47: E 'IMAGE_STRUCTURE',
47: E + '',
47: E 'FLIR',
47: E 'SUBDATASETS',
47: E 'DERIVED_SUBDATASETS',
47: E ]

Is there a better way to get the EXIF "Make" tag, without polluting the
domain list? Or is there a hidden bug somewhere?

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20250807/1e2351fd/attachment-0001.htm>

From even.rouault at spatialys.com  Thu Aug  7 12:53:48 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 7 Aug 2025 21:53:48 +0200
Subject: [gdal-dev] GetMetadataItem adds empty string to
 MetadataDomainList
In-Reply-To: <CADRrdKtJXbmMvhjVRxpFPPKpx6=OtaD3JFzQ6k2vbyZ4HxL3EA@mail.gmail.com>
References: <CADRrdKtJXbmMvhjVRxpFPPKpx6=OtaD3JFzQ6k2vbyZ4HxL3EA@mail.gmail.com>
Message-ID: <9ddc6603-f782-4112-a563-689cb7ca62c1@spatialys.com>

Javier,

| Or is there a hidden bug somewhere?

indeed. Fix in https://github.com/OSGeo/gdal/pull/12892

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20250807/58c59a77/attachment.htm>

From j1 at jimenezshaw.com  Fri Aug  8 02:41:16 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 8 Aug 2025 11:41:16 +0200
Subject: [gdal-dev] GetMetadataItem adds empty string to
 MetadataDomainList
In-Reply-To: <9ddc6603-f782-4112-a563-689cb7ca62c1@spatialys.com>
References: <CADRrdKtJXbmMvhjVRxpFPPKpx6=OtaD3JFzQ6k2vbyZ4HxL3EA@mail.gmail.com>
 <9ddc6603-f782-4112-a563-689cb7ca62c1@spatialys.com>
Message-ID: <CADRrdKuyN_cpGLd2To0gAEkUbFSmB-SbgnXujN=QmZPjRhVDVA@mail.gmail.com>

Thanks Even!

In the same branch there is a test that is failing: cppcheck_master
https://github.com/jjimenezshaw/gdal/actions/runs/16811268010/job/47616930470
I do not see anything related to my changes.
Is it a flaky test that I can ignore?

Thank you.

On Thu, 7 Aug 2025 at 21:53, Even Rouault <even.rouault at spatialys.com>
wrote:

> Javier,
>
> | Or is there a hidden bug somewhere?
>
> indeed. Fix in https://github.com/OSGeo/gdal/pull/12892
> Even
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20250808/2fb66788/attachment.htm>

From even.rouault at spatialys.com  Fri Aug  8 02:46:03 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 8 Aug 2025 11:46:03 +0200
Subject: [gdal-dev] GetMetadataItem adds empty string to
 MetadataDomainList
In-Reply-To: <CADRrdKuyN_cpGLd2To0gAEkUbFSmB-SbgnXujN=QmZPjRhVDVA@mail.gmail.com>
References: <CADRrdKtJXbmMvhjVRxpFPPKpx6=OtaD3JFzQ6k2vbyZ4HxL3EA@mail.gmail.com>
 <9ddc6603-f782-4112-a563-689cb7ca62c1@spatialys.com>
 <CADRrdKuyN_cpGLd2To0gAEkUbFSmB-SbgnXujN=QmZPjRhVDVA@mail.gmail.com>
Message-ID: <e8faea33-e1f6-497e-a73a-d7d8afcbe415@spatialys.com>


Le 08/08/2025 ? 11:41, Javier Jimenez Shaw a ?crit?:
> Thanks Even!
>
> In the same branch there is a test that is failing: cppcheck_master
> https://github.com/jjimenezshaw/gdal/actions/runs/16811268010/job/47616930470
> I do not see anything related to my changes.
> Is it a flaky test that I can ignore?
I've fixed those new warnings a few weeks ago. You'll just need to 
rebase on top of latest master
>
> Thank you.
>
> On Thu, 7 Aug 2025 at 21:53, Even Rouault <even.rouault at spatialys.com> 
> wrote:
>
>     Javier,
>
>     | Or is there a hidden bug somewhere?
>
>     indeed. Fix in https://github.com/OSGeo/gdal/pull/12892
>
>     Even
>
>     -- 
>     http://www.spatialys.com
>     My software is free, but my time generally not.
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20250808/044abf6c/attachment.htm>

From peter.townsend at maplarge.com  Mon Aug 11 13:56:56 2025
From: peter.townsend at maplarge.com (Peter Townsend)
Date: Mon, 11 Aug 2025 15:56:56 -0500
Subject: [gdal-dev] GeoJSON to CSV output difference between 3.7 and 3.9
Message-ID: <CAMQBGmWEp0EX+=NmWuxNmCOEAmFm0mnPGvar_a6P8cFqaPDTTw@mail.gmail.com>

I was attempting to upgrade a process from 3.7.0 to 3.9.1 with the below
input file, and I triggered one of my automated tests that checks the
output of ogr2ogr to CSV. In 3.7, it listed a LINESTRING, POINT,
MULTILINESTRING, and MULTIPOINT. But in 3.9, I only get the LINESTRING and
MULTILINESTRING. My arguments to ogr2ogr are:
-f CSV -overwrite "path/to/dest" "path/to/input.geojson" -lco
GEOMETRY=AS_WKT

Upon further staring at the input, I realized that the FeatureCollection
isn't exactly up to spec. The LineString and MultiLineString are indeed
features, but the point and multipoint are not. They're just the
"properties" and "geometry" propertes, no feature type. You can see this if
you throw the input contents in your favorite JSON formatter.

My questions are thus, is this just GDAL being more mindful of the GeoJSON
spec? Is there some sort of input option I can add that puts it back in the
less strict mode? Or should I just say okay it's different now and update
the test expectations / fix the input file to be proper features?

Input file contents
{"type":"FeatureCollection","features":[{"type":"Feature","geometry":{"type":"LineString","coordinates":[[-94.12405467406431,31.532690532981295],[-94.12413927511027,31.53269179705642],[-94.12472394824769,31.53266379684319],[-94.1253901251488,31.532584216260403],[-94.12626386218717,31.53250765409404],[-94.12646122620484,31.532481068559832],[-94.12702830386473,31.532404682413407],[-94.12745820329715,31.532340011373883],[-94.1278837022303,31.53225417230333],[-94.12801663488807,31.532224077464026]],"bbox":[-94.12801663488807,31.532224077464026,-94.12405467406431,31.53269179705642]},"properties":{"OBJECTID":672860},"id":672860,"bbox":[-94.12801663488807,31.532224077464026,-94.12405467406431,31.53269179705642]},{"properties":{"OBJECTID":672860},"geometry":{"type":"Point","coordinates":[-94.12604508705837,31.53253712377012]}},{"type":"Feature","geometry":{"type":"MultiLineString","coordinates":[[[-101.97716065893691,35.917790607424394],[-101.96492166952294,35.92341944145871],[-101.96328111127792,35.924204444876075],[-101.96317888931199,35.9242627791969],[-101.96145444125442,35.925273890040636],[-101.95943278022344,35.92651610858149],[-101.94270944261692,35.936602776319525],[-101.94225499817804,35.936848330692534],[-101.94173444194344,35.93708055318282],[-101.94117055871999,35.937277219639974],[-101.9406055541843,35.93742611297405],[-101.94007055779315,35.937526666010086],[-101.93959555813376,35.93758333140084],[-101.93939055354555,35.93759888635054],[-101.93851888963131,35.93760777861841],[-101.92749222311619,35.93752221987603],[-101.92070166616179,35.937523888806176],[-101.91913111170948,35.93750333358548],[-101.91557277681014,35.937551113227535],[-101.91284833324379,35.93762333356804],[-101.90929555275227,35.93768499922985],[-101.88019222237504,35.937471108892964],[-101.87967388920762,35.9374950019738],[-101.87898889120852,35.93757722285602],[-101.87833111111162,35.93771666978525],[-101.87772944226847,35.93789777477344],[-101.87745110906612,35.938002219806336],[-101.87689055718347,35.93824833483556],[-101.87660222343933,35.938411114189336],[-101.87628055672884,35.93861944359893],[-101.87591000210242,35.93888999932645],[-101.87561944529126,35.939121667679956],[-101.8754083321584,35.93930944186905],[-101.87534666649668,35.939367222053065],[-101.87503222312395,35.939705558506226],[-101.87482166412806,35.93996389062501],[-101.87443555455185,35.9405338889124],[-101.87418277684091,35.94102611245161],[-101.87406333099538,35.9413338866233],[-101.87396777823031,35.941639998384105],[-101.87385666399655,35.94226722271857],[-101.87381444528154,35.94281388858156],[-101.87378777499688,35.945784447176976],[-101.87375721923426,35.94690888880215],[-101.87377166591027,35.94780277686722],[-101.87372777826538,35.95167777820621],[-101.87372500106116,35.95175444468064],[-101.87363666511492,35.95428333658291],[-101.87353611207905,35.95565333258113],[-101.87348444695914,35.955991108378335],[-101.87340888875863,35.95688721951025],[-101.87292666576121,35.961394999591604],[-101.87282555858843,35.96186389070637],[-101.87263555481319,35.962423888451944],[-101.87237610790118,35.962958330706016],[-101.87206444173263,35.963437222362465],[-101.87173333513643,35.96385388770119],[-101.8714005530909,35.96418944695049],[-101.8709055523478,35.964592219750266],[-101.87032889137872,35.96498555266435],[-101.87002666509558,35.96515722428614],[-101.86951555526602,35.96538444650541],[-101.86903777840256,35.96556444321965],[-101.8687016650162,35.96566721932265],[-101.8681783315779,35.9657977805032],[-101.86782500083102,35.96586777777662],[-101.86729944432558,35.96593444370925],[-101.86680111224173,35.9659672225386],[-101.83603444533186,35.965868331913455],[-101.83520277706549,35.96586944670659],[-101.83478888893076,35.965885001656346],[-101.83422889118512,35.96593999811701],[-101.8336249992753,35.96605055821396],[-101.83303444576732,35.96620555357371],[-101.83244277746601,35.96641777498042],[-101.83194722258597,35.96664111172214],[-101.83144833636523,35.96691555292755],[-101.83096666750481,35.96723833443104],[-101.83055555657411,35.96757110995728],[-101.83014555391726,35.9679766664802],[-101.82985944324012,35.96831444227731],[-101.82959055644254,35.96869444330877],[-101.82931666937402,35.96918555857396],[-101.829125003188,35.96964111128671],[-101.82898777932556,35.9701066645413],[-101.82891222112492,35.97043777765661],[-101.82886444148298,35.97093333253659],[-101.82883500051373,35.99518111301272],[-101.82881944556415,35.99624722031705],[-101.82882777717575,36.00469555287706],[-101.82881777663393,36.00717111072927],[-101.82875944231321,36.007949444945716],[-101.82866666675193,36.008512219895394],[-101.82848888658562,36.009169999992075],[-101.8284222206529,36.00933833375387],[-101.82819277536647,36.00990333177034],[-101.82792888883984,36.010420002527106],[-101.82771111302539,36.010782779678664],[-101.82753110979176,36.01104499727534],[-101.8255677765624,36.01364444710713],[-101.82532333046306,36.01404499684002],[-101.82509555410678,36.01448944725627],[-101.82485389173088,36.01508944716923],[-101.82469333544424,36.01566110786744],[-101.82460111401991,36.01616000060744],[-101.82456888932745,36.01673055303199],[-101.82455944292262,36.02413944205278],[-101.82455833464877,36.02516777677616],[-101.82460055336365,36.02580777885634],[-101.82468555796932,36.02634611310764],[-101.82474500056394,36.02661389163116],[-101.82488222442637,36.02710166903637],[-101.82511000078264,36.02770222308628],[-101.825541112797,36.028533330696455],[-101.8258516641727,36.02901222235277],[-101.82766333338333,36.031581109903044],[-101.82790666468911,36.031953887596444],[-101.82813333277184,36.032373330139066],[-101.82839888822853,36.03297499898201],[-101.82860388629716,36.03357055276097],[-101.82872610934692,36.03408277738378],[-101.82881222222603,36.034637774858524],[-101.82884888653322,36.035238335427586],[-101.82886000186835,36.037769998014475],[-101.82885166373723,36.05539722422793],[-101.82884722412253,36.05927500277086],[-101.82885944121209,36.05982610824856],[-101.82894333102436,36.060555000411966],[-101.82918444578264,36.06187500022045],[-101.8292333336986,36.06247666906348],[-101.82922888756478,36.06268277540611],[-101.82918610819347,36.06310166381164],[-101.82891111285112,36.064807219059226],[-101.828858887075,36.06541944258101],[-101.82881722249702,36.072543889854806],[-101.8287744431259,36.08245722356031],[-101.82886888761696,36.11044555871712],[-101.82883110851658,36.12643777457388],[-101.82885110960036,36.13981389041392]],[[-101.82471777614252,36.139807775349986],[-101.82466833408967,36.172846110317124],[-101.82464500166512,36.182404998482674],[-101.82463777832709,36.18921388759075],[-101.82461055390557,36.19264499916959],[-101.8246177772436,36.19695222079696],[-101.82460944563176,36.208847780541575],[-101.8245788898693,36.21289388632699],[-101.82457777507615,36.21961055401097],[-101.8245555574448,36.22674722489346],[-101.82456611212356,36.22736833416391],[-101.82454611103985,36.23154500112976],[-101.8245427796991,36.23454333176434],[-101.8245194472745,36.237771114204634],[-101.82452388688927,36.241554441737215],[-101.82452888716024,36.2437866682834],[-101.82460777670153,36.24450777645279],[-101.82484833080376,36.24557611334343],[-101.82489944178671,36.24612555641044],[-101.82484666839306,36.246695554697844],[-101.8247116675978,36.247207779320554],[-101.82453444156799,36.24763611413113],[-101.82438833195694,36.24801110837234],[-101.82424277648296,36.248405556079454],[-101.8236466685671,36.25006333168504],[-101.8232333345695,36.25120111171221],[-101.8231183348577,36.25151722401493],[-101.82300444341989,36.25188500143741],[-101.82289777532004,36.25220722228489],[-101.82284055579215,36.25255499862385],[-101.8228155544378,36.25291555270852],[-101.82284611020006,36.25324221969008],[-101.82290222145414,36.253608334701845],[-101.82298166513246,36.253947225292066],[-101.82310221925187,36.254247221988855],[-101.82325722113086,36.25456666563233],[-101.82356277875476,36.25508499880002],[-101.82383888889012,36.25553999737572],[-101.82400777678889,36.25589778077575],[-101.82417000200566,36.256327223860154],[-101.82428333278705,36.25673833479084],[-101.82433333549633,36.257195556433494],[-101.82431721989049,36.258001108552214],[-101.82431444268653,36.25866888919086],[-101.82430388800789,36.25971666434171],[-101.8242911102621,36.26069221915201],[-101.82420111190505,36.26727944696765],[-101.82415555532978,36.27110166839384],[-101.82415888667072,36.279209441433494],[-101.82413777731314,36.28219888631928],[-101.82413277704225,36.28495222323686],[-101.82412999983828,36.2879477766675],[-101.8241138907517,36.29940388626694],[-101.82409333553105,36.303527779839094],[-101.82402333173847,36.32791110872819],[-101.82404444761512,36.32841500173927],[-101.8240244465315,36.339786113252465],[-101.82400666851497,36.346137220061514],[-101.82399222183895,36.35424722268729],[-101.82399277597601,36.35688555337424],[-101.82397999823027,36.358251109757674],[-101.82398555263804,36.35974499773557],[-101.8239666663475,36.36460833163083],[-101.82396722048456,36.3676633341753],[-101.8239738896854,36.368373887665996],[-101.82393888778911,36.386468890200824],[-101.82388610787616,36.41547333647222],[-101.82388166826138,36.42379944598271],[-101.82385611276992,36.42995055499375],[-101.82384888943209,36.4387561102975],[-101.82383999716399,36.44305555444994],[-101.82380611006086,36.45896110980989],[-101.82379006716069,36.46687981165995]]],"bbox":[-101.97716065893691,35.917790607424394,-101.8228155544378,36.46687981165995]},"properties":{"OBJECTID":995679},"id":995679,"bbox":[-101.97716065893691,35.917790607424394,-101.8228155544378,36.46687981165995]},{"properties":{"OBJECTID":995679},"geometry":{"type":"MultiPoint","coordinates":[[-101.83046171070818,35.96766393814374],[-101.82409599672418,36.302993877651765]]}}]}

3.7 output:
WKT,OBJECTID
"LINESTRING (-94.1240546740643 31.5326905329813,-94.1241392751103
31.5326917970564,-94.1247239482477 31.5326637968432,-94.1253901251488
31.5325842162604,-94.1262638621872 31.532507654094,-94.1264612262048
31.5324810685598,-94.1270283038647 31.5324046824134,-94.1274582032972
31.5323400113739,-94.1278837022303 31.5322541723033,-94.1280166348881
31.532224077464)","672860"
"POINT (-94.1260450870584 31.5325371237701)","672860"
"MULTILINESTRING ((-101.977160658937 35.9177906074244,-101.964921669523
35.9234194414587,-101.963281111278 35.9242044448761,-101.963178889312
35.9242627791969,-101.961454441254 35.9252738900406,-101.959432780223
35.9265161085815,-101.942709442617 35.9366027763195,-101.942254998178
35.9368483306925,-101.941734441943 35.9370805531828,-101.94117055872
35.93727721964,-101.940605554184 35.9374261129741,-101.940070557793
35.9375266660101,-101.939595558134 35.9375833314008,-101.939390553546
35.9375988863505,-101.938518889631 35.9376077786184,-101.927492223116
35.937522219876,-101.920701666162 35.9375238888062,-101.919131111709
35.9375033335855,-101.91557277681 35.9375511132275,-101.912848333244
35.937623333568,-101.909295552752 35.9376849992299,-101.880192222375
35.937471108893,-101.879673889208 35.9374950019738,-101.878988891209
35.937577222856,-101.878331111112 35.9377166697853,-101.877729442268
35.9378977747734,-101.877451109066 35.9380022198063,-101.876890557183
35.9382483348356,-101.876602223439 35.9384111141893,-101.876280556729
35.9386194435989,-101.875910002102 35.9388899993264,-101.875619445291
35.93912166768,-101.875408332158 35.939309441869,-101.875346666497
35.9393672220531,-101.875032223124 35.9397055585062,-101.874821664128
35.939963890625,-101.874435554552 35.9405338889124,-101.874182776841
35.9410261124516,-101.874063330995 35.9413338866233,-101.87396777823
35.9416399983841,-101.873856663997 35.9422672227186,-101.873814445282
35.9428138885816,-101.873787774997 35.945784447177,-101.873757219234
35.9469088888021,-101.87377166591 35.9478027768672,-101.873727778265
35.9516777782062,-101.873725001061 35.9517544446806,-101.873636665115
35.9542833365829,-101.873536112079 35.9556533325811,-101.873484446959
35.9559911083783,-101.873408888759 35.9568872195103,-101.872926665761
35.9613949995916,-101.872825558588 35.9618638907064,-101.872635554813
35.9624238884519,-101.872376107901 35.962958330706,-101.872064441733
35.9634372223625,-101.871733335136 35.9638538877012,-101.871400553091
35.9641894469505,-101.870905552348 35.9645922197503,-101.870328891379
35.9649855526644,-101.870026665096 35.9651572242861,-101.869515555266
35.9653844465054,-101.869037778403 35.9655644432196,-101.868701665016
35.9656672193226,-101.868178331578 35.9657977805032,-101.867825000831
35.9658677777766,-101.867299444326 35.9659344437093,-101.866801112242
35.9659672225386,-101.836034445332 35.9658683319135,-101.835202777065
35.9658694467066,-101.834788888931 35.9658850016563,-101.834228891185
35.965939998117,-101.833624999275 35.966050558214,-101.833034445767
35.9662055535737,-101.832442777466 35.9664177749804,-101.831947222586
35.9666411117221,-101.831448336365 35.9669155529276,-101.830966667505
35.967238334431,-101.830555556574 35.9675711099573,-101.830145553917
35.9679766664802,-101.82985944324 35.9683144422773,-101.829590556443
35.9686944433088,-101.829316669374 35.969185558574,-101.829125003188
35.9696411112867,-101.828987779326 35.9701066645413,-101.828912221125
35.9704377776566,-101.828864441483 35.9709333325366,-101.828835000514
35.9951811130127,-101.828819445564 35.9962472203171,-101.828827777176
36.0046955528771,-101.828817776634 36.0071711107293,-101.828759442313
36.0079494449457,-101.828666666752 36.0085122198954,-101.828488886586
36.0091699999921,-101.828422220653 36.0093383337539,-101.828192775366
36.0099033317703,-101.82792888884 36.0104200025271,-101.827711113025
36.0107827796787,-101.827531109792 36.0110449972753,-101.825567776562
36.0136444471071,-101.825323330463 36.01404499684,-101.825095554107
36.0144894472563,-101.824853891731 36.0150894471692,-101.824693335444
36.0156611078674,-101.82460111402 36.0161600006074,-101.824568889327
36.016730553032,-101.824559442923 36.0241394420528,-101.824558334649
36.0251677767762,-101.824600553364 36.0258077788563,-101.824685557969
36.0263461131076,-101.824745000564 36.0266138916312,-101.824882224426
36.0271016690364,-101.825110000783 36.0277022230863,-101.825541112797
36.0285333306965,-101.825851664173 36.0290122223528,-101.827663333383
36.031581109903,-101.827906664689 36.0319538875964,-101.828133332772
36.0323733301391,-101.828398888229 36.032974998982,-101.828603886297
36.033570552761,-101.828726109347 36.0340827773838,-101.828812222226
36.0346377748585,-101.828848886533 36.0352383354276,-101.828860001868
36.0377699980145,-101.828851663737 36.0553972242279,-101.828847224123
36.0592750027709,-101.828859441212 36.0598261082486,-101.828943331024
36.060555000412,-101.829184445783 36.0618750002204,-101.829233333699
36.0624766690635,-101.829228887565 36.0626827754061,-101.829186108193
36.0631016638116,-101.828911112851 36.0648072190592,-101.828858887075
36.065419442581,-101.828817222497 36.0725438898548,-101.828774443126
36.0824572235603,-101.828868887617 36.1104455587171,-101.828831108517
36.1264377745739,-101.8288511096 36.1398138904139),(-101.824717776143
36.13980777535,-101.82466833409 36.1728461103171,-101.824645001665
36.1824049984827,-101.824637778327 36.1892138875908,-101.824610553906
36.1926449991696,-101.824617777244 36.196952220797,-101.824609445632
36.2088477805416,-101.824578889869 36.212893886327,-101.824577775076
36.219610554011,-101.824555557445 36.2267472248935,-101.824566112124
36.2273683341639,-101.82454611104 36.2315450011298,-101.824542779699
36.2345433317643,-101.824519447274 36.2377711142046,-101.824523886889
36.2415544417372,-101.82452888716 36.2437866682834,-101.824607776702
36.2445077764528,-101.824848330804 36.2455761133434,-101.824899441787
36.2461255564104,-101.824846668393 36.2466955546978,-101.824711667598
36.2472077793206,-101.824534441568 36.2476361141311,-101.824388331957
36.2480111083723,-101.824242776483 36.2484055560795,-101.823646668567
36.250063331685,-101.823233334569 36.2512011117122,-101.823118334858
36.2515172240149,-101.82300444342 36.2518850014374,-101.82289777532
36.2522072222849,-101.822840555792 36.2525549986239,-101.822815554438
36.2529155527085,-101.8228461102 36.2532422196901,-101.822902221454
36.2536083347018,-101.822981665132 36.2539472252921,-101.823102219252
36.2542472219889,-101.823257221131 36.2545666656323,-101.823562778755
36.2550849988,-101.82383888889 36.2555399973757,-101.824007776789
36.2558977807757,-101.824170002006 36.2563272238602,-101.824283332787
36.2567383347908,-101.824333335496 36.2571955564335,-101.82431721989
36.2580011085522,-101.824314442687 36.2586688891909,-101.824303888008
36.2597166643417,-101.824291110262 36.260692219152,-101.824201111905
36.2672794469676,-101.82415555533 36.2711016683938,-101.824158886671
36.2792094414335,-101.824137777313 36.2821988863193,-101.824132777042
36.2849522232369,-101.824129999838 36.2879477766675,-101.824113890752
36.2994038862669,-101.824093335531 36.3035277798391,-101.824023331738
36.3279111087282,-101.824044447615 36.3284150017393,-101.824024446531
36.3397861132525,-101.824006668515 36.3461372200615,-101.823992221839
36.3542472226873,-101.823992775976 36.3568855533742,-101.82397999823
36.3582511097577,-101.823985552638 36.3597449977356,-101.823966666348
36.3646083316308,-101.823967220485 36.3676633341753,-101.823973889685
36.368373887666,-101.823938887789 36.3864688902008,-101.823886107876
36.4154733364722,-101.823881668261 36.4237994459827,-101.82385611277
36.4299505549938,-101.823848889432 36.4387561102975,-101.823839997164
36.4430555544499,-101.823806110061 36.4589611098099,-101.823790067161
36.46687981166))","995679"
"MULTIPOINT ((-101.830461710708 35.9676639381437),(-101.824095996724
36.3029938776518))","995679"

3.9 output:
WKT,OBJECTID
"LINESTRING (-94.1240546740643 31.5326905329813,-94.1241392751103
31.5326917970564,-94.1247239482477 31.5326637968432,-94.1253901251488
31.5325842162604,-94.1262638621872 31.532507654094,-94.1264612262048
31.5324810685598,-94.1270283038647 31.5324046824134,-94.1274582032972
31.5323400113739,-94.1278837022303 31.5322541723033,-94.1280166348881
31.532224077464)",672860
"MULTILINESTRING ((-101.977160658937 35.9177906074244,-101.964921669523
35.9234194414587,-101.963281111278 35.9242044448761,-101.963178889312
35.9242627791969,-101.961454441254 35.9252738900406,-101.959432780223
35.9265161085815,-101.942709442617 35.9366027763195,-101.942254998178
35.9368483306925,-101.941734441943 35.9370805531828,-101.94117055872
35.93727721964,-101.940605554184 35.9374261129741,-101.940070557793
35.9375266660101,-101.939595558134 35.9375833314008,-101.939390553546
35.9375988863505,-101.938518889631 35.9376077786184,-101.927492223116
35.937522219876,-101.920701666162 35.9375238888062,-101.919131111709
35.9375033335855,-101.91557277681 35.9375511132275,-101.912848333244
35.937623333568,-101.909295552752 35.9376849992299,-101.880192222375
35.937471108893,-101.879673889208 35.9374950019738,-101.878988891209
35.937577222856,-101.878331111112 35.9377166697853,-101.877729442268
35.9378977747734,-101.877451109066 35.9380022198063,-101.876890557183
35.9382483348356,-101.876602223439 35.9384111141893,-101.876280556729
35.9386194435989,-101.875910002102 35.9388899993264,-101.875619445291
35.93912166768,-101.875408332158 35.939309441869,-101.875346666497
35.9393672220531,-101.875032223124 35.9397055585062,-101.874821664128
35.939963890625,-101.874435554552 35.9405338889124,-101.874182776841
35.9410261124516,-101.874063330995 35.9413338866233,-101.87396777823
35.9416399983841,-101.873856663997 35.9422672227186,-101.873814445282
35.9428138885816,-101.873787774997 35.945784447177,-101.873757219234
35.9469088888021,-101.87377166591 35.9478027768672,-101.873727778265
35.9516777782062,-101.873725001061 35.9517544446806,-101.873636665115
35.9542833365829,-101.873536112079 35.9556533325811,-101.873484446959
35.9559911083783,-101.873408888759 35.9568872195103,-101.872926665761
35.9613949995916,-101.872825558588 35.9618638907064,-101.872635554813
35.9624238884519,-101.872376107901 35.962958330706,-101.872064441733
35.9634372223625,-101.871733335136 35.9638538877012,-101.871400553091
35.9641894469505,-101.870905552348 35.9645922197503,-101.870328891379
35.9649855526644,-101.870026665096 35.9651572242861,-101.869515555266
35.9653844465054,-101.869037778403 35.9655644432196,-101.868701665016
35.9656672193226,-101.868178331578 35.9657977805032,-101.867825000831
35.9658677777766,-101.867299444326 35.9659344437093,-101.866801112242
35.9659672225386,-101.836034445332 35.9658683319135,-101.835202777065
35.9658694467066,-101.834788888931 35.9658850016563,-101.834228891185
35.965939998117,-101.833624999275 35.966050558214,-101.833034445767
35.9662055535737,-101.832442777466 35.9664177749804,-101.831947222586
35.9666411117221,-101.831448336365 35.9669155529276,-101.830966667505
35.967238334431,-101.830555556574 35.9675711099573,-101.830145553917
35.9679766664802,-101.82985944324 35.9683144422773,-101.829590556443
35.9686944433088,-101.829316669374 35.969185558574,-101.829125003188
35.9696411112867,-101.828987779326 35.9701066645413,-101.828912221125
35.9704377776566,-101.828864441483 35.9709333325366,-101.828835000514
35.9951811130127,-101.828819445564 35.9962472203171,-101.828827777176
36.0046955528771,-101.828817776634 36.0071711107293,-101.828759442313
36.0079494449457,-101.828666666752 36.0085122198954,-101.828488886586
36.0091699999921,-101.828422220653 36.0093383337539,-101.828192775366
36.0099033317703,-101.82792888884 36.0104200025271,-101.827711113025
36.0107827796787,-101.827531109792 36.0110449972753,-101.825567776562
36.0136444471071,-101.825323330463 36.01404499684,-101.825095554107
36.0144894472563,-101.824853891731 36.0150894471692,-101.824693335444
36.0156611078674,-101.82460111402 36.0161600006074,-101.824568889327
36.016730553032,-101.824559442923 36.0241394420528,-101.824558334649
36.0251677767762,-101.824600553364 36.0258077788563,-101.824685557969
36.0263461131076,-101.824745000564 36.0266138916312,-101.824882224426
36.0271016690364,-101.825110000783 36.0277022230863,-101.825541112797
36.0285333306965,-101.825851664173 36.0290122223528,-101.827663333383
36.031581109903,-101.827906664689 36.0319538875964,-101.828133332772
36.0323733301391,-101.828398888229 36.032974998982,-101.828603886297
36.033570552761,-101.828726109347 36.0340827773838,-101.828812222226
36.0346377748585,-101.828848886533 36.0352383354276,-101.828860001868
36.0377699980145,-101.828851663737 36.0553972242279,-101.828847224123
36.0592750027709,-101.828859441212 36.0598261082486,-101.828943331024
36.060555000412,-101.829184445783 36.0618750002204,-101.829233333699
36.0624766690635,-101.829228887565 36.0626827754061,-101.829186108193
36.0631016638116,-101.828911112851 36.0648072190592,-101.828858887075
36.065419442581,-101.828817222497 36.0725438898548,-101.828774443126
36.0824572235603,-101.828868887617 36.1104455587171,-101.828831108517
36.1264377745739,-101.8288511096 36.1398138904139),(-101.824717776143
36.13980777535,-101.82466833409 36.1728461103171,-101.824645001665
36.1824049984827,-101.824637778327 36.1892138875908,-101.824610553906
36.1926449991696,-101.824617777244 36.196952220797,-101.824609445632
36.2088477805416,-101.824578889869 36.212893886327,-101.824577775076
36.219610554011,-101.824555557445 36.2267472248935,-101.824566112124
36.2273683341639,-101.82454611104 36.2315450011298,-101.824542779699
36.2345433317643,-101.824519447274 36.2377711142046,-101.824523886889
36.2415544417372,-101.82452888716 36.2437866682834,-101.824607776702
36.2445077764528,-101.824848330804 36.2455761133434,-101.824899441787
36.2461255564104,-101.824846668393 36.2466955546978,-101.824711667598
36.2472077793206,-101.824534441568 36.2476361141311,-101.824388331957
36.2480111083723,-101.824242776483 36.2484055560795,-101.823646668567
36.250063331685,-101.823233334569 36.2512011117122,-101.823118334858
36.2515172240149,-101.82300444342 36.2518850014374,-101.82289777532
36.2522072222849,-101.822840555792 36.2525549986239,-101.822815554438
36.2529155527085,-101.8228461102 36.2532422196901,-101.822902221454
36.2536083347018,-101.822981665132 36.2539472252921,-101.823102219252
36.2542472219889,-101.823257221131 36.2545666656323,-101.823562778755
36.2550849988,-101.82383888889 36.2555399973757,-101.824007776789
36.2558977807757,-101.824170002006 36.2563272238602,-101.824283332787
36.2567383347908,-101.824333335496 36.2571955564335,-101.82431721989
36.2580011085522,-101.824314442687 36.2586688891909,-101.824303888008
36.2597166643417,-101.824291110262 36.260692219152,-101.824201111905
36.2672794469676,-101.82415555533 36.2711016683938,-101.824158886671
36.2792094414335,-101.824137777313 36.2821988863193,-101.824132777042
36.2849522232369,-101.824129999838 36.2879477766675,-101.824113890752
36.2994038862669,-101.824093335531 36.3035277798391,-101.824023331738
36.3279111087282,-101.824044447615 36.3284150017393,-101.824024446531
36.3397861132525,-101.824006668515 36.3461372200615,-101.823992221839
36.3542472226873,-101.823992775976 36.3568855533742,-101.82397999823
36.3582511097577,-101.823985552638 36.3597449977356,-101.823966666348
36.3646083316308,-101.823967220485 36.3676633341753,-101.823973889685
36.368373887666,-101.823938887789 36.3864688902008,-101.823886107876
36.4154733364722,-101.823881668261 36.4237994459827,-101.82385611277
36.4299505549938,-101.823848889432 36.4387561102975,-101.823839997164
36.4430555544499,-101.823806110061 36.4589611098099,-101.823790067161
36.46687981166))",995679

-- 
Peter Townsend
Senior Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20250811/8f832ef1/attachment-0001.htm>

From even.rouault at spatialys.com  Mon Aug 11 14:15:05 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 11 Aug 2025 23:15:05 +0200
Subject: [gdal-dev] GeoJSON to CSV output difference between 3.7 and 3.9
In-Reply-To: <CAMQBGmWEp0EX+=NmWuxNmCOEAmFm0mnPGvar_a6P8cFqaPDTTw@mail.gmail.com>
References: <CAMQBGmWEp0EX+=NmWuxNmCOEAmFm0mnPGvar_a6P8cFqaPDTTw@mail.gmail.com>
Message-ID: <0b7ab279-7d7f-4d72-b874-3da3764c45e3@spatialys.com>

Peter,

I don't recall a conscious choice to change the behavior regarding the 
presence of "type":"Feature", but I would say the 3.7 behavior was more 
an accident than really intended (at least no regression test caught 
it). I can't think of a workaround but modifying the input file to be 
conformant with the GeoJSON spec.

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20250811/bed3067a/attachment.htm>

From peter.townsend at maplarge.com  Mon Aug 11 14:30:37 2025
From: peter.townsend at maplarge.com (Peter Townsend)
Date: Mon, 11 Aug 2025 16:30:37 -0500
Subject: [gdal-dev] GeoJSON to CSV output difference between 3.7 and 3.9
In-Reply-To: <0b7ab279-7d7f-4d72-b874-3da3764c45e3@spatialys.com>
References: <CAMQBGmWEp0EX+=NmWuxNmCOEAmFm0mnPGvar_a6P8cFqaPDTTw@mail.gmail.com>
 <0b7ab279-7d7f-4d72-b874-3da3764c45e3@spatialys.com>
Message-ID: <CAMQBGmWFxna9nhtqp4QSdxgp9f1R-Yg0MKV5gvxHtwjHjwgwJA@mail.gmail.com>

Thanks for thinking on it! I've added the "type": "Feature" to the input
file and everything's happy again.

On Mon, Aug 11, 2025 at 4:15?PM Even Rouault <even.rouault at spatialys.com>
wrote:

> Peter,
>
> I don't recall a conscious choice to change the behavior regarding the
> presence of "type":"Feature", but I would say the 3.7 behavior was more an
> accident than really intended (at least no regression test caught it). I
> can't think of a workaround but modifying the input file to be conformant
> with the GeoJSON spec.
>
> Even
>
> -- http://www.spatialys.com
> My software is free, but my time generally not.
>
>

-- 
Peter Townsend
Senior Software Developer
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/gdal-dev/attachments/20250811/146d1d84/attachment.htm>

From jctoney at gmail.com  Wed Aug 13 15:29:40 2025
From: jctoney at gmail.com (Chris Toney)
Date: Wed, 13 Aug 2025 16:29:40 -0600
Subject: [gdal-dev] Could vector reproject be affected if alternative
 BLAS/LAPACK implementations are in use?
Message-ID: <CALRbqOSC98eAj-LNhZw2VJ4FL7a-cXSexBNpf7eqPttZEk=D4w@mail.gmail.com>

Hi,
Is it possible that vector reproject (via `GDALVectorTranslate()`)
could be affected if alternative BLAS/LAPACK implementations are
present (i.e, from Intel MKL or OpenBLAS)?

"ERROR 1: Reprojection failed" may originate from
https://github.com/OSGeo/gdal/blob/e48cc4f31f43cf872c036d2c4e65e7368166c34a/apps/ogr2ogr_lib.cpp#L6378.
This is followed by seg fault.

The error is reported with GDAL 3.10.3, GEOS 3.13.0, PROJ 9.6.2 on
Fedora 42. The question is motivated by the issue at:
https://github.com/USDAForestService/gdalraster/issues/769.

The same code/inputs test without issue on a wide range of different
platforms in several CI and package management scenarios. The error
message and seg fault appear to only occur (sometimes not always) when
the alternative BLAS/LAPACK are present.

The code that generates the error is at:
https://github.com/USDAForestService/gdalraster/blob/d7c620b74a987cbc3f96dec245d37809e09f858a/src/gdal_exp.cpp#L1791

Input and output datasets are GPKG and reprojection is from NAD83 GCS
(EPSG:4269) to EPSG:32100.

Thanks.

Chris Toney

From even.rouault at spatialys.com  Thu Aug 14 01:50:23 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 14 Aug 2025 10:50:23 +0200
Subject: [gdal-dev] Could vector reproject be affected if alternative
 BLAS/LAPACK implementations are in use?
In-Reply-To: <CALRbqOSC98eAj-LNhZw2VJ4FL7a-cXSexBNpf7eqPttZEk=D4w@mail.gmail.com>
References: <CALRbqOSC98eAj-LNhZw2VJ4FL7a-cXSexBNpf7eqPttZEk=D4w@mail.gmail.com>
Message-ID: <9df67e1e-87e4-4c2e-a49b-0e3f0cbffa41@spatialys.com>

Chris,

BLAS/LAPACK is not a direct dependency of GDAL nor PROJ.? BLAS is a 
dependency of libarmadillo, which is an optional dependency of GDAL, but 
not involved in vector reprojection. I'd suggest :

- running ldd libgdal.so and check there are not 2 PROJ versions linked

- running under Valgrind to see if there is something interesting showing up

- running under gdb and showing the stack trace where it crashes

Even

Le 14/08/2025 ? 00:29, Chris Toney via gdal-dev a ?crit?:
> Hi,
> Is it possible that vector reproject (via `GDALVectorTranslate()`)
> could be affected if alternative BLAS/LAPACK implementations are
> present (i.e, from Intel MKL or OpenBLAS)?
>
> "ERROR 1: Reprojection failed" may originate from
> https://github.com/OSGeo/gdal/blob/e48cc4f31f43cf872c036d2c4e65e7368166c34a/apps/ogr2ogr_lib.cpp#L6378.
> This is followed by seg fault.
>
> The error is reported with GDAL 3.10.3, GEOS 3.13.0, PROJ 9.6.2 on
> Fedora 42. The question is motivated by the issue at:
> https://github.com/USDAForestService/gdalraster/issues/769.
>
> The same code/inputs test without issue on a wide range of different
> platforms in several CI and package management scenarios. The error
> message and seg fault appear to only occur (sometimes not always) when
> the alternative BLAS/LAPACK are present.
>
> The code that generates the error is at:
> https://github.com/USDAForestService/gdalraster/blob/d7c620b74a987cbc3f96dec245d37809e09f858a/src/gdal_exp.cpp#L1791
>
> Input and output datasets are GPKG and reprojection is from NAD83 GCS
> (EPSG:4269) to EPSG:32100.
>
> Thanks.
>
> Chris Toney
> _______________________________________________
> gdal-dev mailing list
> gdal-dev at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/gdal-dev

-- 
http://www.spatialys.com
My software is free, but my time generally not.


