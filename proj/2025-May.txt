From even.rouault at spatialys.com  Thu May  1 08:50:27 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 1 May 2025 17:50:27 +0200
Subject: [PROJ] Request for NTv2 Grid Files for ED50, IGM95,
 and Monte Mario to RDN2008 Transformations
In-Reply-To: <CAJb+4z2A7UbMOTQBrd7SQDJECT_NMugxtxT=2T_55w-Fc+Pq8Q@mail.gmail.com>
References: <CAJb+4z2A7UbMOTQBrd7SQDJECT_NMugxtxT=2T_55w-Fc+Pq8Q@mail.gmail.com>
Message-ID: <12c1b9c9-f2cb-43ed-8153-4bcb1ee02f49@spatialys.com>

Hello,

unfortunately we cannot help you. Those files are not available under an 
open data license, and must be acquired for a fee with 
https://www.igmi.org/en

Even

Le 01/05/2025 ? 17:47, Sourabh Arora a ?crit?:
>
> Dear Sir,
>
> I hope this message finds you well.
>
> I am currently working on a geospatial project that requires accurate 
> coordinate transformations for Italian geodetic systems using 
> PROJ/GDAL on Windows. In particular, we require NTv2 grid files for 
> the following transformations:
>
> 1.
>
>     ED50 to RDN2008
>
>     Grid: 35160622_47161840_E50_F00.gsb
>
> 2.
>
>     IGM95 to RDN2008
>
>     Grid: 35160622_47161840_F89_F00.gsb
>
> 3.
>
>     Monte Mario to RDN2008
>
>     Grid: 35160622_47161840_R40_F00.gsb
>
> These grid files are referenced on EPSG and PROJ documentation but are 
> not publicly available in the PROJ-data repository or through 
> projsync. As these transformations are critical for our application?s 
> spatial accuracy, I would kindly like to request access to these .gsb 
> files.
>
> If there?formal procedure I need to follow, I would be happy to comply.
>
> Please let me know if additional information is required regarding the 
> area of interest or the intended usage.
>
> Thank you in advance for your time and support.
>
> Best regards,
>
> Sourabh Arora
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250501/004dbb1b/attachment.htm>

From gdt at lexort.com  Thu May  1 17:05:15 2025
From: gdt at lexort.com (Greg Troxel)
Date: Thu, 01 May 2025 20:05:15 -0400
Subject: [PROJ] building qgis 3.34.15 fails with proj 9.6.0,
 it seems (fuzzy for now)
Message-ID: <rmimsbv27yc.fsf@s1.lexort.com>

Note that it's possible my pkgsrc package for 9.6.0 is troubled, and
it's possible I'm confused.

I build the whole osgeo stack under pkgsrc, and mostly that's ok.  I
recently updated proj from 9.5.1 to 9.6.0, and I have locally updated
(not published) gdal 3.11.0beta1.

Right now I am using 3.34.15.  (Yes, I know that's old LTR.)>

I then rebuilt a lot of packages (because of python setuptools), and
qgis failed, with crssync complaining about inserts and constraints.

I then reverted proj from 9.6.0 to 9.5.1, without updating anything that
depends on it, because in theory there is no ABI break.  Then I built
qgis again and got a clean build.

I had also built but not installed Javier's NATRF2022 package.
PROJ_AUX_DB is not set in my qgis build env, so I don't see how the qgis
build could be affected.

Thus, it looks like the db I end up with from 9.6.0 has dups, but that's
jumping to conclusions.

I'll revisit this and get a proper build log, and see if I can figure
out what's up, and post again.

In the meantime, if you have installed proj 9.6.0 (and maybe gdal 3.11
beta) on your system, I would be interested to know if building qgis
succeeds or not.


From j1 at jimenezshaw.com  Fri May  2 04:13:13 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 2 May 2025 13:13:13 +0200
Subject: [PROJ] geoid model for GNTRANS2016 height
Message-ID: <CADRrdKsgUrRHqDGXgpkgJZ2dOiAfQorN8q0vPCKyL=e0YthE0w@mail.gmail.com>

Hi

I found this vertical system:
https://epsg.org/crs_9927/GNTRANS2016-height.html

That has a geoid model definition. But the transformation used is not "...
to GNTRANS2016 height" but to "... to DHDN2016 height". Why? I do not know.
Probably they are considered equivalent for Deutsche Bahn (yes, the railway
company).

Looking at the table "epsg_definingoperation" from the EPSG database there
is [lines are from a generated db, not the original sql]
INSERT INTO "main"."epsg_definingoperation" ("crs_code", "ct_code") VALUES
('9927', '9925');

There is a similar one for "Alicante height", that works normally
INSERT INTO "main"."epsg_definingoperation" ("crs_code", "ct_code") VALUES
('5782', '9410');

And there is no entry for "DHDN2016 height" (7837) in that table. But there
are transformations defined. Yes, the German vertical system and geoid
model works.

I do not know what does it exactly mean that "defining operation". I was
expecting something like "the orthometric height is *defined* as the
ellipsoidal height minus that geoid undulation"  (so that geoid file is not
a "model", but a "definition") as they do in the new American NAPGD2022.
"By definition". But I have not seen it before. (In Alicante height I am
very surprised, because the vertical system is really old).

Anyhow, I think there is a missing connection in the proj.db between
"GNTRANS2016 height" and the geoid model transformation defined in EPSG. I
have the impression we are not using epsg_definingoperation at all.

Does it make sense to process it? Is "GNTRANS2016 height" the only one
without the connection?

Cheers,
Javier.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250502/648ee2cc/attachment.htm>

From even.rouault at spatialys.com  Fri May  2 04:33:07 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 2 May 2025 13:33:07 +0200
Subject: [PROJ] geoid model for GNTRANS2016 height
In-Reply-To: <CADRrdKsgUrRHqDGXgpkgJZ2dOiAfQorN8q0vPCKyL=e0YthE0w@mail.gmail.com>
References: <CADRrdKsgUrRHqDGXgpkgJZ2dOiAfQorN8q0vPCKyL=e0YthE0w@mail.gmail.com>
Message-ID: <01b92f4d-e245-4651-ae94-0e47c6b4e0ae@spatialys.com>

Javier,

The epsg_definingoperation table of EPSG captures (among other defining 
operations) the HeightTransformation association of a VerticalCRS of OGC 
Abstract Topic 2 (https://docs.ogc.org/as/18-005r4/18-005r4.html), and 
the GEOIDMODEL[] node in WKT.

IMHO, this concept of "defining operation" is a unnecessary modelling 
complication. If there was *one* single defining operation allowed, I 
could perhaps understand it, but several ones are allowed (e.g. NAVD88 
is "defined" by all the US geoid models! see 
https://epsg.org/crs_5703/NAVD88-height.html), and I bet that if you try 
those different ones, they don't lead to the same value of NAVD88 
height.. So, I believe this is effectively redundant with the coordinate 
operation table.

The PROJ EPSG db importer doesn't import that epsg_definingoperation 
table and solely relies on the epsg_coordoperation table to figure out 
which transformation are available.

It seems to be that for this GNTRANS2016 height, this is more a hole in 
the EPSG db to not have a corresponding entry in epsg_coordoperation, 
unless they have a good reason for not doing that. Before implementing 
complications on our side to process epsg_definingoperation, I'd suggest 
you contact IOGP to check.

Even

Le 02/05/2025 ? 13:13, Javier Jimenez Shaw via PROJ a ?crit?:
> Hi
>
> I found this vertical system:
> https://epsg.org/crs_9927/GNTRANS2016-height.html
>
> That has a geoid model definition. But the transformation used is not 
> "... to GNTRANS2016 height" but to "... to DHDN2016 height". Why? I do 
> not know. Probably they are considered equivalent for Deutsche Bahn 
> (yes, the railway company).
>
> Looking at the table "epsg_definingoperation" from the EPSG database 
> there is [lines are from a generated db, not the original sql]
> INSERT INTO "main"."epsg_definingoperation" ("crs_code", "ct_code") 
> VALUES ('9927', '9925');
>
> There is a similar one for "Alicante height", that works normally
> INSERT INTO "main"."epsg_definingoperation" ("crs_code", "ct_code") 
> VALUES ('5782', '9410');
>
> And there is no entry for "DHDN2016 height" (7837) in that table. But 
> there are transformations defined. Yes, the German vertical system and 
> geoid model works.
>
> I do not know what does it exactly?mean that "defining operation". I 
> was expecting something like "the orthometric height is *defined* as 
> the ellipsoidal height minus that geoid undulation"? (so that geoid 
> file is not a "model", but a "definition") as they do in the new 
> American NAPGD2022. "By definition". But I have not seen it before. 
> (In Alicante height I am very surprised, because the vertical system 
> is really old).
>
> Anyhow, I think there is a missing connection in the proj.db between 
> "GNTRANS2016 height" and the geoid model transformation defined in 
> EPSG. I have the impression we are not using epsg_definingoperation at 
> all.
>
> Does it make sense to process it? Is "GNTRANS2016 height" the only one 
> without the connection?
>
> Cheers,
> Javier.
>
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.


From gdt at lexort.com  Fri May  2 06:56:45 2025
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 02 May 2025 09:56:45 -0400
Subject: [PROJ] qgis 3.34.15 failure with proj 9.6.0, is a qgis issue,
 not a proj issue
In-Reply-To: <rmimsbv27yc.fsf@s1.lexort.com> (Greg Troxel via PROJ's message
 of "Thu, 01 May 2025 20:05:15 -0400")
References: <rmimsbv27yc.fsf@s1.lexort.com>
Message-ID: <rmizffvyv36.fsf@s1.lexort.com>

The unique constraints insert failure issue was not the problem.  That
happens with both 9.5.1 and 9.6.0.

The changed line in the build output is

  Operation needs translation in QgsCoordinateReferenceSystemUtils::translateProjection: spilhaus

which is because

  QString QgsCoordinateReferenceSystemUtils::translateProjection( const QString &projection )

lacks a pair of lines that look like this

  if ( projection == QLatin1String( "gstmerc" ) )
    return QObject::tr( "Gauss-Schreiber" );

for spilhaus.


These lines are present in git on release-3_40 and master.


All in all, it was a surprise to me, and perhaps it is to some of you,
that adding a projection in proj leads to a requirement to add code to
qgis.

From j1 at jimenezshaw.com  Fri May  2 07:43:23 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 2 May 2025 16:43:23 +0200
Subject: [PROJ] qgis 3.34.15 failure with proj 9.6.0, is a qgis issue,
 not a proj issue
In-Reply-To: <rmizffvyv36.fsf@s1.lexort.com>
References: <rmimsbv27yc.fsf@s1.lexort.com> <rmizffvyv36.fsf@s1.lexort.com>
Message-ID: <CADRrdKv-tSSTrayOTYy4ZLCz2+=2WBB7Uy7X6oDv0obN45CH4w@mail.gmail.com>

Yes, it is a surprise for me.

On Fri, 2 May 2025, 15:56 Greg Troxel via PROJ, <proj at lists.osgeo.org>
wrote:

> The unique constraints insert failure issue was not the problem.  That
> happens with both 9.5.1 and 9.6.0.
>
> The changed line in the build output is
>
>   Operation needs translation in
> QgsCoordinateReferenceSystemUtils::translateProjection: spilhaus
>
> which is because
>
>   QString QgsCoordinateReferenceSystemUtils::translateProjection( const
> QString &projection )
>
> lacks a pair of lines that look like this
>
>   if ( projection == QLatin1String( "gstmerc" ) )
>     return QObject::tr( "Gauss-Schreiber" );
>
> for spilhaus.
>
>
> These lines are present in git on release-3_40 and master.
>
>
> All in all, it was a surprise to me, and perhaps it is to some of you,
> that adding a projection in proj leads to a requirement to add code to
> qgis.
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250502/b44f424c/attachment.htm>

From j1 at jimenezshaw.com  Fri May  2 11:18:39 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 2 May 2025 20:18:39 +0200
Subject: [PROJ] geoid model for GNTRANS2016 height
In-Reply-To: <01b92f4d-e245-4651-ae94-0e47c6b4e0ae@spatialys.com>
References: <CADRrdKsgUrRHqDGXgpkgJZ2dOiAfQorN8q0vPCKyL=e0YthE0w@mail.gmail.com>
 <01b92f4d-e245-4651-ae94-0e47c6b4e0ae@spatialys.com>
Message-ID: <CADRrdKuPMeuqZdqMPjasunQrBz=a71G1q5J9q3vVF9drx4R39g@mail.gmail.com>

Thanks Even

I already asked IOGP.

I made a query to their db (maybe a bit older version, not the last) and
got that this is the only case not covered properly:

select edo.*, ecrs.coord_ref_sys_name, eco.coord_op_code,
eco.coord_op_name, eco.source_crs_code, eco.target_crs_code,
coord_op_accuracy
from epsg_definingoperation AS edo
inner join epsg_coordinatereferencesystem AS ecrs
on edo.crs_code = ecrs.coord_ref_sys_code
left OUTER JOIN epsg_coordoperation AS eco
on edo.ct_code = eco.coord_op_code
where edo.crs_code not in (eco.target_crs_code, eco.source_crs_code) AND
eco.coord_op_name NOT like '%' || ecrs.coord_ref_sys_name || '%'

crs_codect_codecoord_ref_sys_namecoord_op_codecoord_op_namesource_crs_code
target_crs_codecoord_op_accuracy
9927 9925 GNTRANS2016 height 9925 ETRS89 to DHHN2016 height (1) 4937 7837
0.1

On Fri, 2 May 2025 at 13:33, Even Rouault <even.rouault at spatialys.com>
wrote:

> Javier,
>
> The epsg_definingoperation table of EPSG captures (among other defining
> operations) the HeightTransformation association of a VerticalCRS of OGC
> Abstract Topic 2 (https://docs.ogc.org/as/18-005r4/18-005r4.html), and
> the GEOIDMODEL[] node in WKT.
>
> IMHO, this concept of "defining operation" is a unnecessary modelling
> complication. If there was *one* single defining operation allowed, I
> could perhaps understand it, but several ones are allowed (e.g. NAVD88
> is "defined" by all the US geoid models! see
> https://epsg.org/crs_5703/NAVD88-height.html), and I bet that if you try
> those different ones, they don't lead to the same value of NAVD88
> height.. So, I believe this is effectively redundant with the coordinate
> operation table.
>
> The PROJ EPSG db importer doesn't import that epsg_definingoperation
> table and solely relies on the epsg_coordoperation table to figure out
> which transformation are available.
>
> It seems to be that for this GNTRANS2016 height, this is more a hole in
> the EPSG db to not have a corresponding entry in epsg_coordoperation,
> unless they have a good reason for not doing that. Before implementing
> complications on our side to process epsg_definingoperation, I'd suggest
> you contact IOGP to check.
>
> Even
>
> Le 02/05/2025 ? 13:13, Javier Jimenez Shaw via PROJ a ?crit :
> > Hi
> >
> > I found this vertical system:
> > https://epsg.org/crs_9927/GNTRANS2016-height.html
> >
> > That has a geoid model definition. But the transformation used is not
> > "... to GNTRANS2016 height" but to "... to DHDN2016 height". Why? I do
> > not know. Probably they are considered equivalent for Deutsche Bahn
> > (yes, the railway company).
> >
> > Looking at the table "epsg_definingoperation" from the EPSG database
> > there is [lines are from a generated db, not the original sql]
> > INSERT INTO "main"."epsg_definingoperation" ("crs_code", "ct_code")
> > VALUES ('9927', '9925');
> >
> > There is a similar one for "Alicante height", that works normally
> > INSERT INTO "main"."epsg_definingoperation" ("crs_code", "ct_code")
> > VALUES ('5782', '9410');
> >
> > And there is no entry for "DHDN2016 height" (7837) in that table. But
> > there are transformations defined. Yes, the German vertical system and
> > geoid model works.
> >
> > I do not know what does it exactly mean that "defining operation". I
> > was expecting something like "the orthometric height is *defined* as
> > the ellipsoidal height minus that geoid undulation"  (so that geoid
> > file is not a "model", but a "definition") as they do in the new
> > American NAPGD2022. "By definition". But I have not seen it before.
> > (In Alicante height I am very surprised, because the vertical system
> > is really old).
> >
> > Anyhow, I think there is a missing connection in the proj.db between
> > "GNTRANS2016 height" and the geoid model transformation defined in
> > EPSG. I have the impression we are not using epsg_definingoperation at
> > all.
> >
> > Does it make sense to process it? Is "GNTRANS2016 height" the only one
> > without the connection?
> >
> > Cheers,
> > Javier.
> >
> >
> >
> > _______________________________________________
> > PROJ mailing list
> > PROJ at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/proj
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250502/19902cec/attachment-0001.htm>

From j1 at jimenezshaw.com  Fri May  2 12:10:59 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 2 May 2025 21:10:59 +0200
Subject: [PROJ] geoid model + Helmert
Message-ID: <CADRrdKsT9tX8+M5Ni7ePU5NHWu01a5mNEJaYYJB3fCL2FVADOA@mail.gmail.com>

Hi

This is a question to understand what should be more correct, not a request
to change anything in PROJ. The numerical difference is very small.

The 3D transformation from EPSG:4258 to EPSG:4150+5729 has two components:
a grid file for the geoid model of LHN95 height, interpolated in ETRS89,
and the Helmert transformation from ETRS89 (EPSG:4258) to CH1903+
(EPSG:4150).
The input of the Helmert transformation should be ellipsoidal heights, but
in this pipeline they are orthometric heights. Right?
Technically that would change also the horizontal output because of the
change in elevation in the input of the Helmert (again, the difference is
very small. 1 or 2 mm. I just want to understand it).

PROJ_NETWORK=ON projinfo EPSG:4258 EPSG:4150+5729 -o proj --3d

+proj=pipeline
  +step +proj=axisswap +order=2,1
  +step +proj=unitconvert +xy_in=deg +xy_out=rad
  +step +inv +proj=vgridshift +grids=ch_swisstopo_chgeo2004_ETRS89_LHN95.tif
        +multiplier=1
  +step +proj=push +v_3
  +step +proj=cart +ellps=GRS80
  +step +inv +proj=helmert +x=674.374 +y=15.056 +z=405.346
  +step +inv +proj=cart +ellps=bessel
  +step +proj=pop +v_3
  +step +proj=unitconvert +xy_in=rad +xy_out=deg
  +step +proj=axisswap +order=2,1


Would this be more correct? (undoing the vgridshift before calling Helmert,
but after "push +v_3")

+proj=pipeline
  +step +proj=axisswap +order=2,1
  +step +proj=unitconvert +xy_in=deg +xy_out=rad
  +step +inv +proj=vgridshift +grids=ch_swisstopo_chgeo2004_ETRS89_LHN95.tif
        +multiplier=1
  +step +proj=push +v_3
  +step +proj=vgridshift +grids=ch_swisstopo_chgeo2004_ETRS89_LHN95.tif
        +multiplier=1
  +step +proj=cart +ellps=GRS80
  +step +inv +proj=helmert +x=674.374 +y=15.056 +z=405.346
  +step +inv +proj=cart +ellps=bessel
  +step +proj=pop +v_3
  +step +proj=unitconvert +xy_in=rad +xy_out=deg
  +step +proj=axisswap +order=2,1

Thanks.

Javier.

PS to get output in meters use EPSG:2056, that uses the Swiss projection. I
removed it to simplify the pipelines.
Just replace the last two lines of the pipeline with
+step +proj=somerc +lat_0=46.9524055555556 +lon_0=7.43958333333333 +k_0=1
+x_0=2600000 +y_0=1200000 +ellps=bessel
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250502/ad709fc0/attachment.htm>

From even.rouault at spatialys.com  Fri May  2 15:27:54 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 3 May 2025 00:27:54 +0200
Subject: [PROJ] geoid model + Helmert
In-Reply-To: <CADRrdKsT9tX8+M5Ni7ePU5NHWu01a5mNEJaYYJB3fCL2FVADOA@mail.gmail.com>
References: <CADRrdKsT9tX8+M5Ni7ePU5NHWu01a5mNEJaYYJB3fCL2FVADOA@mail.gmail.com>
Message-ID: <a53adcf8-14d2-40ea-bd66-c269aa11154d@spatialys.com>

Hi Javier,

yes, your analysis is fully correct , and your enhanced pipeline too. 
However that would suck a bit to have to implement it like that as doing 
and undoing the vgridshift is inefficient. The ideal solution would use 
some storage space as we discussed a few months ago but couldn't reach a 
conclusion how to implement that.? For 3D operations only like that, we 
could use the v_4 component as the temporary storage using push +v_3 / 
axisswap order=3,4 / pop +v_3 trickery

Even

Le 02/05/2025 ? 21:10, Javier Jimenez Shaw via PROJ a ?crit?:
> Hi
>
> This is a question to understand what should be more correct, not a 
> request to change anything in PROJ. The numerical difference is very 
> small.
>
> The 3D transformation from EPSG:4258 to EPSG:4150+5729 has two 
> components: a grid file for the geoid model of LHN95 height, 
> interpolated in ETRS89, and the Helmert transformation from ETRS89 
> (EPSG:4258) to CH1903+ (EPSG:4150).
> The input of the Helmert transformation should be ellipsoidal heights, 
> but in this pipeline they are orthometric heights. Right?
> Technically that would change also the horizontal output because of 
> the change in elevation in the input of the Helmert (again, the 
> difference is very small. 1 or 2 mm. I just want to understand it).
>
> PROJ_NETWORK=ON projinfo EPSG:4258 EPSG:4150+5729 -o proj --3d
>
> +proj=pipeline
> ? +step +proj=axisswap +order=2,1
> ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
> ? +step +inv +proj=vgridshift 
> +grids=ch_swisstopo_chgeo2004_ETRS89_LHN95.tif
> ? ? ? ? +multiplier=1
> ? +step +proj=push +v_3
> ? +step +proj=cart +ellps=GRS80
> ? +step +inv +proj=helmert +x=674.374 +y=15.056 +z=405.346
> ? +step +inv +proj=cart +ellps=bessel
> ? +step +proj=pop +v_3
> ? +step +proj=unitconvert +xy_in=rad +xy_out=deg
> ? +step +proj=axisswap +order=2,1
>
>
> Would this be more correct? (undoing the vgridshift before calling 
> Helmert, but after "push +v_3")
>
> +proj=pipeline
> ? +step +proj=axisswap +order=2,1
> ? +step +proj=unitconvert +xy_in=deg +xy_out=rad
> ? +step +inv +proj=vgridshift 
> +grids=ch_swisstopo_chgeo2004_ETRS89_LHN95.tif
> ? ? ? ? +multiplier=1
> ? +step +proj=push +v_3
> ? +step +proj=vgridshift +grids=ch_swisstopo_chgeo2004_ETRS89_LHN95.tif
> ? ? ? ? +multiplier=1
> ? +step +proj=cart +ellps=GRS80
> ? +step +inv +proj=helmert +x=674.374 +y=15.056 +z=405.346
> ? +step +inv +proj=cart +ellps=bessel
> ? +step +proj=pop +v_3
> ? +step +proj=unitconvert +xy_in=rad +xy_out=deg
> ? +step +proj=axisswap +order=2,1
>
> Thanks.
>
> Javier.
>
> PS to get output in meters use EPSG:2056, that uses the Swiss 
> projection. I removed it to simplify the pipelines.
> Just replace the last two lines of the pipeline with
> +step +proj=somerc +lat_0=46.9524055555556 +lon_0=7.43958333333333 
> +k_0=1 +x_0=2600000 +y_0=1200000 +ellps=bessel
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250503/942db60f/attachment.htm>

From gdt at lexort.com  Fri May  2 15:52:00 2025
From: gdt at lexort.com (Greg Troxel)
Date: Fri, 02 May 2025 18:52:00 -0400
Subject: [PROJ] geoid model + Helmert
In-Reply-To: <CADRrdKsT9tX8+M5Ni7ePU5NHWu01a5mNEJaYYJB3fCL2FVADOA@mail.gmail.com>
 (Javier Jimenez Shaw via PROJ's message of "Fri, 2 May 2025 21:10:59
 +0200")
References: <CADRrdKsT9tX8+M5Ni7ePU5NHWu01a5mNEJaYYJB3fCL2FVADOA@mail.gmail.com>
Message-ID: <rmibjsazkvj.fsf@s1.lexort.com>

Javier Jimenez Shaw via PROJ <proj at lists.osgeo.org> writes:

> The 3D transformation from EPSG:4258 to EPSG:4150+5729 has two components:
> a grid file for the geoid model of LHN95 height, interpolated in ETRS89,
> and the Helmert transformation from ETRS89 (EPSG:4258) to CH1903+
> (EPSG:4150).
> The input of the Helmert transformation should be ellipsoidal heights, but
> in this pipeline they are orthometric heights. Right?
> Technically that would change also the horizontal output because of the
> change in elevation in the input of the Helmert (again, the difference is
> very small. 1 or 2 mm. I just want to understand it).
>
> PROJ_NETWORK=ON projinfo EPSG:4258 EPSG:4150+5729 -o proj --3d
>
> +proj=pipeline
>   +step +proj=axisswap +order=2,1
>   +step +proj=unitconvert +xy_in=deg +xy_out=rad
>   +step +inv +proj=vgridshift +grids=ch_swisstopo_chgeo2004_ETRS89_LHN95.tif
>         +multiplier=1
>   +step +proj=push +v_3
>   +step +proj=cart +ellps=GRS80
>   +step +inv +proj=helmert +x=674.374 +y=15.056 +z=405.346
>   +step +inv +proj=cart +ellps=bessel
>   +step +proj=pop +v_3
>   +step +proj=unitconvert +xy_in=rad +xy_out=deg
>   +step +proj=axisswap +order=2,1

These are CRSes I know ~nothing about so I went to read.  Things I think
I understood:

  EPSG:4258 and EPSG:4150 both seem to be 2D, not 3D.

  CH1903+ is a higher-accuracy realization of CH1903, intending to keep
  coordinates stable.

  I can't quite follow if CH1903+ is, strictly, a reference frame, and
  if it is the same as LV95, or if they are two realizations of the same
  system, but I think effectively they are interchangeable.  I would
  expect that CH1903 is truly a 2D datum, and maybe CH1903+ is 3D with
  HAE.

  LN02 (1902) is an orthometric datum based on leveling.

  LHN95 is sort of leveled and sort of geoid model, in a way I don't
  understand.

  Given that LHN95 goes with LV95/CH1903+, I find it strange that the
  grid file is expressed in ETRS89.  This would then use ETRS89
  horizontal for lookups, and give the difference between ETRS89 HAE and
  LHN95, intending to model LN02.

I see your point that converting to orthometric and using LLH in a
helmert transform is incorrect, and that you'd expect horizontal errors
to be small.  Vertically, it's taking heights in LHN95 and then applying
the HAE difference from ETRS89 to CH1903+, and that seems wrong, as I'd
assume that the HAE of a point in ETRS89 and CH1903+ are different.



What I think you want is to get a grid file that is indexed in CH1903+
and that gives the difference from CH1903+ HAE to LHN95 height (or
defines LHN95, giving an estimate from CH1903+ HAE to LN02).   I don't
understand why that isn't what's available.   In the US, GEOID18 gives
the difference in NAD83(2011) HAE to NAVD88, and those are more or less
analogous.


If you can't get that, I think you have to get the LHN95-h from the
model, and then transform the LLh to CH1903+ LLh, and then add LHN95-h,
and add h-ETRS89 - h_CH1903+ (or maybe subtract...).

From Jochem.Lesparre at kadaster.nl  Sat May  3 03:59:17 2025
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Sat, 3 May 2025 10:59:17 +0000
Subject: [PROJ] geoid model + Helmert
In-Reply-To: <rmibjsazkvj.fsf@s1.lexort.com>
References: <CADRrdKsT9tX8+M5Ni7ePU5NHWu01a5mNEJaYYJB3fCL2FVADOA@mail.gmail.com>
 <rmibjsazkvj.fsf@s1.lexort.com>
Message-ID: <AS8P192MB2238BB8E0A63E216865A95FBEF8C2@AS8P192MB2238.EURP192.PROD.OUTLOOK.COM>

Even Rouault wrote:
> yes, your analysis is fully correct , and your enhanced pipeline too. However that would suck a bit to have to implement it like that as
> doing and undoing the vgridshift is inefficient. The ideal solution would use some storage space as we discussed a few months ago but
> couldn't reach a conclusion how to implement that.  For 3D operations only like that, we could use the v_4 component as the temporary
> storage using push +v_3 / axisswap order=3,4 / pop +v_3 trickery

Greg Troxel wrote:
> What I think you want is to get a grid file that is indexed in CH1903+ and that gives the difference from CH1903+ HAE to LHN95 height (or
> defines LHN95, giving an estimate from CH1903+ HAE to LN02).   I don't
> understand why that isn't what's available.

Probably that isn't available because the usual way to combine a geoid model and a Helmert transformation is to base them both on a international/regional CRS (e.g. ETRS89). I think that this problem should be fixed in the PROJ code, not by asking national authorities to make redundant geoid models.

I'm working for the national authority of the Netherlands (NSGI). We find using the v_4 component as the temporary storage too confusing, when also publishing time-dependent transformations. Therefore, we publish a pipeline with the inefficient doing and undoing the vgridshift. However, I'm still hoping for a conclusion for the discussion of a few months ago on how to implement the ideal solution.

Jochem



Disclaimer:
De inhoud van deze e-mail is vertrouwelijk en uitsluitend bestemd voor de geadresseerde(n).
Gebruik, openbaarmaking, vermenigvuldiging, verspreiding en/of verstrekking van deze informatie aan derden is niet toegestaan.
Op al onze producten en diensten zijn onze algemene leveringsvoorwaarden van toepassing
[https://www.kadaster.nl/algemene-leveringsvoorwaarden].

Disclaimer:
This email and any files transmitted with it are confidential and intended solely for the use of the individual or entity to whom they are addressed.
If you are not the intended recipient, you are notified that disclosing, copying, distributing or taking any action in reliance on the contents of this information is strictly prohibited.
Our general terms and conditions of delivery apply to all our products and services
[https://www.kadaster.com/general-terms-and-conditions].

From gdt at lexort.com  Sat May  3 05:15:34 2025
From: gdt at lexort.com (Greg Troxel)
Date: Sat, 03 May 2025 08:15:34 -0400
Subject: [PROJ] geoid model + Helmert
In-Reply-To: <AS8P192MB2238BB8E0A63E216865A95FBEF8C2@AS8P192MB2238.EURP192.PROD.OUTLOOK.COM>
 (Jochem Lesparre's message of "Sat, 3 May 2025 10:59:17 +0000")
References: <CADRrdKsT9tX8+M5Ni7ePU5NHWu01a5mNEJaYYJB3fCL2FVADOA@mail.gmail.com>
 <rmibjsazkvj.fsf@s1.lexort.com>
 <AS8P192MB2238BB8E0A63E216865A95FBEF8C2@AS8P192MB2238.EURP192.PROD.OUTLOOK.COM>
Message-ID: <rmi34dlzy8p.fsf@s1.lexort.com>

"Lesparre, Jochem" <Jochem.Lesparre at kadaster.nl> writes:

> Even Rouault wrote:
>> yes, your analysis is fully correct , and your enhanced pipeline too. However that would suck a bit to have to implement it like that as
>> doing and undoing the vgridshift is inefficient. The ideal solution would use some storage space as we discussed a few months ago but
>> couldn't reach a conclusion how to implement that.  For 3D operations only like that, we could use the v_4 component as the temporary
>> storage using push +v_3 / axisswap order=3,4 / pop +v_3 trickery
>
> Greg Troxel wrote:
>> What I think you want is to get a grid file that is indexed in CH1903+ and that gives the difference from CH1903+ HAE to LHN95 height (or
>> defines LHN95, giving an estimate from CH1903+ HAE to LN02).   I don't
>> understand why that isn't what's available.
>
> Probably that isn't available because the usual way to combine a geoid
> model and a Helmert transformation is to base them both on a
> international/regional CRS (e.g. ETRS89). I think that this problem
> should be fixed in the PROJ code, not by asking national authorities
> to make redundant geoid models.

In the US (what I've mostly paid attention to) we have a regional datum
but more or less no local datums, or really that the older datums aren't
in use much (NAD27/NGVD29).  At least I am not aware of geoid models for
NGVD29.  I'm viewing NAD83(2011/CSRS-recent) and ETRS89 as occupying
similar logical positions.

> I'm working for the national authority of the Netherlands (NSGI). We
> find using the v_4 component as the temporary storage too confusing,
> when also publishing time-dependent transformations. Therefore, we
> publish a pipeline with the inefficient doing and undoing the
> vgridshift. However, I'm still hoping for a conclusion for the
> discussion of a few months ago on how to implement the ideal solution.

I am having trouble understanding, so a brief question if you're
willing.

  I think we're talking about
   ch_swisstopo_chgeo2004_ETRS89_LHN95.tif
  which is the same data aas
   https://opendata.swiss/en/dataset/geoidmodell-chgeo2004-in-etrs89
  which says
    Swiss geoid model in the version of 2004 (CHGeo2004) in the reference
    system ETRS89. It forms the zero reference surface (approximated mean
    sea level) for height determination and serves for the transformation
    between ellipsoidal heights and orthometric heights (LHN95). The geoid
    heights are stored in a regular 30 x 30 seconds grid and are
    interpolated by the biquadratic method. The model is available in
    various reference systems and data formats.

  The swisstopo grid shift file is indexed horizontally in ETRS89.
  That's easy to understand.

  The values are expressed in ETRS89 HAE, and are the ellipsoidal
  heights of the LHN95 zero surface.

So, if you want to start in ETRS89, and end up with horizontal in
CH1903+, and vertical in LHN95, you have to:

  A) Use the geoid model to get LHN95 height from the ETRS89 HAE, based on
  ETRS89 horizontal.

  B) Take the original ETRS89 LLh and Helmert transform to CH1903+, and
  then discard the h, and swap in the LHN95 H from step A.

And I think that

  C) Take ETRS89 LLh, and apply the geoid model to get LLH in
  ETRS89+LHN95, and then Helmert transform that LLH as if it were ETRS89
  LLh to get CH1903+, and treat it as CH1903+ + LHN95, then you'll end
  up with an introduced error which is the difference in ETRS89 and
  CH1903+ ellipsoid heights.

What I'm having trouble with is that for a station, I expect ETRS89 HAE
and CH1903+ HAE to be different, and that therefore one has to do the
A/B procedure above.   I don't understand how that relates to "Undoing"
the grid shift.  Perhaps these are two ways of expressing the same thing
and that's what the push/pop is all about.


I can certainly see your point that proj should work well with the grid
files as published.

From gdt at lexort.com  Sat May  3 05:48:44 2025
From: gdt at lexort.com (Greg Troxel)
Date: Sat, 03 May 2025 08:48:44 -0400
Subject: [PROJ] 9.6.0 sharp embed compiler test on gcc7
Message-ID: <rmiy0vdyi4z.fsf@s1.lexort.com>

I updated proj to 9.6.0 and on NetBSD 10 with gcc 10 it seems fine.
The build fails on NetBSD 9 with gcc 7, I think due to gcc 7 not
supporting C23 (which is spelled --std=c2x in gcc10).

http://www.ki.nu/pkgsrc/reports/current/NetBSD-9.0/20250429.1321/proj-9.6.0/configure.log

The issue is not old cmake; I have 3.31.7 which is >> 3.21.


As I read CMakeLists.txt:

  function (is_sharp_embed_available res)
      if (CMAKE_VERSION VERSION_GREATER_EQUAL 3.21 AND
          ((CMAKE_C_COMPILER_ID STREQUAL "GNU") OR (CMAKE_C_COMPILER_ID STREQUAL "Clang")))
          # CMAKE_C_STANDARD=23 only supported since CMake 3.21
          set(TEST_SHARP_EMBED
            "static const unsigned char embedded[] = {\n#embed __FILE__\n};\nint main() { (void)embedded; return 0;}"
          )
          set(CMAKE_C_STANDARD_BACKUP "${CMAKE_C_STANDARD}")
          set(CMAKE_C_STANDARD "23")
          check_c_source_compiles("${TEST_SHARP_EMBED}" _TEST_SHARP_EMBED)
          set(CMAKE_C_STANDARD "${CMAKE_C_STANDARD_BACKUP}")
          if (_TEST_SHARP_EMBED)
              set(${res} ON PARENT_SCOPE)
          else()
              set(${res} OFF PARENT_SCOPE)
          endif()
      else()
          set(${res} OFF PARENT_SCOPE)
      endif()
  endfunction()

I think the intent is to try to enable C23 and then try to build, and if
that succeeds, turn on sharp embedding.   But I think what's happening
is that cmake is erroring out trying to enable c23 instead of just
having the build fail.

I also don't understand how C23 is handled if sharp embedding is turned
on.  It would seem one has to end up passing --std for it, because a
compiler that can compile C23 does not necessarily default to it.

Does this work for others on compilers that don't support C23?

From even.rouault at spatialys.com  Sat May  3 05:58:34 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Sat, 3 May 2025 14:58:34 +0200
Subject: [PROJ] 9.6.0 sharp embed compiler test on gcc7
In-Reply-To: <rmiy0vdyi4z.fsf@s1.lexort.com>
References: <rmiy0vdyi4z.fsf@s1.lexort.com>
Message-ID: <9146d0fb-2009-4e6c-b1b8-b88adad22e1f@spatialys.com>

A fix for that has been merged in the 9.6 branch (post 9.6.0, for 9.6.1) 
per https://github.com/OSGeo/PROJ/pull/4463

> I also don't understand how C23 is handled if sharp embedding is turned
> on.  It would seem one has to end up passing --std for it, because a
> compiler that can compile C23 does not necessarily default to it.
Cf 
https://github.com/OSGeo/PROJ/blob/41139273222d1a5937ff6abcf16350f6ed7db773/src/lib_proj.cmake#L429 
that selectively enables C23 for targets that need it when 
IS_SHARP_EMBED_AVAILABLE_RES is set.
> Does this work for others on compilers that don't support C23?
If they are not too old yes.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250503/8fc6e8f5/attachment.htm>

From gdt at lexort.com  Sat May  3 06:34:27 2025
From: gdt at lexort.com (Greg Troxel)
Date: Sat, 03 May 2025 09:34:27 -0400
Subject: [PROJ] 9.6.0 sharp embed compiler test on gcc7
In-Reply-To: <9146d0fb-2009-4e6c-b1b8-b88adad22e1f@spatialys.com> (Even
 Rouault's message of "Sat, 3 May 2025 14:58:34 +0200")
References: <rmiy0vdyi4z.fsf@s1.lexort.com>
 <9146d0fb-2009-4e6c-b1b8-b88adad22e1f@spatialys.com>
Message-ID: <rmio6w9yg0s.fsf@s1.lexort.com>

Even Rouault <even.rouault at spatialys.com> writes:

> A fix for that has been merged in the 9.6 branch (post 9.6.0, for
> 9.6.1) per https://github.com/OSGeo/PROJ/pull/4463

Thanks, am cherry-picking that into pkgsrc.  With gcc 10 the build diff
is that the following lines vanish, changing a failing embed test into
"not trying because gcc10 < gcc15".

  -- Performing Test _TEST_SHARP_EMBED
  -- Performing Test _TEST_SHARP_EMBED - Failed

With NetBSD 9 and gcc 7, it also successfully built.
Tests pass except for spilhaus, which I realize is new and I'll look
into that - surely not relatd to C23/embed.

>> I also don't understand how C23 is handled if sharp embedding is turned
>> on.  It would seem one has to end up passing --std for it, because a
>> compiler that can compile C23 does not necessarily default to it.
> Cf
> https://github.com/OSGeo/PROJ/blob/41139273222d1a5937ff6abcf16350f6ed7db773/src/lib_proj.cmake#L429
> that selectively enables C23 for targets that need it when
> IS_SHARP_EMBED_AVAILABLE_RES is set.

Ah, did not guess that from the original cmake code, but makes sense.

>> Does this work for others on compilers that don't support C23?
> If they are not too old yes.

It worked with 7 which is my current take on "oldest gcc that is not
unreasonably ancient" but idk what's up with older RHEL and older ubuntu
that people run, these days.

From Jochem.Lesparre at kadaster.nl  Sat May  3 09:46:57 2025
From: Jochem.Lesparre at kadaster.nl (Lesparre, Jochem)
Date: Sat, 3 May 2025 16:46:57 +0000
Subject: [PROJ] geoid model + Helmert
In-Reply-To: <rmi34dlzy8p.fsf@s1.lexort.com>
References: <CADRrdKsT9tX8+M5Ni7ePU5NHWu01a5mNEJaYYJB3fCL2FVADOA@mail.gmail.com>
 <rmibjsazkvj.fsf@s1.lexort.com>
 <AS8P192MB2238BB8E0A63E216865A95FBEF8C2@AS8P192MB2238.EURP192.PROD.OUTLOOK.COM>
 <rmi34dlzy8p.fsf@s1.lexort.com>
Message-ID: <AS8P192MB2238849EE5F88549356A7C85EF8C2@AS8P192MB2238.EURP192.PROD.OUTLOOK.COM>

Greg Troxel wrote:
> A) Use the geoid model to get LHN95 height from the ETRS89 HAE, based on ETRS89 horizontal.
> B) Take the original ETRS89 LLh and Helmert transform to CH1903+, and then discard the h, and swap in the LHN95 H from step A.

> What I'm having trouble with is that for a station, I expect ETRS89 HAE and CH1903+ HAE to be different, and that therefore one has to do the
> A/B procedure above.

This is indeed the correct method, but this is not really possible with a single pipeline in PROJ. If two pipelines is not an option, one workaround is temporarily storing the height in the epoch field v_4. I don't like that, because we will publish a time-dependent transformation too.

 > I don't understand how that relates to "Undoing" the grid shift. Perhaps these are two ways of expressing the same thing and that's what the push/pop is all about.

This is another workaround, that we use. From global/regional to national/local datum (from bottom to top in the pipeline below): first apply the geoid model; save the height; undo the geoid model; apply the Helmert transformation; restore the saved height.

>From national/local to global/regional datum:
+proj=pipeline
+step +proj=push +v_3
+step +proj=cart +ellps=intl
+step +proj=helmert +x=... +y=... +z=... +rx=... +ry=... +rz=... +s=... +convention=coordinate_frame +exact
+step +proj=cart +inv +ellps=GRS80
+step +proj=vgridshift +grids=geoid.tif +omit_fwd
+step +proj=pop +v_3
+step +proj=vgridshift +inv +grids=geoid.tif

I hope this clarifies what is meant with undoing the vgridshift,
Jochem



Disclaimer:
De inhoud van deze e-mail is vertrouwelijk en uitsluitend bestemd voor de geadresseerde(n).
Gebruik, openbaarmaking, vermenigvuldiging, verspreiding en/of verstrekking van deze informatie aan derden is niet toegestaan.
Op al onze producten en diensten zijn onze algemene leveringsvoorwaarden van toepassing
[https://www.kadaster.nl/algemene-leveringsvoorwaarden].

Disclaimer:
This email and any files transmitted with it are confidential and intended solely for the use of the individual or entity to whom they are addressed.
If you are not the intended recipient, you are notified that disclosing, copying, distributing or taking any action in reliance on the contents of this information is strictly prohibited.
Our general terms and conditions of delivery apply to all our products and services
[https://www.kadaster.com/general-terms-and-conditions].

From gdt at lexort.com  Sat May  3 17:38:00 2025
From: gdt at lexort.com (Greg Troxel)
Date: Sat, 03 May 2025 20:38:00 -0400
Subject: [PROJ] geoid model + Helmert
In-Reply-To: <AS8P192MB2238849EE5F88549356A7C85EF8C2@AS8P192MB2238.EURP192.PROD.OUTLOOK.COM>
 (Jochem Lesparre's message of "Sat, 3 May 2025 16:46:57 +0000")
References: <CADRrdKsT9tX8+M5Ni7ePU5NHWu01a5mNEJaYYJB3fCL2FVADOA@mail.gmail.com>
 <rmibjsazkvj.fsf@s1.lexort.com>
 <AS8P192MB2238BB8E0A63E216865A95FBEF8C2@AS8P192MB2238.EURP192.PROD.OUTLOOK.COM>
 <rmi34dlzy8p.fsf@s1.lexort.com>
 <AS8P192MB2238849EE5F88549356A7C85EF8C2@AS8P192MB2238.EURP192.PROD.OUTLOOK.COM>
Message-ID: <rmiikmhjjmf.fsf@s1.lexort.com>

"Lesparre, Jochem" <Jochem.Lesparre at kadaster.nl> writes:

> Greg Troxel wrote:
>> A) Use the geoid model to get LHN95 height from the ETRS89 HAE, based on ETRS89 horizontal.
>> B) Take the original ETRS89 LLh and Helmert transform to CH1903+, and then discard the h, and swap in the LHN95 H from step A.
>
>> What I'm having trouble with is that for a station, I expect ETRS89 HAE and CH1903+ HAE to be different, and that therefore one has to do the
>> A/B procedure above.
>
> This is indeed the correct method, but this is not really possible
> with a single pipeline in PROJ. If two pipelines is not an option, one
> workaround is temporarily storing the height in the epoch field v_4. I
> don't like that, because we will publish a time-dependent
> transformation too.

Thanks.   It's nice to have confirmation that my understanding is ok.

>  > I don't understand how that relates to "Undoing" the grid shift. Perhaps these are two ways of expressing the same thing and that's what the push/pop is all about.
>
> This is another workaround, that we use. From global/regional to
> national/local datum (from bottom to top in the pipeline below): first
> apply the geoid model; save the height; undo the geoid model; apply
> the Helmert transformation; restore the saved height.
>
> From national/local to global/regional datum:
> +proj=pipeline
> +step +proj=push +v_3
> +step +proj=cart +ellps=intl
> +step +proj=helmert +x=... +y=... +z=... +rx=... +ry=... +rz=... +s=... +convention=coordinate_frame +exact
> +step +proj=cart +inv +ellps=GRS80
> +step +proj=vgridshift +grids=geoid.tif +omit_fwd
> +step +proj=pop +v_3
> +step +proj=vgridshift +inv +grids=geoid.tif
>
> I hope this clarifies what is meant with undoing the vgridshift,

Yes.  It seems to be exactly a way to merge the grid-derived vertical
with the local LLh from Helmert from regional LLh.  I was just confused
by undo.


I guess we need a way to express things like "do this pipeline and take
these components, and then this other pipeline and take these otehr
components" more cleanly.

Thanks for taking the time to explain things.

Greg


From gdt at lexort.com  Sun May  4 06:02:14 2025
From: gdt at lexort.com (Greg Troxel)
Date: Sun, 04 May 2025 09:02:14 -0400
Subject: [PROJ] spilhaus regresssion test failures
Message-ID: <rmi8qncjzqh.fsf@s1.lexort.com>

Running regression tests with 9.6.0, I get a clean pass except for
spilhaus.  In particular, the adams_ws2 tests pass.

I'm enclosing the spilhaus output for NetBSD 10 amd64; there are
enormous (57m!) round trip deviations.  The output on NetBSD 10 aarch4
and NetBSD 9 earmv7hf-el (RPI3) is very similar, with the reported
round-trip errors not quite the same, but from casual checking differing
from those on 10/amd64 by around 0.001 mm. An example:

        FAILURE in spilhaus.gie(10):
  -     roundtrip deviation: 57500.449588 mm, expected: 1.500000 mm
  +     roundtrip deviation: 57500.449662 mm, expected: 1.500000 mm

This is of course puzzling, as surely this test passes on many other
platforms, but also there is pretty clearly not terrible floating point
on NetBSD in general because all the other tests are fine (and paranoia
is happy), and e.g. geos regression tests pass.

It seems like the spilhaus tests which are not round-trip all pass.  I
suspect this is a Clue.  But round-trip tests do not seem new in
spilhaus either.

I glanced at the spilhaus and adams code and didn't immediately see any
math functions being used that weren't normally used in proj, as a
NetBSD bug in a little-used libm function could explain things,

I wonder if anyone has run the regression test on other than
Linux/Mac/Windows, and if so how it went.

----------------------------------------
17/67 Testing: spilhaus
17/67 Test: spilhaus
Command: "/tmp/work/geography/proj/work/proj-9.6.0/cmake-pkgsrc-build/bin/gie" "/tmp/work/geography/proj/work/proj-9.6.0/test/gie/spilhaus.gie"
Directory: /tmp/work/geography/proj/work/proj-9.6.0/test
"spilhaus" start time: May 04 07:53 EDT
Output:
----------------------------------------------------------
-------------------------------------------------------------------------------
Reading file '/tmp/work/geography/proj/work/proj-9.6.0/test/gie/spilhaus.gie'
-------------------------------------------------------------------------------
proj=spilhaus                                                         
-------------------------------------------------------------------------------
     FAILURE in spilhaus.gie(10):
     roundtrip deviation: 57500.449588 mm, expected: 1.500000 mm
     -----
     FAILURE in spilhaus.gie(15):
     roundtrip deviation: 15011.025396 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(18):
     roundtrip deviation: 586478.398214 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(21):
     roundtrip deviation: 808104.443729 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(24):
     roundtrip deviation: 471175.633331 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(27):
     roundtrip deviation: 829216.052427 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(30):
     roundtrip deviation: 109204.184724 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(33):
     roundtrip deviation: 15011.074199 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(36):
     roundtrip deviation: 586477.606430 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(39):
     roundtrip deviation: 808104.315015 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(42):
     roundtrip deviation: 471177.085108 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(45):
     roundtrip deviation: 829214.811533 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(48):
     roundtrip deviation: 109202.584067 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(51):
     roundtrip deviation: 15011.026707 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(54):
     roundtrip deviation: 586478.292368 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(57):
     roundtrip deviation: 808104.391993 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(60):
     roundtrip deviation: 471175.627080 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(63):
     roundtrip deviation: 829211.773951 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(66):
     roundtrip deviation: 109199.737042 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(69):
     roundtrip deviation: 15012.084894 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(72):
     roundtrip deviation: 586477.605319 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(75):
     roundtrip deviation: 808102.648912 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(78):
     roundtrip deviation: 471175.632054 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(81):
     roundtrip deviation: 829214.829694 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(84):
     roundtrip deviation: 109202.218075 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(87):
     roundtrip deviation: 15010.957189 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(90):
     roundtrip deviation: 586477.284253 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(93):
     roundtrip deviation: 808104.333670 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(96):
     roundtrip deviation: 471167.978655 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(99):
     roundtrip deviation: 829212.867965 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(102):
     roundtrip deviation: 109202.667047 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(105):
     roundtrip deviation: 15010.074161 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(108):
     roundtrip deviation: 586478.164449 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(111):
     roundtrip deviation: 808104.382140 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(114):
     roundtrip deviation: 471175.496663 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(117):
     roundtrip deviation: 829214.900084 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(120):
     roundtrip deviation: 109203.234594 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(123):
     roundtrip deviation: 15010.340942 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(126):
     roundtrip deviation: 586477.614831 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(129):
     roundtrip deviation: 808112.028270 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(132):
     roundtrip deviation: 471175.528546 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(135):
     roundtrip deviation: 829214.842919 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(138):
     roundtrip deviation: 109202.561230 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(141):
     roundtrip deviation: 15006.580703 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(144):
     roundtrip deviation: 586477.940196 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(147):
     roundtrip deviation: 808104.487853 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(150):
     roundtrip deviation: 471174.492910 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(153):
     roundtrip deviation: 829211.268325 mm, expected: 10.000000 mm
     -----
     FAILURE in spilhaus.gie(156):
     roundtrip deviation: 109202.561384 mm, expected: 10.000000 mm
-------------------------------------------------------------------------------
proj=spilhaus rot=45 k_0=1 lat_0=-49.56371678 lon_0=66.94970198 azi=40...
-------------------------------------------------------------------------------
     FAILURE in spilhaus.gie(375):
     roundtrip deviation: 70285.631874 mm, expected: 1.000000 mm
-------------------------------------------------------------------------------
proj=spilhaus                                                         
-------------------------------------------------------------------------------
     FAILURE in spilhaus.gie(385):
     roundtrip deviation: 70285.631874 mm, expected: 1.000000 mm
-------------------------------------------------------------------------------
proj=spilhaus lon_0=10.1                                              
-------------------------------------------------------------------------------
     FAILURE in spilhaus.gie(392):
     roundtrip deviation: 70285.638184 mm, expected: 1.000000 mm
-------------------------------------------------------------------------------
proj=spilhaus lat_0=30.1                                              
-------------------------------------------------------------------------------
     FAILURE in spilhaus.gie(399):
     roundtrip deviation: 70285.633552 mm, expected: 1.000000 mm
-------------------------------------------------------------------------------
proj=spilhaus azi=9.1                                                 
-------------------------------------------------------------------------------
     FAILURE in spilhaus.gie(406):
     roundtrip deviation: 70285.658768 mm, expected: 1.000000 mm
-------------------------------------------------------------------------------
proj=spilhaus rot=40.1                                                
-------------------------------------------------------------------------------
     FAILURE in spilhaus.gie(413):
     roundtrip deviation: 70285.631939 mm, expected: 1.000000 mm
-------------------------------------------------------------------------------
proj=spilhaus k_0=0.9                                                 
-------------------------------------------------------------------------------
     FAILURE in spilhaus.gie(420):
     roundtrip deviation: 70285.631939 mm, expected: 1.000000 mm
-------------------------------------------------------------------------------
total: 77 tests succeeded,  0 tests skipped, 56 tests FAILED!
-------------------------------------------------------------------------------
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Failed.
"spilhaus" end time: May 04 07:53 EDT
"spilhaus" time elapsed: 00:00:00

From j1 at jimenezshaw.com  Sun May  4 07:01:52 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Sun, 4 May 2025 16:01:52 +0200
Subject: [PROJ] spilhaus regresssion test failures
In-Reply-To: <rmi8qncjzqh.fsf@s1.lexort.com>
References: <rmi8qncjzqh.fsf@s1.lexort.com>
Message-ID: <CADRrdKv7ynYXYY8gxORmQBryXpJc9DSiTjxuSPmjBwPm8iJ1AA@mail.gmail.com>

Hi Greg

The failures in the roundtrip suggest that the problem is in the inverse
function of the spilhaus projection.
Part of the code used there was refactored end of March in master, and
maybe the new code/formulation behaves better in NetBSD.

Could you test master in your environment?

Thanks.

On Sun, 4 May 2025 at 15:02, Greg Troxel via PROJ <proj at lists.osgeo.org>
wrote:

> Running regression tests with 9.6.0, I get a clean pass except for
> spilhaus.  In particular, the adams_ws2 tests pass.
>
> I'm enclosing the spilhaus output for NetBSD 10 amd64; there are
> enormous (57m!) round trip deviations.  The output on NetBSD 10 aarch4
> and NetBSD 9 earmv7hf-el (RPI3) is very similar, with the reported
> round-trip errors not quite the same, but from casual checking differing
> from those on 10/amd64 by around 0.001 mm. An example:
>
>         FAILURE in spilhaus.gie(10):
>   -     roundtrip deviation: 57500.449588 mm, expected: 1.500000 mm
>   +     roundtrip deviation: 57500.449662 mm, expected: 1.500000 mm
>
> This is of course puzzling, as surely this test passes on many other
> platforms, but also there is pretty clearly not terrible floating point
> on NetBSD in general because all the other tests are fine (and paranoia
> is happy), and e.g. geos regression tests pass.
>
> It seems like the spilhaus tests which are not round-trip all pass.  I
> suspect this is a Clue.  But round-trip tests do not seem new in
> spilhaus either.
>
> I glanced at the spilhaus and adams code and didn't immediately see any
> math functions being used that weren't normally used in proj, as a
> NetBSD bug in a little-used libm function could explain things,
>
> I wonder if anyone has run the regression test on other than
> Linux/Mac/Windows, and if so how it went.
>
> ----------------------------------------
> 17/67 Testing: spilhaus
> 17/67 Test: spilhaus
> Command:
> "/tmp/work/geography/proj/work/proj-9.6.0/cmake-pkgsrc-build/bin/gie"
> "/tmp/work/geography/proj/work/proj-9.6.0/test/gie/spilhaus.gie"
> Directory: /tmp/work/geography/proj/work/proj-9.6.0/test
> "spilhaus" start time: May 04 07:53 EDT
> Output:
> ----------------------------------------------------------
>
> -------------------------------------------------------------------------------
> Reading file
> '/tmp/work/geography/proj/work/proj-9.6.0/test/gie/spilhaus.gie'
>
> -------------------------------------------------------------------------------
> proj=spilhaus
>
> -------------------------------------------------------------------------------
>      FAILURE in spilhaus.gie(10):
>      roundtrip deviation: 57500.449588 mm, expected: 1.500000 mm
>      -----
>      FAILURE in spilhaus.gie(15):
>      roundtrip deviation: 15011.025396 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(18):
>      roundtrip deviation: 586478.398214 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(21):
>      roundtrip deviation: 808104.443729 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(24):
>      roundtrip deviation: 471175.633331 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(27):
>      roundtrip deviation: 829216.052427 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(30):
>      roundtrip deviation: 109204.184724 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(33):
>      roundtrip deviation: 15011.074199 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(36):
>      roundtrip deviation: 586477.606430 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(39):
>      roundtrip deviation: 808104.315015 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(42):
>      roundtrip deviation: 471177.085108 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(45):
>      roundtrip deviation: 829214.811533 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(48):
>      roundtrip deviation: 109202.584067 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(51):
>      roundtrip deviation: 15011.026707 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(54):
>      roundtrip deviation: 586478.292368 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(57):
>      roundtrip deviation: 808104.391993 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(60):
>      roundtrip deviation: 471175.627080 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(63):
>      roundtrip deviation: 829211.773951 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(66):
>      roundtrip deviation: 109199.737042 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(69):
>      roundtrip deviation: 15012.084894 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(72):
>      roundtrip deviation: 586477.605319 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(75):
>      roundtrip deviation: 808102.648912 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(78):
>      roundtrip deviation: 471175.632054 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(81):
>      roundtrip deviation: 829214.829694 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(84):
>      roundtrip deviation: 109202.218075 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(87):
>      roundtrip deviation: 15010.957189 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(90):
>      roundtrip deviation: 586477.284253 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(93):
>      roundtrip deviation: 808104.333670 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(96):
>      roundtrip deviation: 471167.978655 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(99):
>      roundtrip deviation: 829212.867965 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(102):
>      roundtrip deviation: 109202.667047 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(105):
>      roundtrip deviation: 15010.074161 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(108):
>      roundtrip deviation: 586478.164449 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(111):
>      roundtrip deviation: 808104.382140 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(114):
>      roundtrip deviation: 471175.496663 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(117):
>      roundtrip deviation: 829214.900084 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(120):
>      roundtrip deviation: 109203.234594 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(123):
>      roundtrip deviation: 15010.340942 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(126):
>      roundtrip deviation: 586477.614831 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(129):
>      roundtrip deviation: 808112.028270 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(132):
>      roundtrip deviation: 471175.528546 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(135):
>      roundtrip deviation: 829214.842919 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(138):
>      roundtrip deviation: 109202.561230 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(141):
>      roundtrip deviation: 15006.580703 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(144):
>      roundtrip deviation: 586477.940196 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(147):
>      roundtrip deviation: 808104.487853 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(150):
>      roundtrip deviation: 471174.492910 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(153):
>      roundtrip deviation: 829211.268325 mm, expected: 10.000000 mm
>      -----
>      FAILURE in spilhaus.gie(156):
>      roundtrip deviation: 109202.561384 mm, expected: 10.000000 mm
>
> -------------------------------------------------------------------------------
> proj=spilhaus rot=45 k_0=1 lat_0=-49.56371678 lon_0=66.94970198 azi=40...
>
> -------------------------------------------------------------------------------
>      FAILURE in spilhaus.gie(375):
>      roundtrip deviation: 70285.631874 mm, expected: 1.000000 mm
>
> -------------------------------------------------------------------------------
> proj=spilhaus
>
> -------------------------------------------------------------------------------
>      FAILURE in spilhaus.gie(385):
>      roundtrip deviation: 70285.631874 mm, expected: 1.000000 mm
>
> -------------------------------------------------------------------------------
> proj=spilhaus lon_0=10.1
>
> -------------------------------------------------------------------------------
>      FAILURE in spilhaus.gie(392):
>      roundtrip deviation: 70285.638184 mm, expected: 1.000000 mm
>
> -------------------------------------------------------------------------------
> proj=spilhaus lat_0=30.1
>
> -------------------------------------------------------------------------------
>      FAILURE in spilhaus.gie(399):
>      roundtrip deviation: 70285.633552 mm, expected: 1.000000 mm
>
> -------------------------------------------------------------------------------
> proj=spilhaus azi=9.1
>
> -------------------------------------------------------------------------------
>      FAILURE in spilhaus.gie(406):
>      roundtrip deviation: 70285.658768 mm, expected: 1.000000 mm
>
> -------------------------------------------------------------------------------
> proj=spilhaus rot=40.1
>
> -------------------------------------------------------------------------------
>      FAILURE in spilhaus.gie(413):
>      roundtrip deviation: 70285.631939 mm, expected: 1.000000 mm
>
> -------------------------------------------------------------------------------
> proj=spilhaus k_0=0.9
>
> -------------------------------------------------------------------------------
>      FAILURE in spilhaus.gie(420):
>      roundtrip deviation: 70285.631939 mm, expected: 1.000000 mm
>
> -------------------------------------------------------------------------------
> total: 77 tests succeeded,  0 tests skipped, 56 tests FAILED!
>
> -------------------------------------------------------------------------------
> <end of output>
> Test time =   0.02 sec
> ----------------------------------------------------------
> Test Failed.
> "spilhaus" end time: May 04 07:53 EDT
> "spilhaus" time elapsed: 00:00:00
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250504/ac58c623/attachment-0001.htm>

From gdt at lexort.com  Sun May  4 07:32:19 2025
From: gdt at lexort.com (Greg Troxel)
Date: Sun, 04 May 2025 10:32:19 -0400
Subject: [PROJ] spilhaus regresssion test failures
In-Reply-To: <CADRrdKv7ynYXYY8gxORmQBryXpJc9DSiTjxuSPmjBwPm8iJ1AA@mail.gmail.com>
 (Javier Jimenez Shaw's message of "Sun, 4 May 2025 16:01:52 +0200")
References: <rmi8qncjzqh.fsf@s1.lexort.com>
 <CADRrdKv7ynYXYY8gxORmQBryXpJc9DSiTjxuSPmjBwPm8iJ1AA@mail.gmail.com>
Message-ID: <rmimsbsigzw.fsf@s1.lexort.com>

Javier Jimenez Shaw <j1 at jimenezshaw.com> writes:

> The failures in the roundtrip suggest that the problem is in the inverse
> function of the spilhaus projection.
> Part of the code used there was refactored end of March in master, and
> maybe the new code/formulation behaves better in NetBSD.
>
> Could you test master in your environment?

Thanks for the hint.  I ran a build/check from git master, and got a
clean pass.

I guess we don't know if the problem was in the previous code, or it was
ok and triggers a NetBSD bug, but I would guess since you changed things
on master you think it's better and there's no need to dig into it.


  17/68 Testing: spilhaus
  17/68 Test: spilhaus
  Command: "/n0/gdt/SOFTWARE/GEO/PROJ/proj/BUILD/bin/gie" "/n0/gdt/SOFTWARE/GEO/PROJ/proj/test/gie/spilhaus.gie"
  Directory: /n0/gdt/SOFTWARE/GEO/PROJ/proj/test
  "spilhaus" start time: May 04 10:17 EDT
  Output:
  ----------------------------------------------------------
  -------------------------------------------------------------------------------
  Reading file '/n0/gdt/SOFTWARE/GEO/PROJ/proj/test/gie/spilhaus.gie'
  -------------------------------------------------------------------------------
  total: 133 tests succeeded,  0 tests skipped,  0 tests failed.
  -------------------------------------------------------------------------------
  <end of output>
  Test time =   0.04 sec
  ----------------------------------------------------------
  Test Passed.
  "spilhaus" end time: May 04 10:17 EDT
  "spilhaus" time elapsed: 00:00:00
  17/68 Testing: spilhaus
  17/68 Test: spilhaus
  Command: "/n0/gdt/SOFTWARE/GEO/PROJ/proj/BUILD/bin/gie" "/n0/gdt/SOFTWARE/GEO/PROJ/proj/test/gie/spilhaus.gie"
  Directory: /n0/gdt/SOFTWARE/GEO/PROJ/proj/test
  "spilhaus" start time: May 04 10:17 EDT
  Output:
  ----------------------------------------------------------
  -------------------------------------------------------------------------------
  Reading file '/n0/gdt/SOFTWARE/GEO/PROJ/proj/test/gie/spilhaus.gie'
  -------------------------------------------------------------------------------
  total: 133 tests succeeded,  0 tests skipped,  0 tests failed.
  -------------------------------------------------------------------------------
  <end of output>
  Test time =   0.04 sec
  ----------------------------------------------------------
  Test Passed.
  "spilhaus" end time: May 04 10:17 EDT
  "spilhaus" time elapsed: 00:00:00


You may be amused by this test failure:

  Test 95 failed
  /n0/gdt/SOFTWARE/GEO/PROJ/proj/BUILD/bin/projinfo completion projinfo --pivot-crs
  Different stdout+stderr returned (+) than expected (-):
  - always if_no_direct_transformation never EPSG: ESRI: IAU_2015: IGNF: NKG: NRCAN: OGC: PROJ:
  + always if_no_direct_transformation never EPSG: ESRI: IAU_2015: IGNF: NKG: NRCAN: NSRS: OGC: PROJ:
  ?                                                                                  ++++++

which is obviously not an actual bug -- I had your NSRS db hooked in via
PROJ_AUX_DB.


From j1 at jimenezshaw.com  Sun May  4 09:58:09 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Sun, 4 May 2025 18:58:09 +0200
Subject: [PROJ] spilhaus regresssion test failures
In-Reply-To: <rmimsbsigzw.fsf@s1.lexort.com>
References: <rmi8qncjzqh.fsf@s1.lexort.com>
 <CADRrdKv7ynYXYY8gxORmQBryXpJc9DSiTjxuSPmjBwPm8iJ1AA@mail.gmail.com>
 <rmimsbsigzw.fsf@s1.lexort.com>
Message-ID: <CADRrdKuPTZ9D76YgtZFxhiCdkbgvc2RpnVaQrAaS5fHSOKNv_Q@mail.gmail.com>

On Sun, 4 May 2025 at 16:32, Greg Troxel <gdt at lexort.com> wrote:

> Javier Jimenez Shaw <j1 at jimenezshaw.com> writes:
>
> > The failures in the roundtrip suggest that the problem is in the inverse
> > function of the spilhaus projection.
> > Part of the code used there was refactored end of March in master, and
> > maybe the new code/formulation behaves better in NetBSD.
> >
> > Could you test master in your environment?
>
> Thanks for the hint.  I ran a build/check from git master, and got a
> clean pass.
>
> I guess we don't know if the problem was in the previous code, or it was
> ok and triggers a NetBSD bug, but I would guess since you changed things
> on master you think it's better and there's no need to dig into it.
>
>
The PR was https://github.com/OSGeo/PROJ/pull/4446

Maybe the function that impacts the tests is "pj_conformal_lat_inverse".
You can try with the new implementation.
The changes should be small. (See that the signature of the function is a
bit different). It is used only in one place.


>
>   17/68 Testing: spilhaus
>   17/68 Test: spilhaus
>   Command: "/n0/gdt/SOFTWARE/GEO/PROJ/proj/BUILD/bin/gie"
> "/n0/gdt/SOFTWARE/GEO/PROJ/proj/test/gie/spilhaus.gie"
>   Directory: /n0/gdt/SOFTWARE/GEO/PROJ/proj/test
>   "spilhaus" start time: May 04 10:17 EDT
>   Output:
>   ----------------------------------------------------------
>
> -------------------------------------------------------------------------------
>   Reading file '/n0/gdt/SOFTWARE/GEO/PROJ/proj/test/gie/spilhaus.gie'
>
> -------------------------------------------------------------------------------
>   total: 133 tests succeeded,  0 tests skipped,  0 tests failed.
>
> -------------------------------------------------------------------------------
>   <end of output>
>   Test time =   0.04 sec
>   ----------------------------------------------------------
>   Test Passed.
>   "spilhaus" end time: May 04 10:17 EDT
>   "spilhaus" time elapsed: 00:00:00
>   17/68 Testing: spilhaus
>   17/68 Test: spilhaus
>   Command: "/n0/gdt/SOFTWARE/GEO/PROJ/proj/BUILD/bin/gie"
> "/n0/gdt/SOFTWARE/GEO/PROJ/proj/test/gie/spilhaus.gie"
>   Directory: /n0/gdt/SOFTWARE/GEO/PROJ/proj/test
>   "spilhaus" start time: May 04 10:17 EDT
>   Output:
>   ----------------------------------------------------------
>
> -------------------------------------------------------------------------------
>   Reading file '/n0/gdt/SOFTWARE/GEO/PROJ/proj/test/gie/spilhaus.gie'
>
> -------------------------------------------------------------------------------
>   total: 133 tests succeeded,  0 tests skipped,  0 tests failed.
>
> -------------------------------------------------------------------------------
>   <end of output>
>   Test time =   0.04 sec
>   ----------------------------------------------------------
>   Test Passed.
>   "spilhaus" end time: May 04 10:17 EDT
>   "spilhaus" time elapsed: 00:00:00
>
>
> You may be amused by this test failure:
>
>   Test 95 failed
>   /n0/gdt/SOFTWARE/GEO/PROJ/proj/BUILD/bin/projinfo completion projinfo
> --pivot-crs
>   Different stdout+stderr returned (+) than expected (-):
>   - always if_no_direct_transformation never EPSG: ESRI: IAU_2015: IGNF:
> NKG: NRCAN: OGC: PROJ:
>   + always if_no_direct_transformation never EPSG: ESRI: IAU_2015: IGNF:
> NKG: NRCAN: NSRS: OGC: PROJ:
>   ?
>           ++++++
>
> which is obviously not an actual bug -- I had your NSRS db hooked in via
> PROJ_AUX_DB.
>
The auxiliary database usage is not widely tested. That command is printing
all the authorities, and you have a new one ;)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250504/837f7707/attachment.htm>

From charles.karney at gmail.com  Sun May  4 10:46:29 2025
From: charles.karney at gmail.com (Charles Karney)
Date: Sun, 4 May 2025 13:46:29 -0400
Subject: [PROJ] spilhaus regresssion test failures
In-Reply-To: <CADRrdKuPTZ9D76YgtZFxhiCdkbgvc2RpnVaQrAaS5fHSOKNv_Q@mail.gmail.com>
References: <rmi8qncjzqh.fsf@s1.lexort.com>
 <CADRrdKv7ynYXYY8gxORmQBryXpJc9DSiTjxuSPmjBwPm8iJ1AA@mail.gmail.com>
 <rmimsbsigzw.fsf@s1.lexort.com>
 <CADRrdKuPTZ9D76YgtZFxhiCdkbgvc2RpnVaQrAaS5fHSOKNv_Q@mail.gmail.com>
Message-ID: <CAH36mb_4G=zanUUAiuh89Yw4J_xTujLJNMMA1TX3UtVjC0zx1Q@mail.gmail.com>

Since I'm the author of this PR, I'm happy to weigh in once the
failure gets narrowed down.

  --Charles

On Sun, May 4, 2025 at 12:58?PM Javier Jimenez Shaw via PROJ
<proj at lists.osgeo.org> wrote:
>
>
>
> On Sun, 4 May 2025 at 16:32, Greg Troxel <gdt at lexort.com> wrote:
>>
>> Javier Jimenez Shaw <j1 at jimenezshaw.com> writes:
>>
>> > The failures in the roundtrip suggest that the problem is in the inverse
>> > function of the spilhaus projection.
>> > Part of the code used there was refactored end of March in master, and
>> > maybe the new code/formulation behaves better in NetBSD.
>> >
>> > Could you test master in your environment?
>>
>> Thanks for the hint.  I ran a build/check from git master, and got a
>> clean pass.
>>
>> I guess we don't know if the problem was in the previous code, or it was
>> ok and triggers a NetBSD bug, but I would guess since you changed things
>> on master you think it's better and there's no need to dig into it.
>>
>
> The PR was https://github.com/OSGeo/PROJ/pull/4446
>
> Maybe the function that impacts the tests is "pj_conformal_lat_inverse". You can try with the new implementation.
> The changes should be small. (See that the signature of the function is a bit different). It is used only in one place.
>
>>
>>
>>   17/68 Testing: spilhaus
>>   17/68 Test: spilhaus
>>   Command: "/n0/gdt/SOFTWARE/GEO/PROJ/proj/BUILD/bin/gie" "/n0/gdt/SOFTWARE/GEO/PROJ/proj/test/gie/spilhaus.gie"
>>   Directory: /n0/gdt/SOFTWARE/GEO/PROJ/proj/test
>>   "spilhaus" start time: May 04 10:17 EDT
>>   Output:
>>   ----------------------------------------------------------
>>   -------------------------------------------------------------------------------
>>   Reading file '/n0/gdt/SOFTWARE/GEO/PROJ/proj/test/gie/spilhaus.gie'
>>   -------------------------------------------------------------------------------
>>   total: 133 tests succeeded,  0 tests skipped,  0 tests failed.
>>   -------------------------------------------------------------------------------
>>   <end of output>
>>   Test time =   0.04 sec
>>   ----------------------------------------------------------
>>   Test Passed.
>>   "spilhaus" end time: May 04 10:17 EDT
>>   "spilhaus" time elapsed: 00:00:00
>>   17/68 Testing: spilhaus
>>   17/68 Test: spilhaus
>>   Command: "/n0/gdt/SOFTWARE/GEO/PROJ/proj/BUILD/bin/gie" "/n0/gdt/SOFTWARE/GEO/PROJ/proj/test/gie/spilhaus.gie"
>>   Directory: /n0/gdt/SOFTWARE/GEO/PROJ/proj/test
>>   "spilhaus" start time: May 04 10:17 EDT
>>   Output:
>>   ----------------------------------------------------------
>>   -------------------------------------------------------------------------------
>>   Reading file '/n0/gdt/SOFTWARE/GEO/PROJ/proj/test/gie/spilhaus.gie'
>>   -------------------------------------------------------------------------------
>>   total: 133 tests succeeded,  0 tests skipped,  0 tests failed.
>>   -------------------------------------------------------------------------------
>>   <end of output>
>>   Test time =   0.04 sec
>>   ----------------------------------------------------------
>>   Test Passed.
>>   "spilhaus" end time: May 04 10:17 EDT
>>   "spilhaus" time elapsed: 00:00:00
>>
>>
>> You may be amused by this test failure:
>>
>>   Test 95 failed
>>   /n0/gdt/SOFTWARE/GEO/PROJ/proj/BUILD/bin/projinfo completion projinfo --pivot-crs
>>   Different stdout+stderr returned (+) than expected (-):
>>   - always if_no_direct_transformation never EPSG: ESRI: IAU_2015: IGNF: NKG: NRCAN: OGC: PROJ:
>>   + always if_no_direct_transformation never EPSG: ESRI: IAU_2015: IGNF: NKG: NRCAN: NSRS: OGC: PROJ:
>>   ?                                                                                  ++++++
>>
>> which is obviously not an actual bug -- I had your NSRS db hooked in via
>> PROJ_AUX_DB.
>
> The auxiliary database usage is not widely tested. That command is printing all the authorities, and you have a new one ;)
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj



-- 
Charles Karney <karney at alum.mit.edu>
702 Prospect Ave
Princeton, NJ 08540

From gdt at lexort.com  Sun May  4 11:27:45 2025
From: gdt at lexort.com (Greg Troxel)
Date: Sun, 04 May 2025 14:27:45 -0400
Subject: [PROJ] spilhaus regresssion test failures
In-Reply-To: <CADRrdKuPTZ9D76YgtZFxhiCdkbgvc2RpnVaQrAaS5fHSOKNv_Q@mail.gmail.com>
 (Javier Jimenez Shaw's message of "Sun, 4 May 2025 18:58:09 +0200")
References: <rmi8qncjzqh.fsf@s1.lexort.com>
 <CADRrdKv7ynYXYY8gxORmQBryXpJc9DSiTjxuSPmjBwPm8iJ1AA@mail.gmail.com>
 <rmimsbsigzw.fsf@s1.lexort.com>
 <CADRrdKuPTZ9D76YgtZFxhiCdkbgvc2RpnVaQrAaS5fHSOKNv_Q@mail.gmail.com>
Message-ID: <rmiikmgqli6.fsf@s1.lexort.com>

Javier Jimenez Shaw <j1 at jimenezshaw.com> writes:

> The PR was https://github.com/OSGeo/PROJ/pull/4446
>
> Maybe the function that impacts the tests is "pj_conformal_lat_inverse".
> You can try with the new implementation.
> The changes should be small. (See that the signature of the function is a
> bit different). It is used only in one place.


Do you mean:

  take proj 9.6.0

  read the diff to pj_conformal_lat_inverse from the PR, and hand patch
  it in, except not changing the signature

  build and rerun tests

I guess I could further keep the code and compare the two results.


I looked at that code, and it jumped out at me that are abs() was used,
which is a C function, not C++, and is integer only.

With this patch (to 9.6.0), I get a pass:

--- src/latitudes.cpp.~1~       2025-03-13 10:31:27.000000000 -0400
+++ src/latitudes.cpp   2025-05-04 14:23:04.656697860 -0400
@@ -58,7 +58,7 @@
             2 * atan(taninit *
                      std::pow(((1 + esinphi) / (1 - esinphi)), (e / 2))) -
             0.5 * M_PI;
-        if (abs(new_phi - phi) < threshold) {
+        if (std::abs(new_phi - phi) < threshold) {
             phi = new_phi;
             break;
         }

Interesting that this only causes trouble with spilhaus, at least as far
as tests catch it.

From j1 at jimenezshaw.com  Sun May  4 12:29:41 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Sun, 4 May 2025 21:29:41 +0200
Subject: [PROJ] spilhaus regresssion test failures
In-Reply-To: <rmiikmgqli6.fsf@s1.lexort.com>
References: <rmi8qncjzqh.fsf@s1.lexort.com>
 <CADRrdKv7ynYXYY8gxORmQBryXpJc9DSiTjxuSPmjBwPm8iJ1AA@mail.gmail.com>
 <rmimsbsigzw.fsf@s1.lexort.com>
 <CADRrdKuPTZ9D76YgtZFxhiCdkbgvc2RpnVaQrAaS5fHSOKNv_Q@mail.gmail.com>
 <rmiikmgqli6.fsf@s1.lexort.com>
Message-ID: <CADRrdKvUbmTQtdwLAnsHyaZ3RKG5bmcx_C5GUM6t0MAUtcjmSw@mail.gmail.com>

Sorry, I should me more explicit
What I mean is:
 - take 9.6.0
 - replace the function pj_conformal_lat_inverse in latitudes.cpp with the
new implementation
 - replace its declaration in proj_internal.h
 - replace its usage in spilhaus.cpp

... that is this patch

------- begin patch --------------
diff --git a/src/latitudes.cpp b/src/latitudes.cpp
index 7d49f667..c5e277f8 100644
--- a/src/latitudes.cpp
+++ b/src/latitudes.cpp
@@ -36,33 +36,17 @@ double pj_conformal_lat(double phi, double e) {
 }

 /*****************************************************************************/
-double pj_conformal_lat_inverse(double chi, double e, double threshold) {
+
+double pj_conformal_lat_inverse(double chi, const PJ *P) {
     /***********************************
-     * The inverse formula of the conformal latitude
-     * for phi (geodetic latitude) in terms of chi (conformal latitude),
-     * Snyder, A working manual, formula 3-4
+     * The geodetic latitude, phi, in terms of the conformal latitude, chi.
      *
      * chi: conformal latitude, in radians
-     * e: ellipsoid eccentricity
-     * threshold: between two consecutive iteratinons to break the loop,
radians
-     * returns: geodetic latitude, in radians
+     * returns: geodetic latitude, phi, in radians
+     * Copied from merc.cpp
      ***********************************/
-    if (e == 0.0)
+    if (P->e == 0.0)
         return chi;

-    const double taninit = tan(M_PI / 4 + chi / 2);
-    double phi = chi;
-    for (int i = 0; i < 10; i++) {
-        const double esinphi = e * sin(phi);
-        const double new_phi =
-            2 * atan(taninit *
-                     std::pow(((1 + esinphi) / (1 - esinphi)), (e / 2))) -
-            0.5 * M_PI;
-        if (abs(new_phi - phi) < threshold) {
-            phi = new_phi;
-            break;
-        }
-        phi = new_phi;
-    }
-    return phi;
+    return atan(pj_sinhpsi2tanphi(P->ctx, tan(chi), P->e));
 }
diff --git a/src/proj_internal.h b/src/proj_internal.h
index 922c7074..54b64341 100644
--- a/src/proj_internal.h
+++ b/src/proj_internal.h
@@ -923,7 +923,7 @@ double *pj_authset(double);
 double pj_authlat(double, double *);

 double pj_conformal_lat(double phi, double e);
-double pj_conformal_lat_inverse(double chi, double e, double threshold);
+double pj_conformal_lat_inverse(double chi, const PJ *P);

 COMPLEX pj_zpoly1(COMPLEX, const COMPLEX *, int);
 COMPLEX pj_zpolyd1(COMPLEX, const COMPLEX *, int, COMPLEX *);
diff --git a/src/projections/spilhaus.cpp b/src/projections/spilhaus.cpp
index 01b86800..ba9a6c57 100644
--- a/src/projections/spilhaus.cpp
+++ b/src/projections/spilhaus.cpp
@@ -98,8 +98,7 @@ static PJ_LP spilhaus_inverse(PJ_XY xy, PJ *P) {
              aatan2(cosphi_s * sinlam_s,
                     Q->sinalpha * cosphi_s * coslam_s - Q->cosalpha *
sinphi_s);

-    const double THRESHOLD = 1e-10;
-    lp.phi = pj_conformal_lat_inverse(lp.phi, P->e, THRESHOLD);
+    lp.phi = pj_conformal_lat_inverse(lp.phi, P);

     return lp;
 }
------- end patch --------------


On Sun, 4 May 2025 at 20:27, Greg Troxel <gdt at lexort.com> wrote:

> Javier Jimenez Shaw <j1 at jimenezshaw.com> writes:
>
> > The PR was https://github.com/OSGeo/PROJ/pull/4446
> >
> > Maybe the function that impacts the tests is "pj_conformal_lat_inverse".
> > You can try with the new implementation.
> > The changes should be small. (See that the signature of the function is a
> > bit different). It is used only in one place.
>
>
> Do you mean:
>
>   take proj 9.6.0
>
>   read the diff to pj_conformal_lat_inverse from the PR, and hand patch
>   it in, except not changing the signature
>
>   build and rerun tests
>
> I guess I could further keep the code and compare the two results.
>
>
> I looked at that code, and it jumped out at me that are abs() was used,
> which is a C function, not C++, and is integer only.
>
> With this patch (to 9.6.0), I get a pass:
>
> --- src/latitudes.cpp.~1~       2025-03-13 10:31:27.000000000 -0400
> +++ src/latitudes.cpp   2025-05-04 14:23:04.656697860 -0400
> @@ -58,7 +58,7 @@
>              2 * atan(taninit *
>                       std::pow(((1 + esinphi) / (1 - esinphi)), (e / 2))) -
>              0.5 * M_PI;
> -        if (abs(new_phi - phi) < threshold) {
> +        if (std::abs(new_phi - phi) < threshold) {
>              phi = new_phi;
>              break;
>          }
>
> Interesting that this only causes trouble with spilhaus, at least as far
> as tests catch it.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250504/334932df/attachment.htm>

From gdt at lexort.com  Sun May  4 16:30:21 2025
From: gdt at lexort.com (Greg Troxel)
Date: Sun, 04 May 2025 19:30:21 -0400
Subject: [PROJ] spilhaus regresssion test failures
In-Reply-To: <rmiikmgqli6.fsf@s1.lexort.com> (Greg Troxel via PROJ's message
 of "Sun, 04 May 2025 14:27:45 -0400")
References: <rmi8qncjzqh.fsf@s1.lexort.com>
 <CADRrdKv7ynYXYY8gxORmQBryXpJc9DSiTjxuSPmjBwPm8iJ1AA@mail.gmail.com>
 <rmimsbsigzw.fsf@s1.lexort.com>
 <CADRrdKuPTZ9D76YgtZFxhiCdkbgvc2RpnVaQrAaS5fHSOKNv_Q@mail.gmail.com>
 <rmiikmgqli6.fsf@s1.lexort.com>
Message-ID: <rmi5xigq7hu.fsf@s1.lexort.com>

Greg Troxel via PROJ <proj at lists.osgeo.org> writes:

> I looked at that code, and it jumped out at me that are abs() was used,
> which is a C function, not C++, and is integer only.
>
> With this patch (to 9.6.0), I get a pass:
>
> --- src/latitudes.cpp.~1~       2025-03-13 10:31:27.000000000 -0400
> +++ src/latitudes.cpp   2025-05-04 14:23:04.656697860 -0400
> @@ -58,7 +58,7 @@
>              2 * atan(taninit *
>                       std::pow(((1 + esinphi) / (1 - esinphi)), (e / 2))) -
>              0.5 * M_PI;
> -        if (abs(new_phi - phi) < threshold) {
> +        if (std::abs(new_phi - phi) < threshold) {
>              phi = new_phi;
>              break;
>          }
>
> Interesting that this only causes trouble with spilhaus, at least as far
> as tests catch it.

Which do we want to do:

  A) pullup the PR #4446 (@cffk aux latitude cleanup) to the 9.6 release
     branch

  B) Decide not to pullup, and change abs to std::abs?

If B, I can make a PR, but if we're going to do A, that isn't useful.

FWIW, I would tend to lean to A, as a grand simplification, but as I
read the discussion it's considered over the line to feature vs bugfix
and I can certainly see that point of view.




