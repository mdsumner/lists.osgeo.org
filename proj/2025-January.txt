From even.rouault at spatialys.com  Thu Jan  2 15:54:45 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 3 Jan 2025 00:54:45 +0100
Subject: [PROJ] Updating our C++ requirement to C++17 for PROJ 9.6
Message-ID: <25fef8e7-38af-46e2-8101-74acfefd4a87@spatialys.com>

Hi,

Happy New Year!

I propose we update our build requirement from C++11 to C++17. This 
should hopefully be unnoticed by anyone using a not too antiquated build 
chain.

Initial trigger for this move is explained in 
https://github.com/OSGeo/PROJ/pull/4366. All our existing CI 
configurations already satisfy the C++17 requirement (and one of them 
was already testing C++20 compatibility)

I don't anticipate much use of new capabilities for now except perhaps 
replacing our internal::make_unique<> by C++14 std::make_unique<>

C++17 has been a build requirement for GDAL since one year and nobody 
complained. Cf 
https://gdal.org/en/stable/development/rfc/rfc98_build_requirements_gdal_3_9.html 
for an analysis of the impacts.

This also satisfies https://proj.org/en/stable/community/rfc/rfc-3.html 
which mentions "Keeping a policy of always lagging behind be two 
iterations of the standard is thought to be the best comprise between 
the two concerns", given that C++20 and C++23 are out.

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
Butcher of all kinds of standards, open or closed formats. At the end, this is just about bytes.


From howard at hobu.co  Mon Jan  6 06:49:33 2025
From: howard at hobu.co (Howard Butler)
Date: Mon, 6 Jan 2025 08:49:33 -0600
Subject: [PROJ] Updating our C++ requirement to C++17 for PROJ 9.6
In-Reply-To: <25fef8e7-38af-46e2-8101-74acfefd4a87@spatialys.com>
References: <25fef8e7-38af-46e2-8101-74acfefd4a87@spatialys.com>
Message-ID: <CF24B033-9F71-471D-AB21-CDD0B91D7E1D@hobu.co>



> On Jan 2, 2025, at 5:54?PM, Even Rouault via PROJ <proj at lists.osgeo.org> wrote:
> 
> Hi,
> 
> Happy New Year!
> 
> I propose we update our build requirement from C++11 to C++17. This should hopefully be unnoticed by anyone using a not too antiquated build chain.
> 
> Initial trigger for this move is explained in https://github.com/OSGeo/PROJ/pull/4366. All our existing CI configurations already satisfy the C++17 requirement (and one of them was already testing C++20 compatibility)
> 
> I don't anticipate much use of new capabilities for now except perhaps replacing our internal::make_unique<> by C++14 std::make_unique<>
> 
> C++17 has been a build requirement for GDAL since one year and nobody complained. Cf https://gdal.org/en/stable/development/rfc/rfc98_build_requirements_gdal_3_9.html for an analysis of the impacts.
> 
> This also satisfies https://proj.org/en/stable/community/rfc/rfc-3.html which mentions "Keeping a policy of always lagging behind be two iterations of the standard is thought to be the best comprise between the two concerns", given that C++20 and C++23 are out.


Is this a PSC motion? +1 :)

Howard

From schwehr at gmail.com  Mon Jan  6 07:15:08 2025
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 6 Jan 2025 07:15:08 -0800
Subject: [PROJ] Updating our C++ requirement to C++17 for PROJ 9.6
In-Reply-To: <CF24B033-9F71-471D-AB21-CDD0B91D7E1D@hobu.co>
References: <25fef8e7-38af-46e2-8101-74acfefd4a87@spatialys.com>
 <CF24B033-9F71-471D-AB21-CDD0B91D7E1D@hobu.co>
Message-ID: <CACmBxys8uRKffvobA6+HfggT3SdpWyLi=ak_oBiAJ73hzMkqTw@mail.gmail.com>

I take RFC 3's text as meaning that there doesn't need to be a vote with
this switch, but that it's a nice thing for the person doing the update to
let the list know of the change happening. If the project wants to switch
to C++23, that would imply that a motion is needed.

If that's different from peoples' expectations, we should definitely
discuss.

If it were a motion, I'd definitely +1 for C++17.

On Mon, Jan 6, 2025 at 6:49?AM Howard Butler via PROJ <proj at lists.osgeo.org>
wrote:

>
>
> > On Jan 2, 2025, at 5:54?PM, Even Rouault via PROJ <proj at lists.osgeo.org>
> wrote:
> >
> > Hi,
> >
> > Happy New Year!
> >
> > I propose we update our build requirement from C++11 to C++17. This
> should hopefully be unnoticed by anyone using a not too antiquated build
> chain.
> >
> > Initial trigger for this move is explained in
> https://github.com/OSGeo/PROJ/pull/4366. All our existing CI
> configurations already satisfy the C++17 requirement (and one of them was
> already testing C++20 compatibility)
> >
> > I don't anticipate much use of new capabilities for now except perhaps
> replacing our internal::make_unique<> by C++14 std::make_unique<>
> >
> > C++17 has been a build requirement for GDAL since one year and nobody
> complained. Cf
> https://gdal.org/en/stable/development/rfc/rfc98_build_requirements_gdal_3_9.html
> for an analysis of the impacts.
> >
> > This also satisfies https://proj.org/en/stable/community/rfc/rfc-3.html
> which mentions "Keeping a policy of always lagging behind be two iterations
> of the standard is thought to be the best comprise between the two
> concerns", given that C++20 and C++23 are out.
>
>
> Is this a PSC motion? +1 :)
>
> Howard
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250106/1eb22aa1/attachment.htm>

From kristianevers at gmail.com  Mon Jan  6 07:31:23 2025
From: kristianevers at gmail.com (Kristian Evers)
Date: Mon, 6 Jan 2025 16:31:23 +0100
Subject: [PROJ] Updating our C++ requirement to C++17 for PROJ 9.6
In-Reply-To: <CACmBxys8uRKffvobA6+HfggT3SdpWyLi=ak_oBiAJ73hzMkqTw@mail.gmail.com>
References: <25fef8e7-38af-46e2-8101-74acfefd4a87@spatialys.com>
 <CF24B033-9F71-471D-AB21-CDD0B91D7E1D@hobu.co>
 <CACmBxys8uRKffvobA6+HfggT3SdpWyLi=ak_oBiAJ73hzMkqTw@mail.gmail.com>
Message-ID: <49F9011B-7AD6-4511-B950-1AB4B8A2F61A@gmail.com>

Here?s a few excerpts from RFC3:

> A change in programming language standard can only be introduced with a new major version release of PROJ

> That means that a change to C99 is possible, as long as the PROJ PSC acknowledges such a change.

> When a new standard for either C or C++ is released PROJ should consider changing its requirement to the next standard in the line. For C++ that means a change in standard roughly every three years, for C the periods between standard updates is expected to be longer. Adaptation of new programming language standards should be coordinated with a major version release of PROJ.


The first excerpt says we can?t make this change until PROJ 10.0.0 is released. The second excerpt states that the PSC should acknowledge a change in which version of either C or C++ is used. And the last encourages us to reconsider the dependencies once in a while. These may not go particularly well together and were written at a time where we did rather frequent major version updates. So maybe a first step is a revision to RFC3 so it allows os to change the minimum version of C and C++ without a major version release of PROJ. It could easily be a number of years before we go to PROJ 10.

What do you guys think? Is the current version of RFC3 too strict?

/Kristian

> On 6 Jan 2025, at 16.15, Kurt Schwehr via PROJ <proj at lists.osgeo.org> wrote:
> 
> I take RFC 3's text as meaning that there doesn't need to be a vote with this switch, but that it's a nice thing for the person doing the update to let the list know of the change happening. If the project wants to switch to C++23, that would imply that a motion is needed.
> 
> If that's different from peoples' expectations, we should definitely discuss.
> 
> If it were a motion, I'd definitely +1 for C++17.
> 
> On Mon, Jan 6, 2025 at 6:49?AM Howard Butler via PROJ <proj at lists.osgeo.org <mailto:proj at lists.osgeo.org>> wrote:
>> 
>> 
>> > On Jan 2, 2025, at 5:54?PM, Even Rouault via PROJ <proj at lists.osgeo.org <mailto:proj at lists.osgeo.org>> wrote:
>> > 
>> > Hi,
>> > 
>> > Happy New Year!
>> > 
>> > I propose we update our build requirement from C++11 to C++17. This should hopefully be unnoticed by anyone using a not too antiquated build chain.
>> > 
>> > Initial trigger for this move is explained in https://github.com/OSGeo/PROJ/pull/4366. All our existing CI configurations already satisfy the C++17 requirement (and one of them was already testing C++20 compatibility)
>> > 
>> > I don't anticipate much use of new capabilities for now except perhaps replacing our internal::make_unique<> by C++14 std::make_unique<>
>> > 
>> > C++17 has been a build requirement for GDAL since one year and nobody complained. Cf https://gdal.org/en/stable/development/rfc/rfc98_build_requirements_gdal_3_9.html for an analysis of the impacts.
>> > 
>> > This also satisfies https://proj.org/en/stable/community/rfc/rfc-3.html which mentions "Keeping a policy of always lagging behind be two iterations of the standard is thought to be the best comprise between the two concerns", given that C++20 and C++23 are out.
>> 
>> 
>> Is this a PSC motion? +1 :)
>> 
>> Howard
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org <mailto:PROJ at lists.osgeo.org>
>> https://lists.osgeo.org/mailman/listinfo/proj
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250106/f213db6b/attachment.htm>

From even.rouault at spatialys.com  Mon Jan  6 07:59:43 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Mon, 6 Jan 2025 16:59:43 +0100
Subject: [PROJ] Motion: approve RFC3 update, and bump to C++17 for PROJ 9.6
Message-ID: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>

Hi,

Motion adopt https://github.com/OSGeo/PROJ/pull/4369 changes to RFC-3 to 
relax it to allow updating programming language standard in minor 
versions, and update build requirements for PROJ 9.6 to be C++17.

+1

Even

-- 
http://www.spatialys.com
My software is free, but my time generally not.
Butcher of all kinds of standards, open or closed formats. At the end, this is just about bytes.


From j1 at jimenezshaw.com  Mon Jan  6 08:01:44 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 6 Jan 2025 17:01:44 +0100
Subject: [PROJ] Updating our C++ requirement to C++17 for PROJ 9.6
In-Reply-To: <49F9011B-7AD6-4511-B950-1AB4B8A2F61A@gmail.com>
References: <25fef8e7-38af-46e2-8101-74acfefd4a87@spatialys.com>
 <CF24B033-9F71-471D-AB21-CDD0B91D7E1D@hobu.co>
 <CACmBxys8uRKffvobA6+HfggT3SdpWyLi=ak_oBiAJ73hzMkqTw@mail.gmail.com>
 <49F9011B-7AD6-4511-B950-1AB4B8A2F61A@gmail.com>
Message-ID: <CADRrdKsPykbxM1WNS+JkrpM-AsEmrzjXtu7A3wUn1BzzmBBZgA@mail.gmail.com>

Interestingly for GDAL there was no mayor release needed (or we did not
realize it).

Something that is not discussed is if the new features of C++17 can be used
in the API, or only in internally in the implementation. In a GDAL PSC
meeting we decided the latter (no C++17 new features in the C++ API, but I
do not remember if it was written anywhere).

I am fine with both, update to C++17, and change RFC3 if needed.

On Mon, 6 Jan 2025 at 16:31, Kristian Evers via PROJ <proj at lists.osgeo.org>
wrote:

> Here?s a few excerpts from RFC3:
>
> A change in programming language standard can only be introduced with a
> new major version release of PROJ
>
>
> That means that a change to C99 is possible, as long as the PROJ PSC
> acknowledges such a change.
>
>
> When a new standard for either C or C++ is released PROJ should consider
> changing its requirement to the next standard in the line. For C++ that
> means a change in standard roughly every three years, for C the periods
> between standard updates is expected to be longer. Adaptation of new
> programming language standards should be coordinated with a major version
> release of PROJ.
>
>
> The first excerpt says we can?t make this change until PROJ 10.0.0 is
> released. The second excerpt states that the PSC should acknowledge a
> change in which version of either C or C++ is used. And the last encourages
> us to reconsider the dependencies once in a while. These may not go
> particularly well together and were written at a time where we did rather
> frequent major version updates. So maybe a first step is a revision to RFC3
> so it allows os to change the minimum version of C and C++ without a major
> version release of PROJ. It could easily be a number of years before we go
> to PROJ 10.
>
> What do you guys think? Is the current version of RFC3 too strict?
>
> /Kristian
>
> On 6 Jan 2025, at 16.15, Kurt Schwehr via PROJ <proj at lists.osgeo.org>
> wrote:
>
> I take RFC 3's text as meaning that there doesn't need to be a vote with
> this switch, but that it's a nice thing for the person doing the update to
> let the list know of the change happening. If the project wants to switch
> to C++23, that would imply that a motion is needed.
>
> If that's different from peoples' expectations, we should definitely
> discuss.
>
> If it were a motion, I'd definitely +1 for C++17.
>
> On Mon, Jan 6, 2025 at 6:49?AM Howard Butler via PROJ <
> proj at lists.osgeo.org> wrote:
>
>>
>>
>> > On Jan 2, 2025, at 5:54?PM, Even Rouault via PROJ <proj at lists.osgeo.org>
>> wrote:
>> >
>> > Hi,
>> >
>> > Happy New Year!
>> >
>> > I propose we update our build requirement from C++11 to C++17. This
>> should hopefully be unnoticed by anyone using a not too antiquated build
>> chain.
>> >
>> > Initial trigger for this move is explained in
>> https://github.com/OSGeo/PROJ/pull/4366. All our existing CI
>> configurations already satisfy the C++17 requirement (and one of them was
>> already testing C++20 compatibility)
>> >
>> > I don't anticipate much use of new capabilities for now except perhaps
>> replacing our internal::make_unique<> by C++14 std::make_unique<>
>> >
>> > C++17 has been a build requirement for GDAL since one year and nobody
>> complained. Cf
>> https://gdal.org/en/stable/development/rfc/rfc98_build_requirements_gdal_3_9.html
>> for an analysis of the impacts.
>> >
>> > This also satisfies https://proj.org/en/stable/community/rfc/rfc-3.html
>> which mentions "Keeping a policy of always lagging behind be two iterations
>> of the standard is thought to be the best comprise between the two
>> concerns", given that C++20 and C++23 are out.
>>
>>
>> Is this a PSC motion? +1 :)
>>
>> Howard
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250106/bb2bf47d/attachment-0001.htm>

From j1 at jimenezshaw.com  Mon Jan  6 08:02:26 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Mon, 6 Jan 2025 17:02:26 +0100
Subject: [PROJ] Motion: approve RFC3 update,
 and bump to C++17 for PROJ 9.6
In-Reply-To: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
References: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
Message-ID: <CADRrdKuZDS4H4gwKOyS3P65VXwkT+k8AwiBn32WDA8HjXAkYDQ@mail.gmail.com>

+1 Javier

On Mon, 6 Jan 2025 at 16:59, Even Rouault via PROJ <proj at lists.osgeo.org>
wrote:

> Hi,
>
> Motion adopt https://github.com/OSGeo/PROJ/pull/4369 changes to RFC-3 to
> relax it to allow updating programming language standard in minor
> versions, and update build requirements for PROJ 9.6 to be C++17.
>
> +1
>
> Even
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
> Butcher of all kinds of standards, open or closed formats. At the end,
> this is just about bytes.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250106/333d8983/attachment.htm>

From charles.karney at gmail.com  Mon Jan  6 08:07:20 2025
From: charles.karney at gmail.com (Charles Karney)
Date: Mon, 6 Jan 2025 11:07:20 -0500
Subject: [PROJ] Motion: approve RFC3 update,
 and bump to C++17 for PROJ 9.6
In-Reply-To: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
References: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
Message-ID: <a7d94e06-96b4-4b0f-80ff-c20bdef74448@alum.mit.edu>

+1 Charles

C++17 features that might be useful:
   if constexpr
   std::hypot(x, y, z)
   std::clamp(x, lo, hi)

On 1/6/25 10:59 AM, Even Rouault via PROJ wrote:
> Hi,
> 
> Motion adopt https://github.com/OSGeo/PROJ/pull/4369 changes to RFC-3 to 
> relax it to allow updating programming language standard in minor 
> versions, and update build requirements for PROJ 9.6 to be C++17.
> 
> +1
> 
> Even
> 

-- 
Charles Karney <karney at alum.mit.edu>
702 Prospect Ave
Princeton, NJ 08540-4037


From howard at hobu.co  Mon Jan  6 08:16:43 2025
From: howard at hobu.co (Howard Butler)
Date: Mon, 6 Jan 2025 10:16:43 -0600
Subject: [PROJ] Motion: approve RFC3 update,
 and bump to C++17 for PROJ 9.6
In-Reply-To: <a7d94e06-96b4-4b0f-80ff-c20bdef74448@alum.mit.edu>
References: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
 <a7d94e06-96b4-4b0f-80ff-c20bdef74448@alum.mit.edu>
Message-ID: <AF6CD6FA-9B09-4145-BCA2-BEC796134DC3@hobu.co>

+1 Howard

> On Jan 6, 2025, at 10:07?AM, Charles Karney via PROJ <proj at lists.osgeo.org> wrote:
> 
> +1 Charles
> 
> C++17 features that might be useful:
>  if constexpr
>  std::hypot(x, y, z)
>  std::clamp(x, lo, hi)
> 
> On 1/6/25 10:59 AM, Even Rouault via PROJ wrote:
>> Hi,
>> Motion adopt https://github.com/OSGeo/PROJ/pull/4369 changes to RFC-3 to relax it to allow updating programming language standard in minor versions, and update build requirements for PROJ 9.6 to be C++17.
>> +1
>> Even
> 
> -- 
> Charles Karney <karney at alum.mit.edu>
> 702 Prospect Ave
> Princeton, NJ 08540-4037
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj


From knudsen.thomas at gmail.com  Mon Jan  6 09:02:08 2025
From: knudsen.thomas at gmail.com (Thomas Knudsen)
Date: Mon, 6 Jan 2025 18:02:08 +0100
Subject: [PROJ] Motion: approve RFC3 update,
 and bump to C++17 for PROJ 9.6
In-Reply-To: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
References: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
Message-ID: <CAH0YoEOJxdV-buEV-hoBtU=beJUiPrvBC32mxhQA3ddZ2g=aVA@mail.gmail.com>

+1 Thomas

Den man. 6. jan. 2025 kl. 17.06 skrev Even Rouault via PROJ <
proj at lists.osgeo.org>:

> Hi,
>
> Motion adopt https://github.com/OSGeo/PROJ/pull/4369 changes to RFC-3 to
> relax it to allow updating programming language standard in minor
> versions, and update build requirements for PROJ 9.6 to be C++17.
>
> +1
>
> Even
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
> Butcher of all kinds of standards, open or closed formats. At the end,
> this is just about bytes.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250106/049505f8/attachment.htm>

From schwehr at gmail.com  Mon Jan  6 13:06:55 2025
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 6 Jan 2025 13:06:55 -0800
Subject: [PROJ] Motion: approve RFC3 update,
 and bump to C++17 for PROJ 9.6
In-Reply-To: <CAH0YoEOJxdV-buEV-hoBtU=beJUiPrvBC32mxhQA3ddZ2g=aVA@mail.gmail.com>
References: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
 <CAH0YoEOJxdV-buEV-hoBtU=beJUiPrvBC32mxhQA3ddZ2g=aVA@mail.gmail.com>
Message-ID: <CACmBxyuGycLFv_c6YVMivWu07kYh1bgxLrpgWa7zqyFHxXM9eg@mail.gmail.com>

+1 KurtS

On Mon, Jan 6, 2025 at 9:02?AM Thomas Knudsen via PROJ <proj at lists.osgeo.org>
wrote:

> +1 Thomas
>
> Den man. 6. jan. 2025 kl. 17.06 skrev Even Rouault via PROJ <
> proj at lists.osgeo.org>:
>
>> Hi,
>>
>> Motion adopt https://github.com/OSGeo/PROJ/pull/4369 changes to RFC-3 to
>> relax it to allow updating programming language standard in minor
>> versions, and update build requirements for PROJ 9.6 to be C++17.
>>
>> +1
>>
>> Even
>>
>> --
>> http://www.spatialys.com
>> My software is free, but my time generally not.
>> Butcher of all kinds of standards, open or closed formats. At the end,
>> this is just about bytes.
>>
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250106/659fe36d/attachment.htm>

From schwehr at gmail.com  Mon Jan  6 13:06:56 2025
From: schwehr at gmail.com (Kurt Schwehr)
Date: Mon, 6 Jan 2025 13:06:56 -0800
Subject: [PROJ] Updating our C++ requirement to C++17 for PROJ 9.6
In-Reply-To: <49F9011B-7AD6-4511-B950-1AB4B8A2F61A@gmail.com>
References: <25fef8e7-38af-46e2-8101-74acfefd4a87@spatialys.com>
 <CF24B033-9F71-471D-AB21-CDD0B91D7E1D@hobu.co>
 <CACmBxys8uRKffvobA6+HfggT3SdpWyLi=ak_oBiAJ73hzMkqTw@mail.gmail.com>
 <49F9011B-7AD6-4511-B950-1AB4B8A2F61A@gmail.com>
Message-ID: <CACmBxyuWrZpK2iBYof89M0003LGvcXXDmM5WGX3-joJhK3iU_g@mail.gmail.com>

Too strict and thanks Even for the motion.

On Mon, Jan 6, 2025 at 7:31?AM Kristian Evers <kristianevers at gmail.com>
wrote:

> Here?s a few excerpts from RFC3:
>
> A change in programming language standard can only be introduced with a
> new major version release of PROJ
>
>
>
^ And I missed that!


> That means that a change to C99 is possible, as long as the PROJ PSC
> acknowledges such a change.
>
>
> When a new standard for either C or C++ is released PROJ should consider
> changing its requirement to the next standard in the line. For C++ that
> means a change in standard roughly every three years, for C the periods
> between standard updates is expected to be longer. Adaptation of new
> programming language standards should be coordinated with a major version
> release of PROJ.
>
>
> The first excerpt says we can?t make this change until PROJ 10.0.0 is
> released. The second excerpt states that the PSC should acknowledge a
> change in which version of either C or C++ is used. And the last encourages
> us to reconsider the dependencies once in a while. These may not go
> particularly well together and were written at a time where we did rather
> frequent major version updates. So maybe a first step is a revision to RFC3
> so it allows os to change the minimum version of C and C++ without a major
> version release of PROJ. It could easily be a number of years before we go
> to PROJ 10.
>
> What do you guys think? Is the current version of RFC3 too strict?
>
> /Kristian
>
> On 6 Jan 2025, at 16.15, Kurt Schwehr via PROJ <proj at lists.osgeo.org>
> wrote:
>
> I take RFC 3's text as meaning that there doesn't need to be a vote with
> this switch, but that it's a nice thing for the person doing the update to
> let the list know of the change happening. If the project wants to switch
> to C++23, that would imply that a motion is needed.
>
> If that's different from peoples' expectations, we should definitely
> discuss.
>
> If it were a motion, I'd definitely +1 for C++17.
>
> On Mon, Jan 6, 2025 at 6:49?AM Howard Butler via PROJ <
> proj at lists.osgeo.org> wrote:
>
>>
>>
>> > On Jan 2, 2025, at 5:54?PM, Even Rouault via PROJ <proj at lists.osgeo.org>
>> wrote:
>> >
>> > Hi,
>> >
>> > Happy New Year!
>> >
>> > I propose we update our build requirement from C++11 to C++17. This
>> should hopefully be unnoticed by anyone using a not too antiquated build
>> chain.
>> >
>> > Initial trigger for this move is explained in
>> https://github.com/OSGeo/PROJ/pull/4366. All our existing CI
>> configurations already satisfy the C++17 requirement (and one of them was
>> already testing C++20 compatibility)
>> >
>> > I don't anticipate much use of new capabilities for now except perhaps
>> replacing our internal::make_unique<> by C++14 std::make_unique<>
>> >
>> > C++17 has been a build requirement for GDAL since one year and nobody
>> complained. Cf
>> https://gdal.org/en/stable/development/rfc/rfc98_build_requirements_gdal_3_9.html
>> for an analysis of the impacts.
>> >
>> > This also satisfies https://proj.org/en/stable/community/rfc/rfc-3.html
>> which mentions "Keeping a policy of always lagging behind be two iterations
>> of the standard is thought to be the best comprise between the two
>> concerns", given that C++20 and C++23 are out.
>>
>>
>> Is this a PSC motion? +1 :)
>>
>> Howard
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250106/c56fc60a/attachment.htm>

From alansnow21 at gmail.com  Mon Jan  6 19:37:58 2025
From: alansnow21 at gmail.com (Alan Snow)
Date: Mon, 6 Jan 2025 21:37:58 -0600
Subject: [PROJ] Motion: approve RFC3 update,
 and bump to C++17 for PROJ 9.6
In-Reply-To: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
References: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
Message-ID: <CAGybdFQa9m-je3sM=oG1+c-=3ppenedbBKoVSaBzBT_HSw7EVg@mail.gmail.com>

At first glance, it seems reasonable. Though I have a couple of questions
for clarification.

Would it make sense to word the RFC so we prefer making dependency changes
on major releases, but exceptions can be made? For example, if the
dependency charge can be classified as a minor change and will cause
minimal disruptions, then an exception can be made.

What were the reasons for originally wanting to only apply dependency
updates for major releases? How do we plan to ensure the original reasons
are not overlooked for minor releases?

On Mon, Jan 6, 2025, 10:06 AM Even Rouault via PROJ <proj at lists.osgeo.org>
wrote:

> Hi,
>
> Motion adopt https://github.com/OSGeo/PROJ/pull/4369 changes to RFC-3 to
> relax it to allow updating programming language standard in minor
> versions, and update build requirements for PROJ 9.6 to be C++17.
>
> +1
>
> Even
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
> Butcher of all kinds of standards, open or closed formats. At the end,
> this is just about bytes.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250106/9bbe78dd/attachment.htm>

From even.rouault at spatialys.com  Mon Jan  6 19:48:02 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Tue, 7 Jan 2025 04:48:02 +0100
Subject: [PROJ] Motion: approve RFC3 update,
 and bump to C++17 for PROJ 9.6
In-Reply-To: <CAGybdFQa9m-je3sM=oG1+c-=3ppenedbBKoVSaBzBT_HSw7EVg@mail.gmail.com>
References: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
 <CAGybdFQa9m-je3sM=oG1+c-=3ppenedbBKoVSaBzBT_HSw7EVg@mail.gmail.com>
Message-ID: <8aa37c1b-1ce6-4ee4-b5af-52c229f6250b@spatialys.com>


Le 07/01/2025 ? 04:37, Alan Snow a ?crit?:
> At first glance, it seems reasonable. Though I have a couple of 
> questions for clarification.
>
> Would it make sense to word the RFC so we prefer making dependency 
> changes on major releases, but exceptions can be made? For example, if 
> the dependency charge can be classified as a minor change and will 
> cause minimal disruptions, then an exception can be made.
>
> What were the reasons for originally wanting to only apply dependency 
> updates for major releases? How do we plan to ensure the original 
> reasons are not overlooked for minor releases?

IMHO spending more time fine-tuning RFC-3 is not worth it. Our usual 
communication mechanisms, pull requests or messages on this list, and 
seeking for enough consensus, and making a motion if needed, are enough 
to handle those situations.

-- 
http://www.spatialys.com
My software is free, but my time generally not.
Butcher of all kinds of standards, open or closed formats. At the end, this is just about bytes.


From kristianevers at gmail.com  Mon Jan  6 23:55:06 2025
From: kristianevers at gmail.com (Kristian Evers)
Date: Tue, 7 Jan 2025 08:55:06 +0100
Subject: [PROJ] Motion: approve RFC3 update,
 and bump to C++17 for PROJ 9.6
In-Reply-To: <8aa37c1b-1ce6-4ee4-b5af-52c229f6250b@spatialys.com>
References: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
 <CAGybdFQa9m-je3sM=oG1+c-=3ppenedbBKoVSaBzBT_HSw7EVg@mail.gmail.com>
 <8aa37c1b-1ce6-4ee4-b5af-52c229f6250b@spatialys.com>
Message-ID: <62073F11-776B-4F90-8A2B-C2F56AB4714F@gmail.com>

I think we can do a little bit of fine-tuning. I?ve added an extra commit to the branch with my additions:

https://github.com/OSGeo/PROJ/pull/4369/commits/8f045bac73d2823d1d3ee17b3537b5d58d902995

I?ve clarified that a change in version requirements needs to be communicated clearly and removed a line
about changing versions of programming languages that contradicts the reason why we are updating this RFC
In the first place.

With those details added I am +1 as well.

/Kristian

> On 7 Jan 2025, at 04.48, Even Rouault via PROJ <proj at lists.osgeo.org> wrote:
> 
> 
> Le 07/01/2025 ? 04:37, Alan Snow a ?crit :
>> At first glance, it seems reasonable. Though I have a couple of questions for clarification.
>> 
>> Would it make sense to word the RFC so we prefer making dependency changes on major releases, but exceptions can be made? For example, if the dependency charge can be classified as a minor change and will cause minimal disruptions, then an exception can be made.
>> 
>> What were the reasons for originally wanting to only apply dependency updates for major releases? How do we plan to ensure the original reasons are not overlooked for minor releases?
> 
> IMHO spending more time fine-tuning RFC-3 is not worth it. Our usual communication mechanisms, pull requests or messages on this list, and seeking for enough consensus, and making a motion if needed, are enough to handle those situations.
> 
> -- 
> http://www.spatialys.com
> My software is free, but my time generally not.
> Butcher of all kinds of standards, open or closed formats. At the end, this is just about bytes.
> 
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250107/19085f62/attachment-0001.htm>

From j1 at jimenezshaw.com  Tue Jan  7 03:24:59 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Tue, 7 Jan 2025 12:24:59 +0100
Subject: [PROJ] Anybody from Thailand?
Message-ID: <CADRrdKtKJKpxxA-RfsyfazAidG5coaU7vCx9qaki+wBzC8bTRA@mail.gmail.com>

Hi

Is there anybody here with contacts in the Royal Thai Survey Department?
They claim they have a geoid model "TGM2017 geoid model" [1], but there is
no vertical CRS in EPSG.org for Thailand.
They say (at least, that is what some colleagues transmitted to me) that
they do not find it necessary.

Could anybody explain why a vertical coordinate reference system is needed
to properly use a geoid model? (it is also important without a geoid model.
Vertical systems existed before having geoid models). Adding it to EPSG is
free, easy, and more important, it helps the citizens living and working in
that country.

Thanks
Javier.

[1] https://gnss-portal.rtsd.mi.th/portal/apps/sites/#/gnss for some reason
the link there to the geoid model does not work for me
https://www.rtsd.mi.th/main/%E0%B9%82%E0%B8%84%E0%B8%A3%E0%B8%87%E0%B8%81%E0%B8%B2%E0%B8%A3%E0%B8%9E%E0%B8%B1%E0%B8%92%E0%B8%99%E0%B8%B2%E0%B9%81%E0%B8%9A%E0%B8%9A%E0%B8%88%E0%B8%B3%E0%B8%A5%E0%B8%AD%E0%B8%87%E0%B8%A2%E0%B8%B5/
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250107/f3b939ad/attachment.htm>

From gdt at lexort.com  Tue Jan  7 04:38:31 2025
From: gdt at lexort.com (Greg Troxel)
Date: Tue, 07 Jan 2025 07:38:31 -0500
Subject: [PROJ] Anybody from Thailand?
In-Reply-To: <CADRrdKtKJKpxxA-RfsyfazAidG5coaU7vCx9qaki+wBzC8bTRA@mail.gmail.com>
 (Javier Jimenez Shaw via PROJ's message of "Tue, 7 Jan 2025 12:24:59
 +0100")
References: <CADRrdKtKJKpxxA-RfsyfazAidG5coaU7vCx9qaki+wBzC8bTRA@mail.gmail.com>
Message-ID: <rmisepu3ik8.fsf@s1.lexort.com>

Javier Jimenez Shaw via PROJ <proj at lists.osgeo.org> writes:

> Could anybody explain why a vertical coordinate reference system is needed
> to properly use a geoid model?

(This is all a little fuzzy, and I hope that fuzz doesn't matter.)

Restating what I think is agreed: A geoid model is some combination of
numbers and formulas, that when given a lat/lon, tells you the
difference between HAE in some datum and some kind of height.

A gravimetric geoid model relates the zero of equipotential surface to
zero HAE.

A hybrid geoid model relates the zero of an orthometric datum (that is
probably not an equipotential surface), such as NAVD 88, to zero HAE.  A
hybrid geoid model does not make sense without a vertical CRS.

A pure gravimetric geoid model needs only a W_0 (U_0), and we don't tend
to label that as a CRS.  I would expect you'd need to complete the CRS
by talking about dynamic vs orthometric height, and you'd need dynamic
to not make a semantic mess where you can go up 100m, sideways along an
equipotential, down 100m and back, and not end up where you started.

https://www.ngs.noaa.gov/GEOID/
NGS says their gravimetric geoids:

  Converts heights from ITRFxx to the NGS geoid supprface
  (not NAVD 88 or other Vertical datums)

An example is "EGM2008" which I see as a gravimetric geoid model,
converting WGS84 HAE to "WGS84 Orthometric Height".
https://spatialreference.org/ref/epsg/3855/

So, if the Thai geoid is basically functionally like EGM2008, but
restricted to Thailand and more accurate, then I can see that they don't
feel the need to name/publish a vertical CRS.  It would just be a
locally-more-accurate transformation.


So the question is what TGM2017 is defined to be, both the geodetic
datum for the HAE input, and the output vertical.

When you say "why a vertical CRS is needed", do you count "meters above
the W_0 surface" as a CRS?   If so, is this EPGS:3855?





Separately, the idea that Thailand has no national vertical datum,
especially from before GNSS, is hard to believe.  There could be a
regional datum for a few countries that is in EPSG but I'd expect your
search tool to turn that up.

From j1 at jimenezshaw.com  Tue Jan  7 07:11:21 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Tue, 7 Jan 2025 16:11:21 +0100
Subject: [PROJ] Anybody from Thailand?
In-Reply-To: <rmisepu3ik8.fsf@s1.lexort.com>
References: <CADRrdKtKJKpxxA-RfsyfazAidG5coaU7vCx9qaki+wBzC8bTRA@mail.gmail.com>
 <rmisepu3ik8.fsf@s1.lexort.com>
Message-ID: <CADRrdKu4zAtFnb-4pMijWtxrTXQZ6Fzm=A=ODv3RG_9O2fCkbw@mail.gmail.com>

The problem is how do you "identify" the elevation without an vertical
reference. If I say that the height/elevation/z is 345.678 m.... what is
the reference?
A geoid model express the transformation from a 3D CRS to a compound (2D +
vertical) CRS. Without a way to name the vertical CRS, what are we talking
about?
I know that many countries only have one. So it is "the one and only". But
there are many countries, so there are many "one and only" vertical CRS...
that is a contradiction ;)

They just have to register theirs in EPSG (I'm sure they have one).
I have already talked with some countries about this topic: Israel,
Colombia, Brazil, ... They are usually so busy to pay attention. Maybe I am
lucky now with Brazil, that has a new management.

My point with the email was to find something with the right contacts.
Knowing the right person makes everything much easy.

Let's see.

On Tue, 7 Jan 2025 at 13:38, Greg Troxel via PROJ <proj at lists.osgeo.org>
wrote:

> Javier Jimenez Shaw via PROJ <proj at lists.osgeo.org> writes:
>
> > Could anybody explain why a vertical coordinate reference system is
> needed
> > to properly use a geoid model?
>
> (This is all a little fuzzy, and I hope that fuzz doesn't matter.)
>
> Restating what I think is agreed: A geoid model is some combination of
> numbers and formulas, that when given a lat/lon, tells you the
> difference between HAE in some datum and some kind of height.
>
> A gravimetric geoid model relates the zero of equipotential surface to
> zero HAE.
>
> A hybrid geoid model relates the zero of an orthometric datum (that is
> probably not an equipotential surface), such as NAVD 88, to zero HAE.  A
> hybrid geoid model does not make sense without a vertical CRS.
>
> A pure gravimetric geoid model needs only a W_0 (U_0), and we don't tend
> to label that as a CRS.  I would expect you'd need to complete the CRS
> by talking about dynamic vs orthometric height, and you'd need dynamic
> to not make a semantic mess where you can go up 100m, sideways along an
> equipotential, down 100m and back, and not end up where you started.
>
> https://www.ngs.noaa.gov/GEOID/
> NGS says their gravimetric geoids:
>
>   Converts heights from ITRFxx to the NGS geoid supprface
>   (not NAVD 88 or other Vertical datums)
>
> An example is "EGM2008" which I see as a gravimetric geoid model,
> converting WGS84 HAE to "WGS84 Orthometric Height".
> https://spatialreference.org/ref/epsg/3855/
>
> So, if the Thai geoid is basically functionally like EGM2008, but
> restricted to Thailand and more accurate, then I can see that they don't
> feel the need to name/publish a vertical CRS.  It would just be a
> locally-more-accurate transformation.
>
>
> So the question is what TGM2017 is defined to be, both the geodetic
> datum for the HAE input, and the output vertical.
>
> When you say "why a vertical CRS is needed", do you count "meters above
> the W_0 surface" as a CRS?   If so, is this EPGS:3855?
>
>
>
>
>
> Separately, the idea that Thailand has no national vertical datum,
> especially from before GNSS, is hard to believe.  There could be a
> regional datum for a few countries that is in EPSG but I'd expect your
> search tool to turn that up.
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250107/66af12b4/attachment.htm>

From alansnow21 at gmail.com  Tue Jan  7 07:24:26 2025
From: alansnow21 at gmail.com (Alan Snow)
Date: Tue, 7 Jan 2025 09:24:26 -0600
Subject: [PROJ] Motion: approve RFC3 update,
 and bump to C++17 for PROJ 9.6
In-Reply-To: <62073F11-776B-4F90-8A2B-C2F56AB4714F@gmail.com>
References: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
 <CAGybdFQa9m-je3sM=oG1+c-=3ppenedbBKoVSaBzBT_HSw7EVg@mail.gmail.com>
 <8aa37c1b-1ce6-4ee4-b5af-52c229f6250b@spatialys.com>
 <62073F11-776B-4F90-8A2B-C2F56AB4714F@gmail.com>
Message-ID: <CAGybdFS2V8oOYwwGBfvAE-Jdqa_H6HT9afgQCAfgofM95wz7pw@mail.gmail.com>

With PSC approval in PROJ thread, highlights in release notes, and updating
the compatibility in the documentation (especially the installation guide),
I think that will help communicate the change.

>From the perspective of pyproj & manylinux wheels, having a warning and
compatibility information will be helpful.

+1 to the amendment to RFC3

On Tue, Jan 7, 2025, 1:55 AM Kristian Evers <kristianevers at gmail.com> wrote:

> I think we can do a little bit of fine-tuning. I?ve added an extra commit
> to the branch with my additions:
>
>
> https://github.com/OSGeo/PROJ/pull/4369/commits/8f045bac73d2823d1d3ee17b3537b5d58d902995
>
> I?ve clarified that a change in version requirements needs to be
> communicated clearly and removed a line
> about changing versions of programming languages that contradicts the
> reason why we are updating this RFC
> In the first place.
>
> With those details added I am +1 as well.
>
> /Kristian
>
> On 7 Jan 2025, at 04.48, Even Rouault via PROJ <proj at lists.osgeo.org>
> wrote:
>
>
> Le 07/01/2025 ? 04:37, Alan Snow a ?crit :
>
> At first glance, it seems reasonable. Though I have a couple of questions
> for clarification.
>
> Would it make sense to word the RFC so we prefer making dependency changes
> on major releases, but exceptions can be made? For example, if the
> dependency charge can be classified as a minor change and will cause
> minimal disruptions, then an exception can be made.
>
> What were the reasons for originally wanting to only apply dependency
> updates for major releases? How do we plan to ensure the original reasons
> are not overlooked for minor releases?
>
>
> IMHO spending more time fine-tuning RFC-3 is not worth it. Our usual
> communication mechanisms, pull requests or messages on this list, and
> seeking for enough consensus, and making a motion if needed, are enough to
> handle those situations.
>
> --
> http://www.spatialys.com
> My software is free, but my time generally not.
> Butcher of all kinds of standards, open or closed formats. At the end,
> this is just about bytes.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250107/7c7f50df/attachment.htm>

From kristianevers at gmail.com  Wed Jan  8 00:44:35 2025
From: kristianevers at gmail.com (Kristian Evers)
Date: Wed, 8 Jan 2025 09:44:35 +0100
Subject: [PROJ] Anybody from Thailand?
In-Reply-To: <CADRrdKu4zAtFnb-4pMijWtxrTXQZ6Fzm=A=ODv3RG_9O2fCkbw@mail.gmail.com>
References: <CADRrdKtKJKpxxA-RfsyfazAidG5coaU7vCx9qaki+wBzC8bTRA@mail.gmail.com>
 <rmisepu3ik8.fsf@s1.lexort.com>
 <CADRrdKu4zAtFnb-4pMijWtxrTXQZ6Fzm=A=ODv3RG_9O2fCkbw@mail.gmail.com>
Message-ID: <CALECs+cObzb23q0Vnv8NZ=b-i4LOfRjpuW2HqfLHJm97Xpc2DA@mail.gmail.com>

Javier,

In case you are not aware, the UN Global Geodetic Center of Excellence
(UN-GGCE) is hosting a number of "Geodesy Capacity Development Workshops"
this year. I believe there's one for each major region, the Europe workshop
is in February. The programme for the workshop is quite extensive, with one
of the sessions focusing on the ISO and EPSG registries. I'm sure it's not
a silver bullet that magically fixes everything, but it should bring
attention to the matter for all attending people. The focus of the
workshops, I believe, is mainly on strengthening the capabilities of
geodesists in lesser developed countries. So maybe, a year from now it'll
be a little bit easier to have the conversation about the EPSG registry
with local authorities. The UN-GGCE might also be a good place to ask for a
point of contact in a specific country.

/Kristian

On Tue, 7 Jan 2025 at 16:27, Javier Jimenez Shaw via PROJ <
proj at lists.osgeo.org> wrote:

> The problem is how do you "identify" the elevation without an vertical
> reference. If I say that the height/elevation/z is 345.678 m.... what is
> the reference?
> A geoid model express the transformation from a 3D CRS to a compound (2D +
> vertical) CRS. Without a way to name the vertical CRS, what are we talking
> about?
> I know that many countries only have one. So it is "the one and only". But
> there are many countries, so there are many "one and only" vertical CRS...
> that is a contradiction ;)
>
> They just have to register theirs in EPSG (I'm sure they have one).
> I have already talked with some countries about this topic: Israel,
> Colombia, Brazil, ... They are usually so busy to pay attention. Maybe I am
> lucky now with Brazil, that has a new management.
>
> My point with the email was to find something with the right contacts.
> Knowing the right person makes everything much easy.
>
> Let's see.
>
> On Tue, 7 Jan 2025 at 13:38, Greg Troxel via PROJ <proj at lists.osgeo.org>
> wrote:
>
>> Javier Jimenez Shaw via PROJ <proj at lists.osgeo.org> writes:
>>
>> > Could anybody explain why a vertical coordinate reference system is
>> needed
>> > to properly use a geoid model?
>>
>> (This is all a little fuzzy, and I hope that fuzz doesn't matter.)
>>
>> Restating what I think is agreed: A geoid model is some combination of
>> numbers and formulas, that when given a lat/lon, tells you the
>> difference between HAE in some datum and some kind of height.
>>
>> A gravimetric geoid model relates the zero of equipotential surface to
>> zero HAE.
>>
>> A hybrid geoid model relates the zero of an orthometric datum (that is
>> probably not an equipotential surface), such as NAVD 88, to zero HAE.  A
>> hybrid geoid model does not make sense without a vertical CRS.
>>
>> A pure gravimetric geoid model needs only a W_0 (U_0), and we don't tend
>> to label that as a CRS.  I would expect you'd need to complete the CRS
>> by talking about dynamic vs orthometric height, and you'd need dynamic
>> to not make a semantic mess where you can go up 100m, sideways along an
>> equipotential, down 100m and back, and not end up where you started.
>>
>> https://www.ngs.noaa.gov/GEOID/
>> NGS says their gravimetric geoids:
>>
>>   Converts heights from ITRFxx to the NGS geoid supprface
>>   (not NAVD 88 or other Vertical datums)
>>
>> An example is "EGM2008" which I see as a gravimetric geoid model,
>> converting WGS84 HAE to "WGS84 Orthometric Height".
>> https://spatialreference.org/ref/epsg/3855/
>>
>> So, if the Thai geoid is basically functionally like EGM2008, but
>> restricted to Thailand and more accurate, then I can see that they don't
>> feel the need to name/publish a vertical CRS.  It would just be a
>> locally-more-accurate transformation.
>>
>>
>> So the question is what TGM2017 is defined to be, both the geodetic
>> datum for the HAE input, and the output vertical.
>>
>> When you say "why a vertical CRS is needed", do you count "meters above
>> the W_0 surface" as a CRS?   If so, is this EPGS:3855?
>>
>>
>>
>>
>>
>> Separately, the idea that Thailand has no national vertical datum,
>> especially from before GNSS, is hard to believe.  There could be a
>> regional datum for a few countries that is in EPSG but I'd expect your
>> search tool to turn that up.
>> _______________________________________________
>> PROJ mailing list
>> PROJ at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/proj
>>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250108/cf896c6b/attachment.htm>

From even.rouault at spatialys.com  Thu Jan  9 06:08:46 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Thu, 9 Jan 2025 15:08:46 +0100
Subject: [PROJ] Motion: approve RFC3 update,
 and bump to C++17 for PROJ 9.6
In-Reply-To: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
References: <8d4692d1-e4c0-4b87-87f4-ae46c75050fb@spatialys.com>
Message-ID: <326780b3-d6ac-4826-8e68-abc6380298db@spatialys.com>

Motion passed with +1 from PSC members EvenR, JavierJS, CharlesK, 
HowardB, ThomasK, KurtS, AlanS, KristianE

Le 06/01/2025 ? 16:59, Even Rouault via PROJ a ?crit?:
> Hi,
>
> Motion adopt https://github.com/OSGeo/PROJ/pull/4369 changes to RFC-3 
> to relax it to allow updating programming language standard in minor 
> versions, and update build requirements for PROJ 9.6 to be C++17.
>
> +1
>
> Even
>
-- 
http://www.spatialys.com
My software is free, but my time generally not.
Butcher of all kinds of standards, open or closed formats. At the end, this is just about bytes.


From j1 at jimenezshaw.com  Fri Jan 10 08:05:12 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Fri, 10 Jan 2025 17:05:12 +0100
Subject: [PROJ] README.DATA in PROJ-data
Message-ID: <CADRrdKsV9gCFM5O-PUHojPHRSMnRuPrnZb9Yf5f+gFTYhjY3xg@mail.gmail.com>

Hi

Is there any reason why
https://github.com/OSGeo/PROJ-data/blob/master/README.DATA
is not
https://github.com/OSGeo/PROJ-data/blob/master/README.md
?

I wanted to send a link to it... and it was not nicely formatted as markdown

Cheers,
Javier.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250110/4b3b671d/attachment.htm>

From even.rouault at spatialys.com  Fri Jan 10 08:25:09 2025
From: even.rouault at spatialys.com (Even Rouault)
Date: Fri, 10 Jan 2025 17:25:09 +0100
Subject: [PROJ] README.DATA in PROJ-data
In-Reply-To: <CADRrdKsV9gCFM5O-PUHojPHRSMnRuPrnZb9Yf5f+gFTYhjY3xg@mail.gmail.com>
References: <CADRrdKsV9gCFM5O-PUHojPHRSMnRuPrnZb9Yf5f+gFTYhjY3xg@mail.gmail.com>
Message-ID: <38a94cdf-b2b1-471f-b395-909b11774ebe@spatialys.com>

Hi Javier,

You can send a link to 
https://github.com/OSGeo/PROJ-data/tree/master/.github#readme that is a 
symlink from README.DATA to .github/README.md

Digging into history of the ancestor PROJ-datumgrid repository, I see 
commit 
https://github.com/OSGeo/proj-datumgrid/commit/8b98af747e4be28e45bb1a39c176102e858ada5c 
where README.md was renamed README.DATUMGRID , and that naming 
convention was perpetuated when creating PROJ-data. Maybe Sebastian 
recalls the reason? I suspect this might be related to some packaging 
best practice.

Even

Le 10/01/2025 ? 17:05, Javier Jimenez Shaw via PROJ a ?crit?:
> Hi
>
> Is there any reason why
> https://github.com/OSGeo/PROJ-data/blob/master/README.DATA
> is not
> https://github.com/OSGeo/PROJ-data/blob/master/README.md
> ?
>
> I wanted to send a link to it... and it was not nicely formatted as 
> markdown
>
> Cheers,
> Javier.
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj

-- 
http://www.spatialys.com
My software is free, but my time generally not.
Butcher of all kinds of standards, open or closed formats. At the end, this is just about bytes.


From sebastic at xs4all.nl  Fri Jan 10 09:18:42 2025
From: sebastic at xs4all.nl (Sebastiaan Couwenberg)
Date: Fri, 10 Jan 2025 18:18:42 +0100
Subject: [PROJ] README.DATA in PROJ-data
In-Reply-To: <38a94cdf-b2b1-471f-b395-909b11774ebe@spatialys.com>
References: <CADRrdKsV9gCFM5O-PUHojPHRSMnRuPrnZb9Yf5f+gFTYhjY3xg@mail.gmail.com>
 <38a94cdf-b2b1-471f-b395-909b11774ebe@spatialys.com>
Message-ID: <b3c57743-762d-46e8-9a6e-a75b181015c9@xs4all.nl>

On 1/10/25 5:25 PM, Even Rouault via PROJ wrote:
> Digging into history of the ancestor PROJ-datumgrid repository, I see commit https://github.com/OSGeo/proj-datumgrid/commit/8b98af747e4be28e45bb1a39c176102e858ada5c where README.md was renamed README.DATUMGRID , and that naming convention was perpetuated when creating PROJ-data. Maybe Sebastian recalls the reason? I suspect this might be related to some packaging best practice.

Because proj-datumgrid was extracted into the nad subdirectory of proj source tree overwriting the README there.

Kind Regards,

Bas

-- 
  GPG Key ID: 4096R/6750F10AE88D4AF1
Fingerprint: 8182 DE41 7056 408D 6146  50D1 6750 F10A E88D 4AF1

From pikl.m at czechglobe.cz  Fri Jan 10 13:06:02 2025
From: pikl.m at czechglobe.cz (Miroslav Pikl)
Date: Fri, 10 Jan 2025 21:06:02 +0000
Subject: [PROJ] proj grid not found
Message-ID: <AS8PR08MB73536E59638E04122E682F45841C2@AS8PR08MB7353.eurprd08.prod.outlook.com>

Hello,

I need to prepare a grid file to transform some airborne data.

I tried to follow description
https://proj.org/en/stable/specifications/geodetictiffgrids.html#geodetictiffgrids

and validated the grid with tool from
https://github.com/OSGeo/PROJ-data/tree/master

The grid file is placed in /usr/share/proj directory.
But when I try to test the horizontal gridshift I get following error

echo 5601804.80015816 6155138.44865926 291.032677173227 | cct -z0 -t0
> +proj=hgridshift +grids=cz_jtsk.tif
> proj_create: Error 1029 (File not found or invalid): hgridshift: could
> not find required grid(s).
> cct: Bad transformation arguments - (File not found or invalid)
>      'cct -h' for help

Other grid file from the same directory can be recognized.

Is it possible to indicate why the grid is not recognized?
The grid file is accessible from
[https://res.cdn.office.net/assets/mail/file-icon/png/photo_16x16.png]cz_jtsk.tif<https://uvgz-my.sharepoint.com/:i:/g/personal/pikl_m_czechglobe_cz/EWbKrKo-qRpOqBVPL8_1a1kBJKEnOQozCGyqpuPGYXos8Q?e=E2sd0j>

Thank you very much.
Miroslav


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250110/8d245040/attachment.htm>

From j1 at jimenezshaw.com  Sat Jan 11 09:02:13 2025
From: j1 at jimenezshaw.com (Javier Jimenez Shaw)
Date: Sat, 11 Jan 2025 18:02:13 +0100
Subject: [PROJ] proj grid not found
In-Reply-To: <AS8PR08MB73536E59638E04122E682F45841C2@AS8PR08MB7353.eurprd08.prod.outlook.com>
References: <AS8PR08MB73536E59638E04122E682F45841C2@AS8PR08MB7353.eurprd08.prod.outlook.com>
Message-ID: <CADRrdKuyECgj47v0OeUT79YKPeOXEdqR+u+cdMRq-bu5O16Xsg@mail.gmail.com>

Your file is projected (EPSG:5515) Is that working?
Looking at the documentation, it works only with geodetic coordinates
https://proj.org/en/stable/operations/transformations/hgridshift.html

Be careful, the axis order of the projection is southing-westing, to make
everything "easier".
https://spatialreference.org/ref/epsg/5515/


On Fri, 10 Jan 2025 at 22:06, Miroslav Pikl via PROJ <proj at lists.osgeo.org>
wrote:

> Hello,
>
> I need to prepare a grid file to transform some airborne data.
>
> I tried to follow description
>
> https://proj.org/en/stable/specifications/geodetictiffgrids.html#geodetictiffgrids
>
> and validated the grid with tool from
> https://github.com/OSGeo/PROJ-data/tree/master
>
> The grid file is placed in /usr/share/proj directory.
> But when I try to test the horizontal gridshift I get following error
>
> echo 5601804.80015816 6155138.44865926 291.032677173227 | cct -z0 -t0
> > +proj=hgridshift +grids=cz_jtsk.tif
> > proj_create: Error 1029 (File not found or invalid): hgridshift: could
> > not find required grid(s).
> > cct: Bad transformation arguments - (File not found or invalid)
> >      'cct -h' for help
>
> Other grid file from the same directory can be recognized.
>
> Is it possible to indicate why the grid is not recognized?
> The grid file is accessible from
> cz_jtsk.tif
> <https://uvgz-my.sharepoint.com/:i:/g/personal/pikl_m_czechglobe_cz/EWbKrKo-qRpOqBVPL8_1a1kBJKEnOQozCGyqpuPGYXos8Q?e=E2sd0j>
>
> Thank you very much.
> Miroslav
>
>
> _______________________________________________
> PROJ mailing list
> PROJ at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/proj
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/proj/attachments/20250111/72526661/attachment.htm>

From pikl.m at czechglobe.cz  Sat Jan 11 09:20:41 2025
From: pikl.m at czechglobe.cz (Miroslav Pikl)
Date: Sat, 11 Jan 2025 17:20:41 +0000
Subject: [PROJ] proj grid not found - SOLVED
In-Reply-To: <CADRrdKuyECgj47v0OeUT79YKPeOXEdqR+u+cdMRq-bu5O16Xsg@mail.gmail.com>
References: <AS8PR08MB73536E59638E04122E682F45841C2@AS8PR08MB7353.eurprd08.prod.outlook.com>
 <CADRrdKuyECgj47v0OeUT79YKPeOXEdqR+u+cdMRq-bu5O16Xsg@mail.gmail.com>
Message-ID: <acfd00f0e4713cb8fd61c34039907808cae430c9.camel@czechglobe.cz>

Hi,

great help, thank you. Exactly the push I needed. I have to use
gridshift instead of hgridshift. What a silly mistake.

I will test the the direction on some reference point with known
coordinates.

Thank you.

Best regards
Miroslav


On Sat, 2025-01-11 at 18:02 +0100, Javier Jimenez Shaw wrote:
> Your file is projected (EPSG:5515) Is that working?
> Looking at the documentation, it works only with geodetic coordinates
> https://proj.org/en/stable/operations/transformations/hgridshift.html
> 
> Be careful, the axis order of the projection is southing-westing, to
> make everything "easier".
> https://spatialreference.org/ref/epsg/5515/
> 
> 
> On Fri, 10 Jan 2025 at 22:06, Miroslav Pikl via PROJ
> <proj at lists.osgeo.org> wrote:
> > 
> > 
> > Hello,
> > 
> > 
> > I need to prepare a grid file to transform some airborne data.
> > 
> > 
> > I tried to follow description
> > 
> > https://proj.org/en/stable/specifications/geodetictiffgrids.html#geodetictiffgrids
> > 
> > 
> > and validated the grid with tool from?
> > 
> > https://github.com/OSGeo/PROJ-data/tree/master
> > 
> > 
> > The grid file is placed in /usr/share/proj directory.
> > But when I try to test the horizontal gridshift I get following
> > error
> > 
> > 
> > echo 5601804.80015816 6155138.44865926 291.032677173227 | cct -z0 -
> > t0
> > > +proj=hgridshift +grids=cz_jtsk.tif
> > > proj_create: Error 1029 (File not found or invalid): hgridshift:
> > > could
> > > not find required grid(s).
> > > cct: Bad transformation arguments - (File not found or invalid)
> > > ????? 'cct -h' for help
> > 
> > 
> > Other grid file from the same directory can be recognized.
> > 
> > 
> > Is it possible to indicate why the grid is not recognized?
> > The grid file is accessible from
> > 
> > cz_jtsk.tif
> > 
> > 
> > Thank you very much.
> > Miroslav
> > 
> > 
> > 
> > 
> > _______________________________________________
> > PROJ mailing list
> > PROJ at lists.osgeo.org
> > https://lists.osgeo.org/mailman/listinfo/proj


