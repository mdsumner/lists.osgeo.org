From howard at hobu.co  Thu Jan 23 08:19:17 2025
From: howard at hobu.co (Howard Butler)
Date: Thu, 23 Jan 2025 10:19:17 -0600
Subject: [pdal] =?utf-8?q?Fwd=3A_OGC_considering_LAZ_v1=2E4_=E2=80=93_R1_?=
 =?utf-8?q?as_a_Community_Standard=3B_comment_sought_on_the_work_item_prop?=
 =?utf-8?q?osal?=
References: <zcb.3z5e20da3ceb504c5fae99a0418ff44db2d351528ad4bd4c5551a9d870be556bd8.1126d1f68c606340f.1737648529970@zcmp.ogc.org>
Message-ID: <894C90FC-7A21-4204-B1B6-2F4F65833714@hobu.co>



> Begin forwarded message:
> 
> From: "OGC" <info at ogc.org>
> Subject: OGC considering LAZ v1.4 ? R1 as a Community Standard; comment sought on the work item proposal
> Date: January 23, 2025 at 10:08:49?AM CST
> To: howard at hobu.co
> Reply-To: info at ogc.org
> 
> Dear Technical Committee,
> 
> OGC is considering LAZ Specification Version 1.4 - R1 as a Community Standard. We're now requesting public comment on the work item proposal.
> 
> 
> 
> 
> OGC invites public comment on the proposed work item proposal to make LAZ 1.4 an OGC Community Standard. Stakeholders are encouraged to submit their comments by February 13, 2025. 
> 
> LAZ 1.4 provides a lossless compression scheme for LiDAR in binary LAS format version 1.4, reducing the file sizes to just 7% to 25% of their original volume. LAZ 1.4 enables on-the-fly compression and decompression in a streaming format and includes additional support for random access to LAS point data records. 
> 
> A reference implementation (LASzip) unencumbered by patents or intellectual property concerns is freely available with an Apache 2.0 license.  
> 
> LAZ 1.4 complements the LAS 1.4 Community Standard. Both occupy the same space, with the LAZ implementation bringing the advantage of compression. LAZ 1.4 is dependent and built upon the binary LAS format version 1.4, with the general LAS file structure, e.g., the header format, being used for the LAZ format too. 
> 
> The LAZ format is the de facto industry standard for compressed LiDAR and has been widely used in government, academia, and industry for many years. Most LiDAR software packages today already support the LAZ format, including rapidlasso?s LAStools LiDAR Processing Software, USGS?s 3DEP LidarExplorer, NOAA?s VDatum, NRCan?s LiDAR Point Clouds, Esri?s ArcGIS/ArcGIS Pro, Hexagon?s GeoCompressor, Trimble Business Center, and Bentley?s iTwin Capture Modeler. The LAZ format is used in large publicly available collections of LIDAR and Point Cloud data within government, academia, and industry, covering trillions of data points. 
> 
> Support for the approval of LAZ 1.4 as an OGC Community Standard has been provided by NOAA, USGS, NRCan, Esri, Bentley, Hexagon, Trimble, and others.  
> 
> The work item justification for the adoption of LAZ 1.4 as an OGC Community Standard is available for review and comment on the OGC Portal. Comments are due by February 13, 2025, and should be submitted via the method outlined at https://www.ogc.org/requests/laz-v1-4-community-standard-work-item-proposal/
> 
> Regards,
> OGC Staff.
> 
> 
> ----------------------------------------------------------------------
> This email was sent by info at ogc.org to howard at hobu.co
> 
> Not interested? Unsubscribe - https://jhsi-zgph.maillist-manage.com/ua/optout?od=3z5e20da3ceb504c5fae99a0418ff44db2d351528ad4bd4c5551a9d870be556bd8&rd=1126d1f68c606340f&sd=1126d1f68c606267b&n=11699e4c1e6b520
> 
> Update profile - https://jhsi-zgph.maillist-manage.com/ua/commpref?od=3z5e20da3ceb504c5fae99a0418ff44db2d351528ad4bd4c5551a9d870be556bd8&rd=1126d1f68c606340f&sd=1126d1f68c606267b&n=11699e4c1e6b520
> 
> 
> 
> 
> Open Geospatial Consortium (OGC) | 2300 Wilson Blvd, Suite 700-1026, Arlington, VA 22201, USA

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20250123/72bd5387/attachment.htm>

From howard at hobu.co  Thu Jan 23 10:48:09 2025
From: howard at hobu.co (Howard Butler)
Date: Thu, 23 Jan 2025 12:48:09 -0600
Subject: [pdal] Replacing Arbiter with GDAL's VSI?
Message-ID: <9EDE4106-F638-4E23-9683-5A18D060B89B@hobu.co>

All,

Recent tickets and pull requests to PDAL have shown that Arbiter's capabilities, especially for cloud object storage platforms that aren't AWS, are lacking in a number of areas. PDAL has previously used the Arbiter library [1] from Connor Manning to provide its virtual file access, but it wasn't designed to act in this role from the beginning, and it has evolved piecewise to be where it is today. Do we really want to keep investing to add capability there when it already exists in one of our dependencies?

GDAL's VSI [2] has also evolved to provide a virtual access layer, but it has more features, a wider testing footprint, and covers many more types of remote/alternative resources. Because PDAL already has a hard GDAL dependency, I'm writing to see if the user community would be enthusiastic about PDAL dropping Arbiter and leveraging VSI going forward.

A few things could help make this switchover less disruptive. First, PDAL 2.9 will introduce something called a "FileSpec" [3] that will allow the 'filename' in a pipeline to be an object with an arbitrary number of nodes under it. These could include typical configuration options. Second, I suspect that many are not fans of VSI's syntax. We would presumably allow users to specify 'filename' using VSI syntax, but also provide the ability for users to use proper protocol prefixes and define all security and other configuration information via the FileSpec. 

What say you?

Howard

[1] https://github.com/connormanning/arbiter
[2] https://gdal.org/en/stable/user/virtual_file_systems.html
[3] https://github.com/PDAL/PDAL/pull/4625

From kirk.waters at noaa.gov  Thu Jan 23 11:15:58 2025
From: kirk.waters at noaa.gov (Kirk Waters - NOAA Federal)
Date: Thu, 23 Jan 2025 14:15:58 -0500
Subject: [pdal] Replacing Arbiter with GDAL's VSI?
In-Reply-To: <9EDE4106-F638-4E23-9683-5A18D060B89B@hobu.co>
References: <9EDE4106-F638-4E23-9683-5A18D060B89B@hobu.co>
Message-ID: <CADm=QrTcfewSsWh1naJnfeEf2D0n173Hk2omfwyzwTkdtKwz2A@mail.gmail.com>

Howard,
I'm in favor of your proposal to switch to VSI. Admittedly, I haven't used
Arbiter much, but I have used the VSI mechanisms.

Kirk Waters, PhD
NOAA Office for Coastal Management
Applied Sciences Program
coast.noaa.gov/digitalcoast




On Thu, Jan 23, 2025 at 1:48?PM Howard Butler via pdal <pdal at lists.osgeo.org>
wrote:

> All,
>
> Recent tickets and pull requests to PDAL have shown that Arbiter's
> capabilities, especially for cloud object storage platforms that aren't
> AWS, are lacking in a number of areas. PDAL has previously used the Arbiter
> library [1] from Connor Manning to provide its virtual file access, but it
> wasn't designed to act in this role from the beginning, and it has evolved
> piecewise to be where it is today. Do we really want to keep investing to
> add capability there when it already exists in one of our dependencies?
>
> GDAL's VSI [2] has also evolved to provide a virtual access layer, but it
> has more features, a wider testing footprint, and covers many more types of
> remote/alternative resources. Because PDAL already has a hard GDAL
> dependency, I'm writing to see if the user community would be enthusiastic
> about PDAL dropping Arbiter and leveraging VSI going forward.
>
> A few things could help make this switchover less disruptive. First, PDAL
> 2.9 will introduce something called a "FileSpec" [3] that will allow the
> 'filename' in a pipeline to be an object with an arbitrary number of nodes
> under it. These could include typical configuration options. Second, I
> suspect that many are not fans of VSI's syntax. We would presumably allow
> users to specify 'filename' using VSI syntax, but also provide the ability
> for users to use proper protocol prefixes and define all security and other
> configuration information via the FileSpec.
>
> What say you?
>
> Howard
>
> [1] https://github.com/connormanning/arbiter
> [2] https://gdal.org/en/stable/user/virtual_file_systems.html
> [3] https://github.com/PDAL/PDAL/pull/4625
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20250123/92592d8a/attachment.htm>

From norman.barker at gmail.com  Thu Jan 23 11:24:34 2025
From: norman.barker at gmail.com (Norman Barker)
Date: Thu, 23 Jan 2025 13:24:34 -0600
Subject: [pdal] Replacing Arbiter with GDAL's VSI?
In-Reply-To: <9EDE4106-F638-4E23-9683-5A18D060B89B@hobu.co>
References: <9EDE4106-F638-4E23-9683-5A18D060B89B@hobu.co>
Message-ID: <CAN_Dn-GqOaMa59UAD6E6EZW19N6EFhGiwnSUkmjpT-LnaFKPQA@mail.gmail.com>

Howard,

I am in favour of moving to GDAL VSI as it has been well tested. There are
scenarios around chaining credentials that are not supported but most of
the functionality is there.

I am in favour of an `opener` style such as that in laspy and rasterio and
I wonder if that could be a file stage in PDAL. For now I use the Python
bindings and pass in numpy arrays to the pipeline.

An opener stage would also enable the use of TileDB VFS -
https://docs.tiledb.com/main/how-to/virtual-filesystem which allows access
to all files on remote storage (not just tiledb arrays) and could also be
used as a sink to live streams.

Norman

On Thu, Jan 23, 2025 at 12:56?PM Howard Butler via pdal <
pdal at lists.osgeo.org> wrote:

> All,
>
> Recent tickets and pull requests to PDAL have shown that Arbiter's
> capabilities, especially for cloud object storage platforms that aren't
> AWS, are lacking in a number of areas. PDAL has previously used the Arbiter
> library [1] from Connor Manning to provide its virtual file access, but it
> wasn't designed to act in this role from the beginning, and it has evolved
> piecewise to be where it is today. Do we really want to keep investing to
> add capability there when it already exists in one of our dependencies?
>
> GDAL's VSI [2] has also evolved to provide a virtual access layer, but it
> has more features, a wider testing footprint, and covers many more types of
> remote/alternative resources. Because PDAL already has a hard GDAL
> dependency, I'm writing to see if the user community would be enthusiastic
> about PDAL dropping Arbiter and leveraging VSI going forward.
>
> A few things could help make this switchover less disruptive. First, PDAL
> 2.9 will introduce something called a "FileSpec" [3] that will allow the
> 'filename' in a pipeline to be an object with an arbitrary number of nodes
> under it. These could include typical configuration options. Second, I
> suspect that many are not fans of VSI's syntax. We would presumably allow
> users to specify 'filename' using VSI syntax, but also provide the ability
> for users to use proper protocol prefixes and define all security and other
> configuration information via the FileSpec.
>
> What say you?
>
> Howard
>
> [1] https://github.com/connormanning/arbiter
> [2] https://gdal.org/en/stable/user/virtual_file_systems.html
> [3] https://github.com/PDAL/PDAL/pull/4625
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20250123/782005d1/attachment-0001.htm>

From runette at gmail.com  Thu Jan 23 11:25:26 2025
From: runette at gmail.com (Paul Harwood)
Date: Thu, 23 Jan 2025 19:25:26 +0000
Subject: [pdal] Replacing Arbiter with GDAL's VSI?
In-Reply-To: <CADm=QrTcfewSsWh1naJnfeEf2D0n173Hk2omfwyzwTkdtKwz2A@mail.gmail.com>
References: <9EDE4106-F638-4E23-9683-5A18D060B89B@hobu.co>
 <CADm=QrTcfewSsWh1naJnfeEf2D0n173Hk2omfwyzwTkdtKwz2A@mail.gmail.com>
Message-ID: <CAE8nN5Pp=8kRWM311Z78bOCEk2yz6LWv-AzXt6ZA2JqBXWVv4A@mail.gmail.com>

+1

On Thu, 23 Jan 2025, 19:16 Kirk Waters - NOAA Federal via pdal, <
pdal at lists.osgeo.org> wrote:

> Howard,
> I'm in favor of your proposal to switch to VSI. Admittedly, I haven't used
> Arbiter much, but I have used the VSI mechanisms.
>
> Kirk Waters, PhD
> NOAA Office for Coastal Management
> Applied Sciences Program
> coast.noaa.gov/digitalcoast
>
>
>
>
> On Thu, Jan 23, 2025 at 1:48?PM Howard Butler via pdal <
> pdal at lists.osgeo.org> wrote:
>
>> All,
>>
>> Recent tickets and pull requests to PDAL have shown that Arbiter's
>> capabilities, especially for cloud object storage platforms that aren't
>> AWS, are lacking in a number of areas. PDAL has previously used the Arbiter
>> library [1] from Connor Manning to provide its virtual file access, but it
>> wasn't designed to act in this role from the beginning, and it has evolved
>> piecewise to be where it is today. Do we really want to keep investing to
>> add capability there when it already exists in one of our dependencies?
>>
>> GDAL's VSI [2] has also evolved to provide a virtual access layer, but it
>> has more features, a wider testing footprint, and covers many more types of
>> remote/alternative resources. Because PDAL already has a hard GDAL
>> dependency, I'm writing to see if the user community would be enthusiastic
>> about PDAL dropping Arbiter and leveraging VSI going forward.
>>
>> A few things could help make this switchover less disruptive. First, PDAL
>> 2.9 will introduce something called a "FileSpec" [3] that will allow the
>> 'filename' in a pipeline to be an object with an arbitrary number of nodes
>> under it. These could include typical configuration options. Second, I
>> suspect that many are not fans of VSI's syntax. We would presumably allow
>> users to specify 'filename' using VSI syntax, but also provide the ability
>> for users to use proper protocol prefixes and define all security and other
>> configuration information via the FileSpec.
>>
>> What say you?
>>
>> Howard
>>
>> [1] https://github.com/connormanning/arbiter
>> [2] https://gdal.org/en/stable/user/virtual_file_systems.html
>> [3] https://github.com/PDAL/PDAL/pull/4625
>> _______________________________________________
>> pdal mailing list
>> pdal at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/pdal
>>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20250123/7eeb2651/attachment.htm>

From norman.barker at gmail.com  Wed Jan 29 11:02:12 2025
From: norman.barker at gmail.com (Norman Barker)
Date: Wed, 29 Jan 2025 13:02:12 -0600
Subject: [pdal] Replacing Arbiter with GDAL's VSI?
In-Reply-To: <CAE8nN5Pp=8kRWM311Z78bOCEk2yz6LWv-AzXt6ZA2JqBXWVv4A@mail.gmail.com>
References: <9EDE4106-F638-4E23-9683-5A18D060B89B@hobu.co>
 <CADm=QrTcfewSsWh1naJnfeEf2D0n173Hk2omfwyzwTkdtKwz2A@mail.gmail.com>
 <CAE8nN5Pp=8kRWM311Z78bOCEk2yz6LWv-AzXt6ZA2JqBXWVv4A@mail.gmail.com>
Message-ID: <CAN_Dn-GP-Y=WeWLc9VWo2H0oesi0xvTZ84ZnPFUFd-muWbq9TQ@mail.gmail.com>

Howard,

I have been looking into this further and I would like to better understand
how you envision using FileSpec and VSI to move over from Arbiter.

Taking the LasReader for example and in particular this line -
https://github.com/PDAL/PDAL/blob/master/io/LasReader.cpp#L257 where
arbiter copies the LAS file locally, a direct replacement with VSI will
also download the whole file. A Virtual File System (such as that in TileDB
VFS) will allow reading the LAS header and then reading the file in chunks
of bytes. I think the latter is preferable and am happy to help add it.
This is similar to adding an opener to GDAL or LasPy.

Norman

On Thu, Jan 23, 2025 at 1:25?PM Paul Harwood via pdal <pdal at lists.osgeo.org>
wrote:

> +1
>
> On Thu, 23 Jan 2025, 19:16 Kirk Waters - NOAA Federal via pdal, <
> pdal at lists.osgeo.org> wrote:
>
>> Howard,
>> I'm in favor of your proposal to switch to VSI. Admittedly, I haven't
>> used Arbiter much, but I have used the VSI mechanisms.
>>
>> Kirk Waters, PhD
>> NOAA Office for Coastal Management
>> Applied Sciences Program
>> coast.noaa.gov/digitalcoast
>>
>>
>>
>>
>> On Thu, Jan 23, 2025 at 1:48?PM Howard Butler via pdal <
>> pdal at lists.osgeo.org> wrote:
>>
>>> All,
>>>
>>> Recent tickets and pull requests to PDAL have shown that Arbiter's
>>> capabilities, especially for cloud object storage platforms that aren't
>>> AWS, are lacking in a number of areas. PDAL has previously used the Arbiter
>>> library [1] from Connor Manning to provide its virtual file access, but it
>>> wasn't designed to act in this role from the beginning, and it has evolved
>>> piecewise to be where it is today. Do we really want to keep investing to
>>> add capability there when it already exists in one of our dependencies?
>>>
>>> GDAL's VSI [2] has also evolved to provide a virtual access layer, but
>>> it has more features, a wider testing footprint, and covers many more types
>>> of remote/alternative resources. Because PDAL already has a hard GDAL
>>> dependency, I'm writing to see if the user community would be enthusiastic
>>> about PDAL dropping Arbiter and leveraging VSI going forward.
>>>
>>> A few things could help make this switchover less disruptive. First,
>>> PDAL 2.9 will introduce something called a "FileSpec" [3] that will allow
>>> the 'filename' in a pipeline to be an object with an arbitrary number of
>>> nodes under it. These could include typical configuration options. Second,
>>> I suspect that many are not fans of VSI's syntax. We would presumably allow
>>> users to specify 'filename' using VSI syntax, but also provide the ability
>>> for users to use proper protocol prefixes and define all security and other
>>> configuration information via the FileSpec.
>>>
>>> What say you?
>>>
>>> Howard
>>>
>>> [1] https://github.com/connormanning/arbiter
>>> [2] https://gdal.org/en/stable/user/virtual_file_systems.html
>>> [3] https://github.com/PDAL/PDAL/pull/4625
>>> _______________________________________________
>>> pdal mailing list
>>> pdal at lists.osgeo.org
>>> https://lists.osgeo.org/mailman/listinfo/pdal
>>>
>> _______________________________________________
>> pdal mailing list
>> pdal at lists.osgeo.org
>> https://lists.osgeo.org/mailman/listinfo/pdal
>>
> _______________________________________________
> pdal mailing list
> pdal at lists.osgeo.org
> https://lists.osgeo.org/mailman/listinfo/pdal
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20250129/0613ade6/attachment.htm>

From andrew.bell.ia at gmail.com  Wed Jan 29 12:10:50 2025
From: andrew.bell.ia at gmail.com (Andrew Bell)
Date: Wed, 29 Jan 2025 15:10:50 -0500
Subject: [pdal] Replacing Arbiter with GDAL's VSI?
In-Reply-To: <CAN_Dn-GP-Y=WeWLc9VWo2H0oesi0xvTZ84ZnPFUFd-muWbq9TQ@mail.gmail.com>
References: <9EDE4106-F638-4E23-9683-5A18D060B89B@hobu.co>
 <CADm=QrTcfewSsWh1naJnfeEf2D0n173Hk2omfwyzwTkdtKwz2A@mail.gmail.com>
 <CAE8nN5Pp=8kRWM311Z78bOCEk2yz6LWv-AzXt6ZA2JqBXWVv4A@mail.gmail.com>
 <CAN_Dn-GP-Y=WeWLc9VWo2H0oesi0xvTZ84ZnPFUFd-muWbq9TQ@mail.gmail.com>
Message-ID: <CACJ51z3FvdQR2ndcack-jC5cZ=wDyLes9iYov_j0qigx+u0maQ@mail.gmail.com>

On Wed, Jan 29, 2025 at 2:02?PM Norman Barker via pdal <pdal at lists.osgeo.org>
wrote:

> Howard,
>
> I have been looking into this further and I would like to better
> understand how you envision using FileSpec and VSI to move over from
> Arbiter.
>
> Taking the LasReader for example and in particular this line -
> https://github.com/PDAL/PDAL/blob/master/io/LasReader.cpp#L257 where
> arbiter copies the LAS file locally, a direct replacement with VSI will
> also download the whole file.
>

FileSpec doesn't really have anything to do with fetching remote files. It
just provides a uniform way to communicate options that may be related to
remote access or perhaps some other file operations.

I don't know that we really need/want a virtual file system in PDAL. This
could end up being a hugely complicated thing that takes over. But it is
useful to fetch blocks of data from remote storage. Right now we do this
with a little helper class and Arbiter. This makes sense if you don't know
the order in which you're going to fetch data or if you're going to need
the entire file.

In most cases we do read all the data when dealing with a file, but it's
not always sequential. LAS places metadata at the beginning and end of the
file. You have to read those first before processing the actual data. But
after that you (mostly) read the data sequentially. So in a perfect world
you would pre-fetch data as you go. But this gets complex and the access
pattern isn't absolutely sequential -- the code is threaded in order to
have plenty of CPUs doing decompression, which is typically the gating
factor.  Certainly you could request blocks of data as necessary, but then
you're waiting on a round-trip to the server. To some extent this issue
could be alleviated with more threads or async I/O, but it's all
complicated. COPC does random access on remote data, so
pre-fetching probably doesn't make sense for it. EPT is another thing
altogether in that you read entire files as you need them. I haven't done a
survey of other readers.

Writing to temporary disk isn't necessarily a big deal.  Data may never
actually go to disk if you have sufficient memory to store the pages. The
obvious disadvantage of the fetch-then-process model is that you need to
wait until all the network traffic is done before you can start real
processing. The advantage is simplicity.

Anyway, I don't think doing this transparently in the code is going to
yield the best outcome. Perhaps a VFS-thing would make sense, but I don't
think it's an obvious win. I know that GDAL's VSI has various limitations.
Probably all do. I think we have a certain strength in the simplicity of
what's there now. I'd like to see some experimentation before we commit to
anything.

Note that this issue is a different one than providing more information to
use when accessing remote sources (credentials, regions, chunk size, etc.)

-- 
Andrew Bell
andrew.bell.ia at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20250129/69f3ea0d/attachment.htm>

From norman.barker at gmail.com  Wed Jan 29 15:15:01 2025
From: norman.barker at gmail.com (Norman Barker)
Date: Wed, 29 Jan 2025 17:15:01 -0600
Subject: [pdal] Replacing Arbiter with GDAL's VSI?
In-Reply-To: <CACJ51z3FvdQR2ndcack-jC5cZ=wDyLes9iYov_j0qigx+u0maQ@mail.gmail.com>
References: <9EDE4106-F638-4E23-9683-5A18D060B89B@hobu.co>
 <CADm=QrTcfewSsWh1naJnfeEf2D0n173Hk2omfwyzwTkdtKwz2A@mail.gmail.com>
 <CAE8nN5Pp=8kRWM311Z78bOCEk2yz6LWv-AzXt6ZA2JqBXWVv4A@mail.gmail.com>
 <CAN_Dn-GP-Y=WeWLc9VWo2H0oesi0xvTZ84ZnPFUFd-muWbq9TQ@mail.gmail.com>
 <CACJ51z3FvdQR2ndcack-jC5cZ=wDyLes9iYov_j0qigx+u0maQ@mail.gmail.com>
Message-ID: <CAN_Dn-E25RMscZehtr8dkfsp-b7F_Mn0Z9t15hkXmZyYwOMJUA@mail.gmail.com>

Andrew,

Thanks for the details.

Writing to temp is a blocker for distributed processing of a region of a
LAS file (which yes, you probably want to use COPC for if the source is
LAS) as each processing node has to download the file and may not have the
space. If the data is not well ordered but the data and processing is in
the same region then it is feasible to do the extra file seeks at
additional cost (time if network, $s as well if cloud).

Would a good start be to add GDAL VSI in FileUtils for the open and
close methods as an experiment? This would be harmless, if the prefix
starts with /vsi then use GDAL and if not fall back to the existing access
methods. I can give this a try and put up a PR.

Norman

On Wed, Jan 29, 2025 at 2:11?PM Andrew Bell <andrew.bell.ia at gmail.com>
wrote:

>
>
> On Wed, Jan 29, 2025 at 2:02?PM Norman Barker via pdal <
> pdal at lists.osgeo.org> wrote:
>
>> Howard,
>>
>> I have been looking into this further and I would like to better
>> understand how you envision using FileSpec and VSI to move over from
>> Arbiter.
>>
>> Taking the LasReader for example and in particular this line -
>> https://github.com/PDAL/PDAL/blob/master/io/LasReader.cpp#L257 where
>> arbiter copies the LAS file locally, a direct replacement with VSI will
>> also download the whole file.
>>
>
> FileSpec doesn't really have anything to do with fetching remote files. It
> just provides a uniform way to communicate options that may be related to
> remote access or perhaps some other file operations.
>
> I don't know that we really need/want a virtual file system in PDAL. This
> could end up being a hugely complicated thing that takes over. But it is
> useful to fetch blocks of data from remote storage. Right now we do this
> with a little helper class and Arbiter. This makes sense if you don't know
> the order in which you're going to fetch data or if you're going to need
> the entire file.
>
> In most cases we do read all the data when dealing with a file, but it's
> not always sequential. LAS places metadata at the beginning and end of the
> file. You have to read those first before processing the actual data. But
> after that you (mostly) read the data sequentially. So in a perfect world
> you would pre-fetch data as you go. But this gets complex and the access
> pattern isn't absolutely sequential -- the code is threaded in order to
> have plenty of CPUs doing decompression, which is typically the gating
> factor.  Certainly you could request blocks of data as necessary, but then
> you're waiting on a round-trip to the server. To some extent this issue
> could be alleviated with more threads or async I/O, but it's all
> complicated. COPC does random access on remote data, so
> pre-fetching probably doesn't make sense for it. EPT is another thing
> altogether in that you read entire files as you need them. I haven't done a
> survey of other readers.
>
> Writing to temporary disk isn't necessarily a big deal.  Data may never
> actually go to disk if you have sufficient memory to store the pages. The
> obvious disadvantage of the fetch-then-process model is that you need to
> wait until all the network traffic is done before you can start real
> processing. The advantage is simplicity.
>
> Anyway, I don't think doing this transparently in the code is going to
> yield the best outcome. Perhaps a VFS-thing would make sense, but I don't
> think it's an obvious win. I know that GDAL's VSI has various limitations.
> Probably all do. I think we have a certain strength in the simplicity of
> what's there now. I'd like to see some experimentation before we commit to
> anything.
>
> Note that this issue is a different one than providing more information to
> use when accessing remote sources (credentials, regions, chunk size, etc.)
>
> --
> Andrew Bell
> andrew.bell.ia at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.osgeo.org/pipermail/pdal/attachments/20250129/775de56a/attachment.htm>

From howard at hobu.co  Fri Jan 31 13:01:41 2025
From: howard at hobu.co (Howard Butler)
Date: Fri, 31 Jan 2025 15:01:41 -0600
Subject: [pdal] Replacing Arbiter with GDAL's VSI?
In-Reply-To: <CAN_Dn-E25RMscZehtr8dkfsp-b7F_Mn0Z9t15hkXmZyYwOMJUA@mail.gmail.com>
References: <9EDE4106-F638-4E23-9683-5A18D060B89B@hobu.co>
 <CADm=QrTcfewSsWh1naJnfeEf2D0n173Hk2omfwyzwTkdtKwz2A@mail.gmail.com>
 <CAE8nN5Pp=8kRWM311Z78bOCEk2yz6LWv-AzXt6ZA2JqBXWVv4A@mail.gmail.com>
 <CAN_Dn-GP-Y=WeWLc9VWo2H0oesi0xvTZ84ZnPFUFd-muWbq9TQ@mail.gmail.com>
 <CACJ51z3FvdQR2ndcack-jC5cZ=wDyLes9iYov_j0qigx+u0maQ@mail.gmail.com>
 <CAN_Dn-E25RMscZehtr8dkfsp-b7F_Mn0Z9t15hkXmZyYwOMJUA@mail.gmail.com>
Message-ID: <71896684-FF6A-45F9-8D22-87775762F3C7@hobu.co>



> On Jan 29, 2025, at 5:15?PM, Norman Barker via pdal <pdal at lists.osgeo.org> wrote:
> 
> Would a good start be to add GDAL VSI in FileUtils for the open and close methods as an experiment? This would be harmless, if the prefix starts with /vsi then use GDAL and if not fall back to the existing access methods. I can give this a try and put up a PR.

I would be very interested in such an experiment. I'll promise not to merge it right away ;)
Howard

